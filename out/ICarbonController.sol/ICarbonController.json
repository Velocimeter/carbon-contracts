{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "accumulatedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        }
      ],
      "name": "calculateTradeSourceAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        }
      ],
      "name": "calculateTradeTargetAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerType",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            }
          ],
          "internalType": "struct Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "orders",
          "type": "tuple[2]"
        }
      ],
      "name": "createStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "deleteStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "pair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            }
          ],
          "internalType": "struct Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "pairTradingFeePPM",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "Token[2][]",
          "name": "",
          "type": "address[2][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "strategiesByPair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]"
            }
          ],
          "internalType": "struct Strategy[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "strategiesByPairCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "strategy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]"
            }
          ],
          "internalType": "struct Strategy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "minReturn",
          "type": "uint128"
        }
      ],
      "name": "tradeBySourceAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "maxInput",
          "type": "uint128"
        }
      ],
      "name": "tradeByTargetAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradingFeePPM",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "currentOrders",
          "type": "tuple[2]"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "newOrders",
          "type": "tuple[2]"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "accumulatedFees(address)": "fcf66664",
    "calculateTradeSourceAmount(address,address,(uint256,uint128)[])": "f2bda26d",
    "calculateTradeTargetAmount(address,address,(uint256,uint128)[])": "2ab2fad1",
    "controllerType()": "b76040cd",
    "createPair(address,address)": "c9c65396",
    "createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])": "f727473a",
    "deleteStrategy(uint256)": "87302037",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "pair(address,address)": "8672d545",
    "pairTradingFeePPM(address,address)": "ba0a868b",
    "pairs()": "ffb0a4a0",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "strategiesByPair(address,address,uint256,uint256)": "f74dad81",
    "strategiesByPairCount(address,address)": "322cf844",
    "strategy(uint256)": "bc88d7e4",
    "tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)": "f1c5e014",
    "tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)": "102ee9ba",
    "tradingFeePPM()": "f06f8acd",
    "updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])": "21589fa1",
    "version()": "54fd4d50",
    "withdrawFees(address,uint256,address)": "9ba372c2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"accumulatedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"}],\"name\":\"calculateTradeSourceAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"}],\"name\":\"calculateTradeTargetAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerType\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"}],\"internalType\":\"struct Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"deleteStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"}],\"internalType\":\"struct Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairTradingFeePPM\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"Token[2][]\",\"name\":\"\",\"type\":\"address[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"strategiesByPair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"strategiesByPairCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"strategy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"internalType\":\"struct Strategy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"minReturn\",\"type\":\"uint128\"}],\"name\":\"tradeBySourceAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"maxInput\",\"type\":\"uint128\"}],\"name\":\"tradeByTargetAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeePPM\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"currentOrders\",\"type\":\"tuple[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"newOrders\",\"type\":\"tuple[2]\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Carbon Controller interface\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"accumulatedFees(address)\":{\"details\":\"returns the amount of fees accumulated for the specified token\"},\"calculateTradeSourceAmount(address,address,(uint256,uint128)[])\":{\"details\":\"returns the source amount required when trading by target amount\"},\"calculateTradeTargetAmount(address,address,(uint256,uint128)[])\":{\"details\":\"returns the target amount expected when trading by source amount\"},\"controllerType()\":{\"details\":\"returns the type of the controller\"},\"createPair(address,address)\":{\"details\":\"creates a new pair of provided token0 and token1\"},\"createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])\":{\"details\":\"creates a new strategy, returns the strategy's id requirements: - the caller must have approved the tokens with assigned liquidity in the order, if any\"},\"deleteStrategy(uint256)\":{\"details\":\"deletes a strategy matching the provided id notes: - 100% of liquidity is withdrawn and sent to the owner requirements: - the caller must be the owner of the NFT voucher\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"pair(address,address)\":{\"details\":\"returns a pair's metadata matching the provided token0 and token1\"},\"pairTradingFeePPM(address,address)\":{\"details\":\"returns the trading fee for a given pair (in units of PPM)\"},\"pairs()\":{\"details\":\"returns a list of all supported pairs\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"strategiesByPair(address,address,uint256,uint256)\":{\"details\":\"returns strategies belonging to a specific pair note that for the full list of strategies pass 0 to both startIndex and endIndex\"},\"strategiesByPairCount(address,address)\":{\"details\":\"returns the count of strategies belonging to a specific pair\"},\"strategy(uint256)\":{\"details\":\"returns a strategy matching the provided id, note tokens and orders are returned sorted as provided upon creation\"},\"tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)\":{\"details\":\"performs a trade by specifying a fixed source amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token\"},\"tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)\":{\"details\":\"performs a trade by specifying a fixed target amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token\"},\"tradingFeePPM()\":{\"details\":\"returns the trading fee (in units of PPM)\"},\"updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])\":{\"details\":\"updates an existing strategy notes: - currentOrders should reflect the orders values at the time of sending the tx this prevents cases in which the strategy was updated due to a trade between the time the transaction was sent and the time it was mined, thus, giving more control to the strategy owner. - reduced liquidity is refunded to the owner - increased liquidity is deposited - excess native token is returned to the sender if any - the sorting of orders is expected to equal the sorting upon creation requirements: - the caller must have approved the tokens with increased liquidity, if any\"},\"withdrawFees(address,uint256,address)\":{\"details\":\"transfers the accumulated fees to the specified recipient notes: `amount` is capped to the available amount returns the amount withdrawn\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/carbon/interfaces/ICarbonController.sol\":\"ICarbonController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@bancor/=node_modules/@bancor/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@mean-finance/=node_modules/@mean-finance/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/carbon/Pairs.sol\":{\"keccak256\":\"0xf93c805727414083085098262481ac9def2bdeafcb71934234b0b92cc6320551\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://9e20dd667bc2da286024e68e30924dacf9e5eef9d750bd3af879c46065afda63\",\"dweb:/ipfs/QmW6DpK4egvQAXUH3z1iuUBNjEMRksegFcEKQ2HQPgUqv7\"]},\"contracts/carbon/Strategies.sol\":{\"keccak256\":\"0xba59c67b8d76573fd75a71fa1ef572044d6fcd936fa925c0933227f958bfe6c7\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://37313cc5b1b04ab8d7fee913972b65e1e614d922039b7c7a89b52456ac185d1d\",\"dweb:/ipfs/QmRKGWAcaNtFbbvQ8j4oVkdWaeNEc7awohDJ2akCn8NaNg\"]},\"contracts/carbon/interfaces/ICarbonController.sol\":{\"keccak256\":\"0xf495e13cd389a72edea6e37db3ae5b419718eea5efc2cfb48259747c2399ff15\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://cae2932b36654b8bd93b86f38fa926a2db359e6f0531cec7286109e164d651f5\",\"dweb:/ipfs/QmWHyTrivw9cNP35LTpTmBU8DmpE9hAseUNDxCvbAGVmpE\"]},\"contracts/token/Token.sol\":{\"keccak256\":\"0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521\",\"dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi\"]},\"contracts/utility/Constants.sol\":{\"keccak256\":\"0x6cbf2c0e48b5377fe5fea47278256856368612efd7e29b17c716f1611b64d0f3\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://3ad5afc72e4194aa21ac7c02801e6031076bfcd1689f444071b18a123b14884a\",\"dweb:/ipfs/QmdQ4EJgQs6h3oKqh38fbqHnzoEb3Mt26BKiHuesYkTb2f\"]},\"contracts/utility/Fraction.sol\":{\"keccak256\":\"0x84c801ef901e7fd30e99637377b29dfa28c6c1fa140adb5c872fddd8b82fd358\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f7aa812bdb61aa1fff9dc357d67309fb104e08b1bfcf13d2e12cb7adea036c19\",\"dweb:/ipfs/QmYNvFA6HbG5mwfZjHUPLNqRFUfHhqQH346PiHY6cEpxAD\"]},\"contracts/utility/MathEx.sol\":{\"keccak256\":\"0x2ff481334338c5d5b13f918a3a58dfebb9ec3329848117acd7ac7e63382664c5\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://a411ed9456feb5fcf7414a6eae0adf8c63be63c73cf7abdc6218b3bd3b03ff74\",\"dweb:/ipfs/Qme7bfmJra8Wyv1DWT4v5keQsxSigSSMmWQW21GdBqJ4E4\"]},\"contracts/utility/Utils.sol\":{\"keccak256\":\"0xf6f3ad1ec3ee378729ebe1ffc0ac72e95a6353a9ec5b85fdf3e4c3b0f54a5f1e\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://fe8ad2c267dd51f7347c2939ede51a74e603cce0ac4fbad256d6d723bdc66675\",\"dweb:/ipfs/QmQDzduCwAnZca5QHRrqJjPYbggA8jKTCwswoch7dzL744\"]},\"contracts/utility/interfaces/IUpgradeable.sol\":{\"keccak256\":\"0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978\",\"dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU\"]},\"contracts/utility/interfaces/IVersioned.sol\":{\"keccak256\":\"0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51\",\"dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif\"]},\"contracts/voucher/interfaces/IVoucher.sol\":{\"keccak256\":\"0x989f053712ccd26f2d5dfde61f149882a73cb07892f0f2f2ade13e0fd8ded054\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://082409c5265f905ca7f0a46f5ba67dd7d806538a83a272ddad8b5dec0288764a\",\"dweb:/ipfs/QmRh4tkxALT6sJJrzm6aokWqPCEdkGHvBrV2VkkMWDRNUW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "accumulatedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTradeSourceAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTradeTargetAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "controllerType",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPair",
          "outputs": [
            {
              "internalType": "struct Pair",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "id",
                  "type": "uint128"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pair",
          "outputs": [
            {
              "internalType": "struct Pair",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "id",
                  "type": "uint128"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pairTradingFeePPM",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pairs",
          "outputs": [
            {
              "internalType": "Token[2][]",
              "name": "",
              "type": "address[2][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesByPair",
          "outputs": [
            {
              "internalType": "struct Strategy[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                },
                {
                  "internalType": "struct Order[2]",
                  "name": "orders",
                  "type": "tuple[2]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "y",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "z",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "A",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "B",
                      "type": "uint64"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesByPairCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategy",
          "outputs": [
            {
              "internalType": "struct Strategy",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                },
                {
                  "internalType": "struct Order[2]",
                  "name": "orders",
                  "type": "tuple[2]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "y",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "z",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "A",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "B",
                      "type": "uint64"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "minReturn",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tradeBySourceAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "maxInput",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tradeByTargetAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradingFeePPM",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "struct Order[2]",
              "name": "currentOrders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct Order[2]",
              "name": "newOrders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accumulatedFees(address)": {
            "details": "returns the amount of fees accumulated for the specified token"
          },
          "calculateTradeSourceAmount(address,address,(uint256,uint128)[])": {
            "details": "returns the source amount required when trading by target amount"
          },
          "calculateTradeTargetAmount(address,address,(uint256,uint128)[])": {
            "details": "returns the target amount expected when trading by source amount"
          },
          "controllerType()": {
            "details": "returns the type of the controller"
          },
          "createPair(address,address)": {
            "details": "creates a new pair of provided token0 and token1"
          },
          "createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])": {
            "details": "creates a new strategy, returns the strategy's id requirements: - the caller must have approved the tokens with assigned liquidity in the order, if any"
          },
          "deleteStrategy(uint256)": {
            "details": "deletes a strategy matching the provided id notes: - 100% of liquidity is withdrawn and sent to the owner requirements: - the caller must be the owner of the NFT voucher"
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "pair(address,address)": {
            "details": "returns a pair's metadata matching the provided token0 and token1"
          },
          "pairTradingFeePPM(address,address)": {
            "details": "returns the trading fee for a given pair (in units of PPM)"
          },
          "pairs()": {
            "details": "returns a list of all supported pairs"
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "strategiesByPair(address,address,uint256,uint256)": {
            "details": "returns strategies belonging to a specific pair note that for the full list of strategies pass 0 to both startIndex and endIndex"
          },
          "strategiesByPairCount(address,address)": {
            "details": "returns the count of strategies belonging to a specific pair"
          },
          "strategy(uint256)": {
            "details": "returns a strategy matching the provided id, note tokens and orders are returned sorted as provided upon creation"
          },
          "tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)": {
            "details": "performs a trade by specifying a fixed source amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token"
          },
          "tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)": {
            "details": "performs a trade by specifying a fixed target amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token"
          },
          "tradingFeePPM()": {
            "details": "returns the trading fee (in units of PPM)"
          },
          "updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])": {
            "details": "updates an existing strategy notes: - currentOrders should reflect the orders values at the time of sending the tx this prevents cases in which the strategy was updated due to a trade between the time the transaction was sent and the time it was mined, thus, giving more control to the strategy owner. - reduced liquidity is refunded to the owner - increased liquidity is deposited - excess native token is returned to the sender if any - the sorting of orders is expected to equal the sorting upon creation requirements: - the caller must have approved the tokens with increased liquidity, if any"
          },
          "withdrawFees(address,uint256,address)": {
            "details": "transfers the accumulated fees to the specified recipient notes: `amount` is capped to the available amount returns the amount withdrawn"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@bancor/=node_modules/@bancor/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@mean-finance/=node_modules/@mean-finance/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/carbon/interfaces/ICarbonController.sol": "ICarbonController"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/carbon/Pairs.sol": {
        "keccak256": "0xf93c805727414083085098262481ac9def2bdeafcb71934234b0b92cc6320551",
        "urls": [
          "bzz-raw://9e20dd667bc2da286024e68e30924dacf9e5eef9d750bd3af879c46065afda63",
          "dweb:/ipfs/QmW6DpK4egvQAXUH3z1iuUBNjEMRksegFcEKQ2HQPgUqv7"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/carbon/Strategies.sol": {
        "keccak256": "0xba59c67b8d76573fd75a71fa1ef572044d6fcd936fa925c0933227f958bfe6c7",
        "urls": [
          "bzz-raw://37313cc5b1b04ab8d7fee913972b65e1e614d922039b7c7a89b52456ac185d1d",
          "dweb:/ipfs/QmRKGWAcaNtFbbvQ8j4oVkdWaeNEc7awohDJ2akCn8NaNg"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/carbon/interfaces/ICarbonController.sol": {
        "keccak256": "0xf495e13cd389a72edea6e37db3ae5b419718eea5efc2cfb48259747c2399ff15",
        "urls": [
          "bzz-raw://cae2932b36654b8bd93b86f38fa926a2db359e6f0531cec7286109e164d651f5",
          "dweb:/ipfs/QmWHyTrivw9cNP35LTpTmBU8DmpE9hAseUNDxCvbAGVmpE"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/token/Token.sol": {
        "keccak256": "0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53",
        "urls": [
          "bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521",
          "dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Constants.sol": {
        "keccak256": "0x6cbf2c0e48b5377fe5fea47278256856368612efd7e29b17c716f1611b64d0f3",
        "urls": [
          "bzz-raw://3ad5afc72e4194aa21ac7c02801e6031076bfcd1689f444071b18a123b14884a",
          "dweb:/ipfs/QmdQ4EJgQs6h3oKqh38fbqHnzoEb3Mt26BKiHuesYkTb2f"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Fraction.sol": {
        "keccak256": "0x84c801ef901e7fd30e99637377b29dfa28c6c1fa140adb5c872fddd8b82fd358",
        "urls": [
          "bzz-raw://f7aa812bdb61aa1fff9dc357d67309fb104e08b1bfcf13d2e12cb7adea036c19",
          "dweb:/ipfs/QmYNvFA6HbG5mwfZjHUPLNqRFUfHhqQH346PiHY6cEpxAD"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/MathEx.sol": {
        "keccak256": "0x2ff481334338c5d5b13f918a3a58dfebb9ec3329848117acd7ac7e63382664c5",
        "urls": [
          "bzz-raw://a411ed9456feb5fcf7414a6eae0adf8c63be63c73cf7abdc6218b3bd3b03ff74",
          "dweb:/ipfs/Qme7bfmJra8Wyv1DWT4v5keQsxSigSSMmWQW21GdBqJ4E4"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Utils.sol": {
        "keccak256": "0xf6f3ad1ec3ee378729ebe1ffc0ac72e95a6353a9ec5b85fdf3e4c3b0f54a5f1e",
        "urls": [
          "bzz-raw://fe8ad2c267dd51f7347c2939ede51a74e603cce0ac4fbad256d6d723bdc66675",
          "dweb:/ipfs/QmQDzduCwAnZca5QHRrqJjPYbggA8jKTCwswoch7dzL744"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IUpgradeable.sol": {
        "keccak256": "0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c",
        "urls": [
          "bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978",
          "dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IVersioned.sol": {
        "keccak256": "0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04",
        "urls": [
          "bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51",
          "dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/voucher/interfaces/IVoucher.sol": {
        "keccak256": "0x989f053712ccd26f2d5dfde61f149882a73cb07892f0f2f2ade13e0fd8ded054",
        "urls": [
          "bzz-raw://082409c5265f905ca7f0a46f5ba67dd7d806538a83a272ddad8b5dec0288764a",
          "dweb:/ipfs/QmRh4tkxALT6sJJrzm6aokWqPCEdkGHvBrV2VkkMWDRNUW"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f",
        "urls": [
          "bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f",
          "dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/carbon/interfaces/ICarbonController.sol",
    "id": 4464,
    "exportedSymbols": {
      "ICarbonController": [
        4463
      ],
      "IUpgradeable": [
        9115
      ],
      "Order": [
        1491
      ],
      "Pair": [
        1098
      ],
      "Strategy": [
        1513
      ],
      "Token": [
        7445
      ],
      "TradeAction": [
        1518
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:5595:3",
    "nodes": [
      {
        "id": 4217,
        "nodeType": "PragmaDirective",
        "src": "51:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 4219,
        "nodeType": "ImportDirective",
        "src": "76:73:3",
        "nodes": [],
        "absolutePath": "contracts/utility/interfaces/IUpgradeable.sol",
        "file": "../../utility/interfaces/IUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4464,
        "sourceUnit": 9116,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4218,
              "name": "IUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9115,
              "src": "85:12:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4221,
        "nodeType": "ImportDirective",
        "src": "150:36:3",
        "nodes": [],
        "absolutePath": "contracts/carbon/Pairs.sol",
        "file": "../Pairs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4464,
        "sourceUnit": 1455,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4220,
              "name": "Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1098,
              "src": "159:4:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4223,
        "nodeType": "ImportDirective",
        "src": "187:46:3",
        "nodes": [],
        "absolutePath": "contracts/token/Token.sol",
        "file": "../../token/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4464,
        "sourceUnit": 7801,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4222,
              "name": "Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7445,
              "src": "196:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4227,
        "nodeType": "ImportDirective",
        "src": "234:65:3",
        "nodes": [],
        "absolutePath": "contracts/carbon/Strategies.sol",
        "file": "../Strategies.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4464,
        "sourceUnit": 4216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4224,
              "name": "Strategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1513,
              "src": "243:8:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4225,
              "name": "TradeAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1518,
              "src": "253:11:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4226,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1491,
              "src": "266:5:3",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4463,
        "nodeType": "ContractDefinition",
        "src": "345:5300:3",
        "nodes": [
          {
            "id": 4236,
            "nodeType": "FunctionDefinition",
            "src": "458:57:3",
            "nodes": [],
            "documentation": {
              "id": 4231,
              "nodeType": "StructuredDocumentation",
              "src": "395:58:3",
              "text": " @dev returns the type of the controller"
            },
            "functionSelector": "b76040cd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "controllerType",
            "nameLocation": "467:14:3",
            "parameters": {
              "id": 4232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:2:3"
            },
            "returnParameters": {
              "id": 4235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4236,
                  "src": "507:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 4233,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:8:3"
            },
            "scope": 4463,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4242,
            "nodeType": "FunctionDefinition",
            "src": "591:56:3",
            "nodes": [],
            "documentation": {
              "id": 4237,
              "nodeType": "StructuredDocumentation",
              "src": "521:65:3",
              "text": " @dev returns the trading fee (in units of PPM)"
            },
            "functionSelector": "f06f8acd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tradingFeePPM",
            "nameLocation": "600:13:3",
            "parameters": {
              "id": 4238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:2:3"
            },
            "returnParameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4242,
                  "src": "639:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4239,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "638:8:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4254,
            "nodeType": "FunctionDefinition",
            "src": "740:86:3",
            "nodes": [],
            "documentation": {
              "id": 4243,
              "nodeType": "StructuredDocumentation",
              "src": "653:82:3",
              "text": " @dev returns the trading fee for a given pair (in units of PPM)"
            },
            "functionSelector": "ba0a868b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairTradingFeePPM",
            "nameLocation": "749:17:3",
            "parameters": {
              "id": 4250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4246,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "773:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4254,
                  "src": "767:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4245,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4244,
                      "name": "Token",
                      "nameLocations": [
                        "767:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "767:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "767:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4249,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "787:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4254,
                  "src": "781:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4247,
                      "name": "Token",
                      "nameLocations": [
                        "781:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "781:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "781:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "766:28:3"
            },
            "returnParameters": {
              "id": 4253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4254,
                  "src": "818:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:8:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4267,
            "nodeType": "FunctionDefinition",
            "src": "909:79:3",
            "nodes": [],
            "documentation": {
              "id": 4255,
              "nodeType": "StructuredDocumentation",
              "src": "832:72:3",
              "text": " @dev creates a new pair of provided token0 and token1"
            },
            "functionSelector": "c9c65396",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "918:10:3",
            "parameters": {
              "id": 4262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4258,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "935:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "929:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4256,
                      "name": "Token",
                      "nameLocations": [
                        "929:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "929:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "929:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4261,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "949:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "943:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4260,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4259,
                      "name": "Token",
                      "nameLocations": [
                        "943:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "943:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "943:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "928:28:3"
            },
            "returnParameters": {
              "id": 4266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4267,
                  "src": "975:11:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                    "typeString": "struct Pair"
                  },
                  "typeName": {
                    "id": 4264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4263,
                      "name": "Pair",
                      "nameLocations": [
                        "975:4:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1098,
                      "src": "975:4:3"
                    },
                    "referencedDeclaration": 1098,
                    "src": "975:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                      "typeString": "struct Pair"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:13:3"
            },
            "scope": 4463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4280,
            "nodeType": "FunctionDefinition",
            "src": "1088:78:3",
            "nodes": [],
            "documentation": {
              "id": 4268,
              "nodeType": "StructuredDocumentation",
              "src": "994:89:3",
              "text": " @dev returns a pair's metadata matching the provided token0 and token1"
            },
            "functionSelector": "8672d545",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pair",
            "nameLocation": "1097:4:3",
            "parameters": {
              "id": 4275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "1108:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "1102:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4270,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4269,
                      "name": "Token",
                      "nameLocations": [
                        "1102:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "1102:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "1102:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4274,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1122:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "1116:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4273,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4272,
                      "name": "Token",
                      "nameLocations": [
                        "1116:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "1116:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "1116:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:28:3"
            },
            "returnParameters": {
              "id": 4279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4280,
                  "src": "1153:11:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                    "typeString": "struct Pair"
                  },
                  "typeName": {
                    "id": 4277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4276,
                      "name": "Pair",
                      "nameLocations": [
                        "1153:4:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1098,
                      "src": "1153:4:3"
                    },
                    "referencedDeclaration": 1098,
                    "src": "1153:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                      "typeString": "struct Pair"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:13:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4290,
            "nodeType": "FunctionDefinition",
            "src": "1238:59:3",
            "nodes": [],
            "documentation": {
              "id": 4281,
              "nodeType": "StructuredDocumentation",
              "src": "1172:61:3",
              "text": " @dev returns a list of all supported pairs"
            },
            "functionSelector": "ffb0a4a0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pairs",
            "nameLocation": "1247:5:3",
            "parameters": {
              "id": 4282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1252:2:3"
            },
            "returnParameters": {
              "id": 4289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4290,
                  "src": "1278:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr_$dyn_memory_ptr",
                    "typeString": "Token[2][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 4284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4283,
                          "name": "Token",
                          "nameLocations": [
                            "1278:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7445,
                          "src": "1278:5:3"
                        },
                        "referencedDeclaration": 7445,
                        "src": "1278:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      "id": 4286,
                      "length": {
                        "hexValue": "32",
                        "id": 4285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1284:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1278:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_storage_ptr",
                        "typeString": "Token[2]"
                      }
                    },
                    "id": 4287,
                    "nodeType": "ArrayTypeName",
                    "src": "1278:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_storage_$dyn_storage_ptr",
                      "typeString": "Token[2][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:19:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4307,
            "nodeType": "FunctionDefinition",
            "src": "1553:113:3",
            "nodes": [],
            "documentation": {
              "id": 4291,
              "nodeType": "StructuredDocumentation",
              "src": "1345:203:3",
              "text": " @dev creates a new strategy, returns the strategy's id\n requirements:\n - the caller must have approved the tokens with assigned liquidity in the order, if any"
            },
            "functionSelector": "f727473a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createStrategy",
            "nameLocation": "1562:14:3",
            "parameters": {
              "id": 4303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4294,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "1583:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "1577:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4293,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4292,
                      "name": "Token",
                      "nameLocations": [
                        "1577:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "1577:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "1577:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4297,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1597:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "1591:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4295,
                      "name": "Token",
                      "nameLocations": [
                        "1591:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "1591:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "1591:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "1623:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "1605:24:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4299,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4298,
                        "name": "Order",
                        "nameLocations": [
                          "1605:5:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "1605:5:3"
                      },
                      "referencedDeclaration": 1491,
                      "src": "1605:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 4301,
                    "length": {
                      "hexValue": "32",
                      "id": 4300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1611:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1605:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1576:54:3"
            },
            "returnParameters": {
              "id": 4306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "1657:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:9:3"
            },
            "scope": 4463,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4323,
            "nodeType": "FunctionDefinition",
            "src": "2396:153:3",
            "nodes": [],
            "documentation": {
              "id": 4308,
              "nodeType": "StructuredDocumentation",
              "src": "1672:719:3",
              "text": " @dev updates an existing strategy\n notes:\n - currentOrders should reflect the orders values at the time of sending the tx\n this prevents cases in which the strategy was updated due to a trade between\n the time the transaction was sent and the time it was mined, thus, giving more\n control to the strategy owner.\n - reduced liquidity is refunded to the owner\n - increased liquidity is deposited\n - excess native token is returned to the sender if any\n - the sorting of orders is expected to equal the sorting upon creation\n requirements:\n - the caller must have approved the tokens with increased liquidity, if any"
            },
            "functionSelector": "21589fa1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateStrategy",
            "nameLocation": "2405:14:3",
            "parameters": {
              "id": 4321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4310,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "2437:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4323,
                  "src": "2429:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4315,
                  "mutability": "mutable",
                  "name": "currentOrders",
                  "nameLocation": "2475:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4323,
                  "src": "2457:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4312,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4311,
                        "name": "Order",
                        "nameLocations": [
                          "2457:5:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "2457:5:3"
                      },
                      "referencedDeclaration": 1491,
                      "src": "2457:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 4314,
                    "length": {
                      "hexValue": "32",
                      "id": 4313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2463:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2457:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4320,
                  "mutability": "mutable",
                  "name": "newOrders",
                  "nameLocation": "2516:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4323,
                  "src": "2498:27:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4317,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4316,
                        "name": "Order",
                        "nameLocations": [
                          "2498:5:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "2498:5:3"
                      },
                      "referencedDeclaration": 1491,
                      "src": "2498:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 4319,
                    "length": {
                      "hexValue": "32",
                      "id": 4318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2504:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2498:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2419:112:3"
            },
            "returnParameters": {
              "id": 4322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:0:3"
            },
            "scope": 4463,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4329,
            "nodeType": "FunctionDefinition",
            "src": "2851:53:3",
            "nodes": [],
            "documentation": {
              "id": 4324,
              "nodeType": "StructuredDocumentation",
              "src": "2597:249:3",
              "text": " @dev deletes a strategy matching the provided id\n notes:\n - 100% of liquidity is withdrawn and sent to the owner\n requirements:\n - the caller must be the owner of the NFT voucher"
            },
            "functionSelector": "87302037",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteStrategy",
            "nameLocation": "2860:14:3",
            "parameters": {
              "id": 4327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4326,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "2883:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4329,
                  "src": "2875:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2874:20:3"
            },
            "returnParameters": {
              "id": 4328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:0:3"
            },
            "scope": 4463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4338,
            "nodeType": "FunctionDefinition",
            "src": "3059:70:3",
            "nodes": [],
            "documentation": {
              "id": 4330,
              "nodeType": "StructuredDocumentation",
              "src": "2910:144:3",
              "text": " @dev returns a strategy matching the provided id,\n note tokens and orders are returned sorted as provided upon creation"
            },
            "functionSelector": "bc88d7e4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategy",
            "nameLocation": "3068:8:3",
            "parameters": {
              "id": 4333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4332,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3085:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "3077:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3077:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3076:12:3"
            },
            "returnParameters": {
              "id": 4337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4338,
                  "src": "3112:15:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Strategy_$1513_memory_ptr",
                    "typeString": "struct Strategy"
                  },
                  "typeName": {
                    "id": 4335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4334,
                      "name": "Strategy",
                      "nameLocations": [
                        "3112:8:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1513,
                      "src": "3112:8:3"
                    },
                    "referencedDeclaration": 1513,
                    "src": "3112:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Strategy_$1513_storage_ptr",
                      "typeString": "struct Strategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3111:17:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4356,
            "nodeType": "FunctionDefinition",
            "src": "3299:172:3",
            "nodes": [],
            "documentation": {
              "id": 4339,
              "nodeType": "StructuredDocumentation",
              "src": "3135:159:3",
              "text": " @dev returns strategies belonging to a specific pair\n note that for the full list of strategies pass 0 to both startIndex and endIndex"
            },
            "functionSelector": "f74dad81",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategiesByPair",
            "nameLocation": "3308:16:3",
            "parameters": {
              "id": 4350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4342,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "3340:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "3334:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4341,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4340,
                      "name": "Token",
                      "nameLocations": [
                        "3334:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3334:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3334:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4345,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "3362:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "3356:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4343,
                      "name": "Token",
                      "nameLocations": [
                        "3356:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3356:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3356:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4347,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "3386:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "3378:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4349,
                  "mutability": "mutable",
                  "name": "endIndex",
                  "nameLocation": "3414:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "3406:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3406:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3324:104:3"
            },
            "returnParameters": {
              "id": 4355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "3452:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Strategy_$1513_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Strategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4352,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4351,
                        "name": "Strategy",
                        "nameLocations": [
                          "3452:8:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1513,
                        "src": "3452:8:3"
                      },
                      "referencedDeclaration": 1513,
                      "src": "3452:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Strategy_$1513_storage_ptr",
                        "typeString": "struct Strategy"
                      }
                    },
                    "id": 4353,
                    "nodeType": "ArrayTypeName",
                    "src": "3452:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Strategy_$1513_storage_$dyn_storage_ptr",
                      "typeString": "struct Strategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3451:19:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4368,
            "nodeType": "FunctionDefinition",
            "src": "3566:91:3",
            "nodes": [],
            "documentation": {
              "id": 4357,
              "nodeType": "StructuredDocumentation",
              "src": "3477:84:3",
              "text": " @dev returns the count of strategies belonging to a specific pair"
            },
            "functionSelector": "322cf844",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategiesByPairCount",
            "nameLocation": "3575:21:3",
            "parameters": {
              "id": 4364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4360,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "3603:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4368,
                  "src": "3597:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4359,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4358,
                      "name": "Token",
                      "nameLocations": [
                        "3597:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3597:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3597:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4363,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "3617:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4368,
                  "src": "3611:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4362,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4361,
                      "name": "Token",
                      "nameLocations": [
                        "3611:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3611:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3611:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3596:28:3"
            },
            "returnParameters": {
              "id": 4367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4368,
                  "src": "3648:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3647:9:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4388,
            "nodeType": "FunctionDefinition",
            "src": "3925:222:3",
            "nodes": [],
            "documentation": {
              "id": 4369,
              "nodeType": "StructuredDocumentation",
              "src": "3663:257:3",
              "text": " @dev performs a trade by specifying a fixed source amount\n notes:\n - excess native token is returned to the sender if any\n requirements:\n - the caller must have approved the source token"
            },
            "functionSelector": "f1c5e014",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tradeBySourceAmount",
            "nameLocation": "3934:19:3",
            "parameters": {
              "id": 4384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4372,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "3969:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "3963:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4371,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4370,
                      "name": "Token",
                      "nameLocations": [
                        "3963:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3963:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3963:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4375,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "3996:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "3990:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4373,
                      "name": "Token",
                      "nameLocations": [
                        "3990:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3990:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3990:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4379,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "4040:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "4017:35:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4377,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4376,
                        "name": "TradeAction",
                        "nameLocations": [
                          "4017:11:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "4017:11:3"
                      },
                      "referencedDeclaration": 1518,
                      "src": "4017:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 4378,
                    "nodeType": "ArrayTypeName",
                    "src": "4017:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4381,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "4070:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "4062:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "minReturn",
                  "nameLocation": "4096:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "4088:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4382,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4088:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3953:158:3"
            },
            "returnParameters": {
              "id": 4387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4388,
                  "src": "4138:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4385,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4138:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4137:9:3"
            },
            "scope": 4463,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4408,
            "nodeType": "FunctionDefinition",
            "src": "4415:221:3",
            "nodes": [],
            "documentation": {
              "id": 4389,
              "nodeType": "StructuredDocumentation",
              "src": "4153:257:3",
              "text": " @dev performs a trade by specifying a fixed target amount\n notes:\n - excess native token is returned to the sender if any\n requirements:\n - the caller must have approved the source token"
            },
            "functionSelector": "102ee9ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tradeByTargetAmount",
            "nameLocation": "4424:19:3",
            "parameters": {
              "id": 4404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "4459:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4453:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4391,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4390,
                      "name": "Token",
                      "nameLocations": [
                        "4453:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4453:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4453:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4395,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "4486:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4480:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4394,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4393,
                      "name": "Token",
                      "nameLocations": [
                        "4480:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4480:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4480:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4399,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "4530:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4507:35:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4397,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4396,
                        "name": "TradeAction",
                        "nameLocations": [
                          "4507:11:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "4507:11:3"
                      },
                      "referencedDeclaration": 1518,
                      "src": "4507:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 4398,
                    "nodeType": "ArrayTypeName",
                    "src": "4507:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4401,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "4560:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4552:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4552:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4403,
                  "mutability": "mutable",
                  "name": "maxInput",
                  "nameLocation": "4586:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4578:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4402,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4578:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4443:157:3"
            },
            "returnParameters": {
              "id": 4407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "4627:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:9:3"
            },
            "scope": 4463,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4424,
            "nodeType": "FunctionDefinition",
            "src": "4735:173:3",
            "nodes": [],
            "documentation": {
              "id": 4409,
              "nodeType": "StructuredDocumentation",
              "src": "4642:88:3",
              "text": " @dev returns the source amount required when trading by target amount"
            },
            "functionSelector": "f2bda26d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTradeSourceAmount",
            "nameLocation": "4744:26:3",
            "parameters": {
              "id": 4420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4412,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "4786:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4424,
                  "src": "4780:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4410,
                      "name": "Token",
                      "nameLocations": [
                        "4780:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4780:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4780:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4415,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "4813:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4424,
                  "src": "4807:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4413,
                      "name": "Token",
                      "nameLocations": [
                        "4807:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4807:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4807:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4419,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "4857:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4424,
                  "src": "4834:35:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4417,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4416,
                        "name": "TradeAction",
                        "nameLocations": [
                          "4834:11:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "4834:11:3"
                      },
                      "referencedDeclaration": 1518,
                      "src": "4834:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 4418,
                    "nodeType": "ArrayTypeName",
                    "src": "4834:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4770:105:3"
            },
            "returnParameters": {
              "id": 4423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4422,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4424,
                  "src": "4899:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4421,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4899:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4898:9:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4440,
            "nodeType": "FunctionDefinition",
            "src": "5007:173:3",
            "nodes": [],
            "documentation": {
              "id": 4425,
              "nodeType": "StructuredDocumentation",
              "src": "4914:88:3",
              "text": " @dev returns the target amount expected when trading by source amount"
            },
            "functionSelector": "2ab2fad1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTradeTargetAmount",
            "nameLocation": "5016:26:3",
            "parameters": {
              "id": 4436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4428,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "5058:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "5052:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4426,
                      "name": "Token",
                      "nameLocations": [
                        "5052:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5052:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5052:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4431,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "5085:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "5079:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4430,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4429,
                      "name": "Token",
                      "nameLocations": [
                        "5079:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5079:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5079:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4435,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "5129:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "5106:35:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4433,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4432,
                        "name": "TradeAction",
                        "nameLocations": [
                          "5106:11:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "5106:11:3"
                      },
                      "referencedDeclaration": 1518,
                      "src": "5106:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 4434,
                    "nodeType": "ArrayTypeName",
                    "src": "5106:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5042:105:3"
            },
            "returnParameters": {
              "id": 4439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4440,
                  "src": "5171:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 4437,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5171:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5170:9:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4449,
            "nodeType": "FunctionDefinition",
            "src": "5277:70:3",
            "nodes": [],
            "documentation": {
              "id": 4441,
              "nodeType": "StructuredDocumentation",
              "src": "5186:86:3",
              "text": " @dev returns the amount of fees accumulated for the specified token"
            },
            "functionSelector": "fcf66664",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "accumulatedFees",
            "nameLocation": "5286:15:3",
            "parameters": {
              "id": 4445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4444,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5308:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4449,
                  "src": "5302:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4442,
                      "name": "Token",
                      "nameLocations": [
                        "5302:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5302:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5302:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5301:13:3"
            },
            "returnParameters": {
              "id": 4448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4449,
                  "src": "5338:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5337:9:3"
            },
            "scope": 4463,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4462,
            "nodeType": "FunctionDefinition",
            "src": "5546:97:3",
            "nodes": [],
            "documentation": {
              "id": 4450,
              "nodeType": "StructuredDocumentation",
              "src": "5353:188:3",
              "text": " @dev transfers the accumulated fees to the specified recipient\n notes:\n `amount` is capped to the available amount\n returns the amount withdrawn"
            },
            "functionSelector": "9ba372c2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFees",
            "nameLocation": "5555:12:3",
            "parameters": {
              "id": 4458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4453,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5574:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "5568:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 4452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4451,
                      "name": "Token",
                      "nameLocations": [
                        "5568:5:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5568:5:3"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5568:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4455,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5589:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "5581:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4457,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5605:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "5597:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5597:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5567:48:3"
            },
            "returnParameters": {
              "id": 4461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "5634:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5634:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5633:9:3"
            },
            "scope": 4463,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4229,
              "name": "IUpgradeable",
              "nameLocations": [
                "376:12:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9115,
              "src": "376:12:3"
            },
            "id": 4230,
            "nodeType": "InheritanceSpecifier",
            "src": "376:12:3"
          }
        ],
        "canonicalName": "ICarbonController",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4228,
          "nodeType": "StructuredDocumentation",
          "src": "301:43:3",
          "text": " @dev Carbon Controller interface"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          4463,
          9115,
          9124,
          53565,
          53638
        ],
        "name": "ICarbonController",
        "nameLocation": "355:17:3",
        "scope": 4464,
        "usedErrors": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 3
}