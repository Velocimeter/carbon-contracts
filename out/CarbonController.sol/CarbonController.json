{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVoucher",
          "name": "initVoucher",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessDenied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadlineExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GreaterThanMaxInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IdenticalAddresses",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientCapacity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientNativeTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidIndices",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTradeActionAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTradeActionStrategyId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LowerThanMinReturn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAmountMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OrderDisabled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutDated",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Overflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PairAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PairDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnknownDelegator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnnecessaryNativeTokenReceived",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroValue",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "FeesWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint128",
          "name": "pairId",
          "type": "uint128"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "prevFeePPM",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFeePPM",
          "type": "uint32"
        }
      ],
      "name": "PairTradingFeePPMUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order0",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order1",
          "type": "tuple"
        }
      ],
      "name": "StrategyCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order0",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order1",
          "type": "tuple"
        }
      ],
      "name": "StrategyDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order0",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "indexed": false,
          "internalType": "struct Order",
          "name": "order1",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "reason",
          "type": "uint8"
        }
      ],
      "name": "StrategyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "tradingFeeAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "byTargetAmount",
          "type": "bool"
        }
      ],
      "name": "TokensTraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "prevFeePPM",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newFeePPM",
          "type": "uint32"
        }
      ],
      "name": "TradingFeePPMUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "accumulatedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        }
      ],
      "name": "calculateTradeSourceAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        }
      ],
      "name": "calculateTradeTargetAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controllerType",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            }
          ],
          "internalType": "struct Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "orders",
          "type": "tuple[2]"
        }
      ],
      "name": "createStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        }
      ],
      "name": "deleteStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "pair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "id",
              "type": "uint128"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            }
          ],
          "internalType": "struct Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "pairTradingFeePPM",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "Token[2][]",
          "name": "",
          "type": "address[2][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "postUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleEmergencyStopper",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "roleFeesManager",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "newPairTradingFeePPM",
          "type": "uint32"
        }
      ],
      "name": "setPairTradingFeePPM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "newTradingFeePPM",
          "type": "uint32"
        }
      ],
      "name": "setTradingFeePPM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "strategiesByPair",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]"
            }
          ],
          "internalType": "struct Strategy[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "strategiesByPairCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "strategy",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "Token[2]",
              "name": "tokens",
              "type": "address[2]"
            },
            {
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]"
            }
          ],
          "internalType": "struct Strategy",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "minReturn",
          "type": "uint128"
        }
      ],
      "name": "tradeBySourceAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "sourceToken",
          "type": "address"
        },
        {
          "internalType": "Token",
          "name": "targetToken",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct TradeAction[]",
          "name": "tradeActions",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "maxInput",
          "type": "uint128"
        }
      ],
      "name": "tradeByTargetAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradingFeePPM",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strategyId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "currentOrders",
          "type": "tuple[2]"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "y",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "z",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "A",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "B",
              "type": "uint64"
            }
          ],
          "internalType": "struct Order[2]",
          "name": "newOrders",
          "type": "tuple[2]"
        }
      ],
      "name": "updateStrategy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "968:13709:0:-:0;;;1912:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;261:14:31;;;;1996:35:0::1;2018:11:::0;1996:13:::1;:35::i;:::-;-1:-1:-1::0;;;;;2042:22:0;::::1;;::::0;2074:12:::1;:10;:12::i;:::-;1912:181:::0;;968:13709;;947:139:33;-1:-1:-1;;;;;1012:18:33;;1008:72;;1053:16;;-1:-1:-1;;;1053:16:33;;;;;;;;;;;1008:72;947:139;:::o;2174:83:0:-;3279:19:63;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:63;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:63;1713:19:70;:23;;;3387:66:63;;-1:-1:-1;3436:12:63;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:63;;790:2:127;3325:201:63;;;772:21:127;829:2;809:18;;;802:30;868:34;848:18;;;841:62;-1:-1:-1;;;919:18:127;;;912:44;973:19;;3325:201:63;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:63;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:63;;;;;3562:65;2225:25:0::1;:23;:25::i;:::-;3651:14:63::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:63;;;3721:14;;-1:-1:-1;1155:36:127;;3721:14:63;;1143:2:127;1128:18;3721:14:63;;;;;;;3269:483;2174:83:0:o;2376:258::-;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;2447:14:0::1;:12;:14::i;:::-;2471:19;:17;:19::i;:::-;2500:20;:18;:20::i;:::-;2530:24;:22;:24::i;:::-;2564:17;:15;:17::i;:::-;2592:35;:33;:35::i;:::-;2376:258::o:0;1135:91:1:-;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1195:24:1::1;:22;:24::i;9169:101:2:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;9234:29:2::1;:27;:29::i;1232:136:32:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1298:22:32::1;:20;:22::i;:::-;1331:30;:28;:30::i;1868:111:65:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1938:34:65::1;:32;:34::i;1063:97:64:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1126:27:64::1;:25;:27::i;2710:230:0:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;2830:49:0::1;1273:35;-1:-1:-1::0;;;;;;;;;;;2830:13:0::1;:49::i;:::-;2889:44;1418:30;-1:-1:-1::0;;;;;;;;;;;2889:13:0::1;:44::i;1302:62:1:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;9346:124:2;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;9421:42:2::1;6665:4;9421:17;:42::i;1444:307:32:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1520:16:32::1;:20:::0;;-1:-1:-1;;1520:20:32::1;1539:1;1520:20;::::0;;1590:37:::1;-1:-1:-1::0;;;;;;;;;;;960:23:32;1590:13:::1;:37::i;:::-;1710:34;-1:-1:-1::0;;;;;;;;;;;1733:10:32::1;1710;:34::i;1985:109:65:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1787:1:65::1;2065:7;:22:::0;1985:109::o;1166:95:64:-;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;1404:2:127;5366:69:63;;;1386:21:127;1443:2;1423:18;;;1416:30;-1:-1:-1;;;;;;;;;;;1462:18:127;;;1455:62;-1:-1:-1;;;1533:18:127;;;1526:41;1584:19;;5366:69:63;1202:407:127;5366:69:63;1239:7:64::1;:15:::0;;-1:-1:-1;;1239:15:64::1;::::0;;1166:95::o;7502:247:59:-;7585:25;4934:12;;;:6;:12;;;;;;:22;;;;7641:34;;;;7690:52;;4934:22;;7641:34;;4934:22;;:12;;7690:52;;7585:25;7690:52;7575:174;7502:247;;:::o;25401:346:2:-;25499:14;;;-1:-1:-1;;;25499:14:2;;;;;;25527:37;;;;25523:74;;25580:7;25401:346;:::o;25523:74::-;25607:14;:33;;-1:-1:-1;;;;25607:33:2;-1:-1:-1;;;25607:33:2;;;;;;;;;;;;;;25656:84;;;1831:15:127;;;1813:34;;1878:2;1863:18;;1856:43;;;;25656:84:2;;1757:18:127;25656:84:2;;;;;;;25462:285;25401:346;:::o;7267:110:59:-;7345:25;7356:4;7362:7;7345:10;:25::i;:::-;7267:110;;:::o;2317:166:58:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;:::-;;2317:166;;:::o;7917:233:59:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:59;;;;;;;;;:36;;-1:-1:-1;;8038:36:59;8070:4;8038:36;;;8120:12;929:10:71;;850:96;8120:12:59;-1:-1:-1;;;;;8093:40:59;8111:7;-1:-1:-1;;;;;8093:40:59;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8316:150:77:-;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:77;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;;:::o;2225:404::-;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:77;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:77;2600:12;;14:141:127;-1:-1:-1;;;;;99:31:127;;89:42;;79:70;;145:1;142;135:12;160:423;257:6;265;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;366:9;360:16;385:41;420:5;385:41;:::i;:::-;495:2;480:18;;474:25;445:5;;-1:-1:-1;508:43:127;474:25;508:43;:::i;:::-;570:7;560:17;;;160:423;;;;;:::o;1614:291::-;968:13709:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102855760003560e01c80638cd2403d11610153578063c9c65396116100cb578063f2bda26d1161007f578063f74dad8111610064578063f74dad811461077c578063fcf66664146107a9578063ffb0a4a0146107c957600080fd5b8063f2bda26d14610749578063f727473a1461076957600080fd5b8063d547741f116100b0578063d547741f146106e7578063f06f8acd14610707578063f1c5e0141461073657600080fd5b8063c9c65396146106a7578063ca15c873146106c757600080fd5b80639ba372c211610122578063b76040cd11610107578063b76040cd14610631578063ba0a868b14610645578063bc88d7e41461067a57600080fd5b80639ba372c2146105fc578063a217fddf1461061c57600080fd5b80638cd2403d1461052b5780639010d07c1461054b57806391d148541461058357806393867fb5146105c957600080fd5b80633f4ba83a1161020157806369a4dea7116101b55780638456cb591161019a5780638456cb59146104c95780638672d545146104de578063873020371461050b57600080fd5b806369a4dea7146104945780638129fc1c146104b457600080fd5b806354fd4d50116101e657806354fd4d501461043857806355817d1d1461045b5780635c975abb1461047b57600080fd5b80633f4ba83a146103f057806341f435b31461040557600080fd5b80632ab2fad1116102585780632f2ff15d1161023d5780632f2ff15d14610390578063322cf844146103b057806336568abe146103d057600080fd5b80632ab2fad11461033d5780632c40de1b1461035d57600080fd5b806301ffc9a71461028a578063102ee9ba146102bf57806321589fa1146102ea578063248a9ca3146102ff575b600080fd5b34801561029657600080fd5b506102aa6102a53660046153d2565b6107eb565b60405190151581526020015b60405180910390f35b6102d26102cd36600461548a565b610847565b6040516001600160801b0390911681526020016102b6565b6102fd6102f836600461551d565b610961565b005b34801561030b57600080fd5b5061032f61031a36600461555d565b600090815260c9602052604090206001015490565b6040519081526020016102b6565b34801561034957600080fd5b506102d2610358366004615576565b610ad5565b34801561036957600080fd5b507f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b1661032f565b34801561039c57600080fd5b506102fd6103ab3660046155db565b610b2f565b3480156103bc57600080fd5b5061032f6103cb36600461560b565b610b54565b3480156103dc57600080fd5b506102fd6103eb3660046155db565b610b77565b3480156103fc57600080fd5b506102fd610c08565b34801561041157600080fd5b507ff28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c084561032f565b34801561044457600080fd5b5060045b60405161ffff90911681526020016102b6565b34801561046757600080fd5b506102fd61047636600461564d565b610c3e565b34801561048757600080fd5b506101915460ff166102aa565b3480156104a057600080fd5b506102fd6104af36600461568b565b610c91565b3480156104c057600080fd5b506102fd610cce565b3480156104d557600080fd5b506102fd610ded565b3480156104ea57600080fd5b506104fe6104f936600461560b565b610e20565b6040516102b691906156d2565b34801561051757600080fd5b506102fd61052636600461555d565b610e43565b34801561053757600080fd5b506102fd6105463660046156f6565b610f5e565b34801561055757600080fd5b5061056b610566366004615768565b610fcb565b6040516001600160a01b0390911681526020016102b6565b34801561058f57600080fd5b506102aa61059e3660046155db565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156105d557600080fd5b507f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509661032f565b34801561060857600080fd5b5061032f61061736600461578a565b610fe3565b34801561062857600080fd5b5061032f600081565b34801561063d57600080fd5b506001610448565b34801561065157600080fd5b5061066561066036600461560b565b611062565b60405163ffffffff90911681526020016102b6565b34801561068657600080fd5b5061069a61069536600461555d565b61107e565b6040516102b6919061586e565b3480156106b357600080fd5b506104fe6106c236600461560b565b6110c2565b3480156106d357600080fd5b5061032f6106e236600461555d565b611103565b3480156106f357600080fd5b506102fd6107023660046155db565b61111a565b34801561071357600080fd5b50606554700100000000000000000000000000000000900463ffffffff16610665565b6102d261074436600461548a565b61113f565b34801561075557600080fd5b506102d2610764366004615576565b6111f5565b61032f61077736600461587d565b61124b565b34801561078857600080fd5b5061079c6107973660046158bd565b61135f565b6040516102b69190615903565b3480156107b557600080fd5b5061032f6107c4366004615952565b6113a5565b3480156107d557600080fd5b506107de6113ce565b6040516102b6919061596f565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f0000000000000000000000000000000000000000000000000000000014806108415750610841826113dd565b92915050565b6000610851611474565b6108596114cf565b610861611525565b61086e8787853486611587565b610880876001600160a01b031661161a565b156108c857816001600160801b03163410156108c8576040517f7038b89900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006108d48888611641565b6040805161010081018252338152815180830183526001600160a01b038c811682528b166020828101919091528201526001918101919091526001600160801b038516606082015234608082015260a08101829052600060c0820181905260e08201529091506109458787836116e5565b60c00151915050610957600161015f55565b9695505050505050565b610969611474565b6109716114cf565b610979611525565b600061098d6109888560801c90565b611caa565b6040516331a9108f60e11b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa1580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1991906159bc565b6001600160a01b0316336001600160a01b031614610a4a57604051634ca8886760e01b815260040160405180910390fd5b600034118015610a7657506020810151610a749060005b60200201516001600160a01b031661161a565b155b8015610a8f57506020810151610a8d906001610a61565b155b15610aad57604051631334bf4f60e11b815260040160405180910390fd5b610ab682611d82565b610ac4848484843334611f0e565b50610ad0600161015f55565b505050565b6000610ae18585612326565b6000610aed8686611641565b604080518082019091526001600160a01b038089168252871660208201529091506000610b1d8287878685612385565b6020015193505050505b949350505050565b600082815260c96020526040902060010154610b4a81612549565b610ad08383612553565b6000610b608383612326565b6000610b6c8484611641565b9050610b2781612575565b6001600160a01b0381163314610bfa5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610c048282612597565b5050565b7ff28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c0845610c3381336125b9565b610c3b6125fc565b50565b610c687f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096336125b9565b80610c728161264f565b6000610c7e8585611641565b9050610c8a8184612692565b5050505050565b610cbb7f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096336125b9565b80610cc58161264f565b610c048261277b565b600054610100900460ff1615808015610cee5750600054600160ff909116105b80610d085750303b158015610d08575060005460ff166001145b610d7a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610bf1565b6000805460ff191660011790558015610d9d576000805461ff0019166101001790555b610da5612831565b8015610c3b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b7ff28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c0845610e1881336125b9565b610c3b6128cc565b610e2861524d565b610e328383612326565b610e3c8383611641565b9392505050565b610e4b611474565b610e536114cf565b610e5b611525565b6000610e6a6109888360801c90565b6040516331a9108f60e11b8152600481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef691906159bc565b6001600160a01b0316336001600160a01b031614610f2757604051634ca8886760e01b815260040160405180910390fd5b610f52827f00000000000000000000000000000000000000000000000000000000000000008361290a565b50610c3b600161015f55565b61012d54600090610f749061ffff166001615a05565b905061ffff8116600414610fb4576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012d805461ffff191661ffff8316179055505050565b600082815260fb60205260408120610e3c9083612ac9565b6000610fed6114cf565b7f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b1661101881336125b9565b8261102281612ad5565b8561102c81612ad5565b8561103681612b15565b61103e611474565b61104a33888a89612b4f565b9450611057600161015f55565b505050509392505050565b60008061106f8484611641565b9050610b278160000151612c03565b611086615275565b60006110956109888460801c90565b9050610e3c837f000000000000000000000000000000000000000000000000000000000000000083612c52565b6110ca61524d565b6110d2611474565b6110da6114cf565b6110e2611525565b6110ec8383612326565b6110f68383612d53565b9050610841600161015f55565b600081815260fb6020526040812061084190612eb5565b600082815260c9602052604090206001015461113581612549565b610ad08383612597565b6000611149611474565b6111516114cf565b611159611525565b6111668787853486611587565b60006111728888611641565b6040805161010081018252338152815180830183526001600160a01b038c811682528b1660208281019190915282015260009181018290526001600160801b038616606082015234608082015260a0810183905260c0810182905260e08101919091529091506111e38787836116e5565b60e00151915050610957600161015f55565b60006112018585612326565b600061120d8686611641565b604080518082019091526001600160a01b03808916825287166020820152909150600061123e828787866001612385565b5198975050505050505050565b6000611255611474565b61125d6114cf565b611265611525565b61126f8484612326565b60003411801561128e575061128c846001600160a01b031661161a565b155b80156112a957506112a7836001600160a01b031661161a565b155b156112c757604051631334bf4f60e11b815260040160405180910390fd5b6112d082611d82565b6112d861524d565b6112e28585612ebf565b6112f7576112f08585612d53565b9050611304565b6113018585611641565b90505b604080518082019091526001600160a01b038087168252851660208201526113507f00000000000000000000000000000000000000000000000000000000000000008286853334612f22565b92505050610e3c600161015f55565b606061136b8585612326565b60006113778686611641565b90506109578185857f000000000000000000000000000000000000000000000000000000000000000061314f565b6000816113b181612ad5565b50506001600160a01b031660009081526068602052604090205490565b60606113d8613294565b905090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061084157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610841565b600261015f54036114c75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bf1565b600261015f55565b6101915460ff16156115235760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610bf1565b565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611523576040517fd0c8bfe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428310156115c1576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d3816001600160801b0316612b15565b6115dd8585612326565b6000821180156115fc57506115fa856001600160a01b031661161a565b155b15610c8a57604051631334bf4f60e11b815260040160405180910390fd5b60006001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610841565b61164961524d565b6116538383612ebf565b611689576040517fc5fc4bf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061169584846133b3565b80516001600160a01b039081166000908152603460209081526040808320828601519094168352928152908290205482518084019093526001600160801b03168252810191909152949350505050565b60006117248260200151602001518360a001516020015160006002811061170e5761170e6159d9565b60200201516001600160a01b0390811691161490565b905060005b83811015611a20576000858583818110611745576117456159d9565b905060400201602001602081019061175d9190615a20565b90506000868684818110611773576117736159d9565b60409081029290920135600081815260666020528381208451606081019586905292955093909250839060039082845b8154815260200190600101908083116117a357505050505090506000806117c983613419565b915091506117e08960a0015160000151868861350d565b6000808215158a1515146117fa5783516020850151611802565b602084015184515b91509150600080611818848b8f604001516135a4565b91509150806001600160801b031684600001516001600160801b0316101561186c576040517fbb55fd2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83518190036001600160801b0316845282518290849061188d908390615a3b565b6001600160801b03908116909152845160208601519082169116101590506118c05782516001600160801b031660208401525b60006118cc8787613680565b80518a55602080820151908a0151919250146118ed57602081015160018a01555b604080820151908901511461190757604081015160028a01555b8d60a00151602001518661191c57600161191f565b60005b60ff1660028110611932576119326159d9565b60200201516001600160a01b03168e60a001516020015187611955576000611958565b60015b60ff166002811061196b5761196b6159d9565b60200201516001600160a01b03168b7f720da23a5c920b1d8827ec83c4d3c4d90d9419eadb0036b88cb4c2ffa91aef7d8a600060200201518b6001602002015160016040516119bc93929190615a5b565b60405180910390a4828e60c0018181516119d69190615a3b565b6001600160801b031690525060e08e0180518391906119f6908390615a3b565b6001600160801b0316905250611a199a508b99506137ae98505050505050505050565b9050611729565b506000826040015115611aee576000611a458460c001518560a00151600001516137b4565b90508360c0015181611a579190615af9565b6001600160801b0380831660c08701819052606087015192945091161015611aab576040517f0699263d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602080850151516001600160a01b0316600090815260689091526040812080546001600160801b0385169290611ae2908490615b19565b90915550611bac915050565b6000611b068460e001518560a00151600001516137eb565b9050808460e00151611b189190615af9565b6001600160801b0380831660e08701819052606087015192945091161115611b6c576040517ff602de8f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020808501518101516001600160a01b0316600090815260689091526040812080546001600160801b0385169290611ba5908490615b19565b9091555050505b611bd783602001516000015184600001518560c001516001600160801b031686608001516000613825565b611bfb83602001516020015184600001518560e001516001600160801b031661394d565b8260200151602001516001600160a01b03168360200151600001516001600160a01b031684600001516001600160a01b03167f95f3b01351225fea0e69a46f68b164c9dea10284f12cd4a907ce66510ab7af6a8660c001518760e00151868960400151604051611c9394939291906001600160801b039485168152928416602084015292166040820152901515606082015260800190565b60405180910390a45050505050565b600161015f55565b611cb261524d565b6001600160801b0382166000908152603560205260408082208151808301928390529160029082845b81546001600160a01b03168152600190910190602001808311611cdb575050505050905060006001600160a01b031681600060028110611d1d57611d1d6159d9565b60200201516001600160a01b031603611d62576040517fc5fc4bf400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091526001600160801b03909316835260208301525090565b60005b6002811015610c0457818160028110611da057611da06159d9565b608002016000016020810190611db69190615a20565b6001600160801b0316828260028110611dd157611dd16159d9565b608002016020016020810190611de79190615a20565b6001600160801b03161015611e28576040517f5cef583a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611e6f828260028110611e3d57611e3d6159d9565b608002016040016020810190611e539190615b44565b67ffffffffffffffff166601000000000000908190041c151590565b611ea5576040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ed0828260028110611eba57611eba6159d9565b608002016060016020810190611e539190615b44565b611f06576040517f6a43f8d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101611d85565b60008681526066602052604080822081516060810192839052909291839060039082845b815481526020019060010190808311611f325750505050509050600080611f5883613419565b604080518082019091529193509150611fa8908a60026000835b82821015611f9e57611f8f60808302850136819003810190615b75565b81526020019060010190611f72565b5050505083613998565b611fde576040517f811cb74a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805180820190915260009061202b908a600284835b828210156120215761201260808302850136819003810190615b75565b81526020019060010190611ff5565b5050505083613680565b805185519192501461203c57805185555b602080820151908501511461205657602081015160018601555b604080820151908501511461207057604081015160028601555b600061207c8984613af7565b905060005b60028110156122be57600082826002811061209e5761209e6159d9565b602002015190508582600281106120b7576120b76159d9565b6020020151516001600160801b03168c83600281106120d8576120d86159d9565b6080020160000160208101906120ee9190615a20565b6001600160801b031610156121655760008c8360028110612111576121116159d9565b6080020160000160208101906121279190615a20565b878460028110612139576121396159d9565b6020020151516121499190615af9565b905061215f828c836001600160801b031661394d565b50612224565b858260028110612177576121776159d9565b6020020151516001600160801b03168c8360028110612198576121986159d9565b6080020160000160208101906121ae9190615a20565b6001600160801b031611156122245760008683600281106121d1576121d16159d9565b6020020151518d84600281106121e9576121e96159d9565b6080020160000160208101906121ff9190615a20565b6122099190615af9565b9050612222828c836001600160801b03168d6001613825565b505b6000891180156122415750612241816001600160a01b031661161a565b801561229d575085826002811061225a5761225a6159d9565b6020020151516001600160801b03168c836002811061227b5761227b6159d9565b6080020160000160208101906122919190615a20565b6001600160801b031611155b156122b5576122b56001600160a01b038b168a613b7a565b50600101612081565b50602081015181516040516001600160a01b0392831692909116908e907f720da23a5c920b1d8827ec83c4d3c4d90d9419eadb0036b88cb4c2ffa91aef7d90612310908f906080820190600090615c5f565b60405180910390a4505050505050505050505050565b8161233081612ad5565b8161233a81612ad5565b6001600160a01b038085169084160361237f576040517fbd969eb000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b604080518082019091526000808252602082015260006123ba8760200151856020015160006002811061170e5761170e6159d9565b905060005b858110156124f95760008787838181106123db576123db6159d9565b90506040020160200160208101906123f39190615a20565b90506000888884818110612409576124096159d9565b60409081029290920135600081815260666020528381208451606081019586905292955090939192509060039082845b815481526020019060010190808311612439575050505050905060008061245f83613419565b915091506124728a60000151858761350d565b60008115158815151461248657825161248c565b60208301515b905060008061249c83898e6135a4565b91509150818b6000018181516124b29190615a3b565b6001600160801b031690525060208b0180518291906124d2908390615a3b565b6001600160801b03169052506124f297508896506137ae95505050505050565b90506123bf565b50821561251e578151845161250e91906137b4565b6001600160801b0316825261253f565b612530826020015185600001516137eb565b6001600160801b031660208301525b5095945050505050565b610c3b8133613c93565b61255d8282613d08565b600082815260fb60205260409020610ad09082613daa565b80516001600160801b03166000908152606760205260408120610e3c81612eb5565b6125a18282613dbf565b600082815260fb60205260409020610ad09082613e42565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff16610c0457604051634ca8886760e01b815260040160405180910390fd5b612604613e57565b610191805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b620f424063ffffffff82161115610c3b576040517f58d620b300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516001600160801b031660009081526069602052604090205463ffffffff90811690821681036126c257505050565b82516001600160801b03166000908152606960209081526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff861617905580850151908101516001600160a01b03169160200201516001600160a01b03167f831434d05f3ad5f63be733ea463b2933c70d2162697fd200a22b5d56f5c454b6838560405161276e92919063ffffffff92831681529116602082015260400190565b60405180910390a3505050565b60655463ffffffff700100000000000000000000000000000000909104811690821681036127a7575050565b606580547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000063ffffffff8581169182029290921790925560408051918416825260208201929092527f66db0986e1156e2e747795714bf0301c7e1c695c149a738cb01bcf5cfead8465910160405180910390a15050565b600054610100900460ff1661289c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b6128a4613eaa565b6128ac613f1d565b6128b4613f90565b6128bc61400b565b6128c461407e565b6115236140f1565b6128d46114cf565b610191805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126323390565b6000612917848484612c52565b80516040517f42966c680000000000000000000000000000000000000000000000000000000081529192506001600160a01b038516916342966c68916129639160040190815260200190565b600060405180830381600087803b15801561297d57600080fd5b505af1158015612991573d6000803e3d6000fd5b5050825160009081526066602052604081208181556001810182905560020155506129b99050565b805182516001600160801b031660009081526067602052604090206129dd916141f0565b5060408101515160208201516060830151612a0b92919060005b6020020151516001600160801b031661394d565b6040810151602090810151908201516060830151612a2c92919060016129f7565b604081015160208101516001600160a01b031690600060200201516001600160a01b031682602001516001600160a01b03167f4d5b6e0627ea711d8e9312b6ba56f50e0b51d41816fd6fd38643495ac81d38b684600001518560600151600060028110612a9b57612a9b6159d9565b6020020151606087015160016020020151604051612abb93929190615c7b565b60405180910390a450505050565b6000610e3c83836141fc565b6001600160a01b038116610c3b576040517fe6c4247b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600003610c3b576040517f7c946ed700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216600090815260686020526040812054808203612b79576000915050610b27565b80851115612b85578094505b612b8f8582615d12565b6001600160a01b038516600090815260686020526040902055612bb384848761394d565b6040516001600160a01b0387811682528691818616918716907f2f4e8fcae66f01952d258445c03f43cf56d3ce389e017ecd2afa8a79e77175889060200160405180910390a45092949350505050565b6001600160801b03811660009081526069602052604081205463ffffffff168015612c2e5780610e3c565b5050606554700100000000000000000000000000000000900463ffffffff16919050565b612c5a615275565b6040516331a9108f60e11b8152600481018590526000906001600160a01b03851690636352211e90602401602060405180830381865afa158015612ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc691906159bc565b600086815260666020526040808220815160608101928390529394509192919060039082845b815481526020019060010190808311612cec5750505050509050600080612d1283613419565b915091506000612d228783613af7565b604080516080810182528b81526001600160a01b039097166020880152860152505060608301525090509392505050565b612d5b61524d565b612d658383612ebf565b15612d9c576040517fc9bb25eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000612da884846133b3565b603354909150600090612dc5906001600160801b03166001615a3b565b603380546fffffffffffffffffffffffffffffffff19166001600160801b0383169081179091556000908152603560205260409020909150612e09908360026152a1565b5081516001600160a01b039081166000908152603460209081526040808320828701805186168552925280832080546fffffffffffffffffffffffffffffffff19166001600160801b0387169081179091559151865191519085169491909116927f6365c594f5448f79c1cc1e6f661bdbf1d16f2e8f85747e13f8e80f1fd168b7c391a46040518060400160405280826001600160801b03168152602001838152509250505092915050565b6000610841825490565b600080612ecc84846133b3565b80516001600160a01b039081166000908152603460209081526040808320828601519094168352929052908120549192506001600160801b039091169003612f18576000915050610841565b5060019392505050565b8451600090612f56908487845b608002016000016020810190612f459190615a20565b6001600160801b0316856001613825565b6020860151612f689084876001612f2f565b606554600090612f82906001600160801b03166001615a3b565b606580546001600160801b0383166fffffffffffffffffffffffffffffffff199182168117909255875192935060009260801b161786516001600160801b03166000908152606760205260409020909150612fdd9082614226565b5087516020870151600091612ff391600161170e565b60408051808201909152909150613041908960026000835b828210156130375761302860808302850136819003810190615b75565b8152602001906001019061300b565b5050505082613680565b600083815260666020526040902061305a91600361530d565b506040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482018490528b16906340c10f1990604401600060405180830381600087803b1580156130be57600080fd5b505af11580156130d2573d6000803e3d6000fd5b50505050886001600281106130e9576130e96159d9565b602002015189516040516001600160a01b0392831692918216918916907fff24554f8ccfe540435cfc8854831f8dcf1cf2068708cfaf46e8b52a4ccc4c8d9061313a9087908e906080820190615d25565b60405180910390a45098975050505050505050565b83516001600160801b0316600090815260676020526040812060609161317482612eb5565b905084158061318257508085115b1561318b578094505b848611156131c5576040517f2cd4dad300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006131d18787615d12565b905060008167ffffffffffffffff8111156131ee576131ee615b5f565b60405190808252806020026020018201604052801561322757816020015b613214615275565b81526020019060019003908161320c5790505b50905060005b8281101561328757600061324b613244838c615b19565b8790612ac9565b905061325881898d612c52565b83838151811061326a5761326a6159d9565b6020026020010181905250506132808160010190565b905061322d565b5098975050505050505050565b6033546060906001600160801b031660008167ffffffffffffffff8111156132be576132be615b5f565b6040519080825280602002602001820160405280156132f757816020015b6132e461533b565b8152602001906001900390816132dc5790505b50905060005b826001600160801b0316816001600160801b031610156133ac5760356000613326836001615a3b565b6001600160801b03168152602081019190915260409081016000208151808301928390529160029082845b81546001600160a01b0316815260019091019060200180831161335157505050505082826001600160801b03168151811061338e5761338e6159d9565b602002602001018190525080806133a490615d47565b9150506132fd565b5092915050565b6133bb61533b565b816001600160a01b0316836001600160a01b0316106133f757604080518082019091526001600160a01b03808416825284166020820152610e3c565b50604080518082019091526001600160a01b0392831681529116602082015290565b613421615359565b6040805160c0808201835284516001600160801b0390811683850190815260208088018051841660608701528051608090811c67ffffffffffffffff1681880152905190941c60a0860152908452845180840186528751841c8152878601519092168282015260009490840192908201908760026020020151901c67ffffffffffffffff16815260200160c16001886002600381106134c2576134c26159d9565b6020020151901b901c67ffffffffffffffff169052905291507f8000000000000000000000000000000000000000000000000000000000000000836002602002015110159050915091565b826001600160801b03166135218360801c90565b6001600160801b031614613561576040517fb7b067f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001600160801b0316600003610ad0576040517feb1a139600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600085600001516001600160801b03169050600086602001516001600160801b0316905060006135f7886040015167ffffffffffffffff1665ffffffffffff811666010000000000009091041b90565b90506000613625896060015167ffffffffffffffff1665ffffffffffff811666010000000000009091041b90565b905086156136555761364b613646896001600160801b031686868686614232565b614331565b9550879450613674565b879550613671613646896001600160801b0316868686866143b4565b94505b50505050935093915050565b61368861539f565b604080516060808201835260208681015151875151608091821b6fffffffffffffffffffffffffffffffff19166001600160801b03918216178552885193840151848701519484015160c09190911b7fffffffffffffffff000000000000000000000000000000000000000000000000169490921b77ffffffffffffffff0000000000000000000000000000000016911617919091179082015290810183613731576000613753565b7f80000000000000000000000000000000000000000000000000000000000000005b60c086600160200201516060015167ffffffffffffffff16901b608087600160200201516040015167ffffffffffffffff16901b60008860016020020151602001516001600160801b0316901b171717815250905092915050565b60010190565b6000806137c083612c03565b9050610b276136466001600160801b038616620f42406137e08582615d6d565b63ffffffff166144f3565b6000806137f783612c03565b9050610b276136466001600160801b03861661381684620f4240615d6d565b63ffffffff16620f424061455b565b613837856001600160a01b031661161a565b156138a05782821015613876576040517f677606af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282111561389b5761389b61388b8484615d12565b6001600160a01b03861690613b7a565b610c8a565b8215610c8a5780156139385760006138c16001600160a01b0387163061464f565b90506138d86001600160a01b0387168630876146f6565b60006138ed6001600160a01b0388163061464f565b9050846138fa8383615d12565b14613931576040517fca3e0a6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050610c8a565b610c8a6001600160a01b0386168530866146f6565b8060000361395a57505050565b61396c836001600160a01b031661161a565b1561398457610ad06001600160a01b03831682613b7a565b610ad06001600160a01b0384168383614720565b6000805b6002811015612f18578281600281106139b7576139b76159d9565b6020020151516001600160801b03168482600281106139d8576139d86159d9565b6020020151516001600160801b0316141580613a3a5750828160028110613a0157613a016159d9565b6020020151602001516001600160801b0316848260028110613a2557613a256159d9565b6020020151602001516001600160801b031614155b80613a8d5750828160028110613a5257613a526159d9565b60200201516040015167ffffffffffffffff16848260028110613a7757613a776159d9565b60200201516040015167ffffffffffffffff1614155b80613ae05750828160028110613aa557613aa56159d9565b60200201516060015167ffffffffffffffff16848260028110613aca57613aca6159d9565b60200201516060015167ffffffffffffffff1614155b15613aef576000915050610841565b60010161399c565b613aff61533b565b81613b0e578260200151610e3c565b60405180604001604052808460200151600160028110613b3057613b306159d9565b60200201516001600160a01b03166001600160a01b031681526020018460200151600060028110613b6357613b636159d9565b60200201516001600160a01b031690529392505050565b80471015613bca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610bf1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613c17576040519150601f19603f3d011682016040523d82523d6000602084013e613c1c565b606091505b5050905080610ad05760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610bf1565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff16610c0457613cc681614785565b613cd1836020614797565b604051602001613ce2929190615dc4565b60408051601f198184030181529082905262461bcd60e51b8252610bf191600401615e45565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff16610c0457600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff19166001179055613d663390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610e3c836001600160a01b0384166149c0565b600082815260c9602090815260408083206001600160a01b038516845290915290205460ff1615610c0457600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610e3c836001600160a01b038416614a0f565b6101915460ff166115235760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610bf1565b600054610100900460ff16613f155760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b611523614b02565b600054610100900460ff16613f885760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b611523614b6d565b600054610100900460ff16613ffb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b614003614b02565b611523614be3565b600054610100900460ff166140765760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b611523614cb1565b600054610100900460ff166140e95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b611523614d1c565b600054610100900460ff1661415c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b6141a67ff28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c08457f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096614d94565b6115237f24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b167f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca025096614d94565b6000610e3c8383614a0f565b6000826000018281548110614213576142136159d9565b9060005260206000200154905092915050565b6000610e3c83836149c0565b6000826000036142a15781600003614276576040517f4e305c4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61429a8661428b660100000000000080615e78565b6142958580615e78565b6144f3565b9050614328565b660100000000000084028584028386020160006142be868a615e78565b6142c89083615d12565b905060006142d68485614ddf565b905060006142e48484614ddf565b905060006142f28383614e0e565b905060006143018788846144f3565b9050600061431087878561455b565b905061431d8e83836144f3565b985050505050505050505b95945050505050565b60006001600160801b038211156143b05760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f32382062697473000000000000000000000000000000000000000000000000006064820152608401610bf1565b5090565b60008260000361441c57816000036143f8576040517f4e305c4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61429a866144068480615e78565b614417660100000000000080615e78565b61455b565b660100000000000084028584028386020160006144398983615e78565b905060006144478485614ddf565b905060006144558389614ddf565b905060006144638383614e0e565b905060006144728788846144f3565b90506000614481868c856144f3565b90506000806144908484614e24565b9150915081156144bf576144ae896144a8878b615e8f565b8361455b565b9a5050505050505050505050614328565b6144ca8a8b8a6144f3565b6144d4908e615b19565b6144de908a615e8f565b9a505050505050505050505095945050505050565b60008061450185858561455b565b90506000614510868686614e4d565b1115610b27576000198110614551576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001019050610e3c565b600080600061456a8686614e68565b915091508160000361458f5783818161458557614585615d8a565b0492505050610e3c565b8382106145c8576040517f35278d1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006145d5878787614e4d565b90506000806145e5858585614ea1565b915091508160000361460d5786818161460057614600615d8a565b0495505050505050610e3c565b6000878103881690614620848484614ed1565b9050600061463c838b8161463657614636615d8a565b04614f0e565b919091029b9a5050505050505050505050565b600061465a8361161a565b1561467057506001600160a01b03811631610841565b826040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015291909116906370a0823190602401602060405180830381865afa1580156146d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c9190615eb1565b80158061470757506147078461161a565b61237f5761237f6001600160a01b038516848484614f2f565b8060000361472d57505050565b6147368361161a565b15614771576040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561237f573d6000803e3d6000fd5b610ad06001600160a01b0384168383614fe0565b60606108416001600160a01b03831660145b606060006147a6836002615e78565b6147b1906002615b19565b67ffffffffffffffff8111156147c9576147c9615b5f565b6040519080825280601f01601f1916602001820160405280156147f3576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061482a5761482a6159d9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061488d5761488d6159d9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006148c9846002615e78565b6148d4906001615b19565b90505b6001811115614971577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110614915576149156159d9565b1a60f81b82828151811061492b5761492b6159d9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361496a81615eca565b90506148d7565b508315610e3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610bf1565b6000818152600183016020526040812054614a0757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610841565b506000610841565b60008181526001830160205260408120548015614af8576000614a33600183615d12565b8554909150600090614a4790600190615d12565b9050818114614aac576000866000018281548110614a6757614a676159d9565b9060005260206000200154905080876000018481548110614a8a57614a8a6159d9565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080614abd57614abd615ee1565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610841565b6000915050610841565b600054610100900460ff166115235760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b600054610100900460ff16614bd85760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b6115236107d061277b565b600054610100900460ff16614c4e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b61012d805461ffff19166001179055614c877f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509680614d94565b6115237f2172861495e7b85edac73e3cd5fbb42dd675baadf627720e687bcfdaca02509633615029565b600054610100900460ff16611ca25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b600054610100900460ff16614d875760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610bf1565b610191805460ff19169055565b600082815260c96020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000806000614dee8585614e68565b9150915080198211614e035781600101614328565b506002019392505050565b6000818311614e1d5781610e3c565b5090919050565b60008083830184811015614e3f576000809250925050614e46565b6001925090505b9250929050565b60008180614e5d57614e5d615d8a565b838509949350505050565b6000806000614e778585615033565b9050848402808210614e90579081900392509050614e46565b600181830303969095509350505050565b600080828410614eb75750839050818303614ec9565b614ec2600186615d12565b9150508183035b935093915050565b600080614eef8380830381614ee857614ee8615d8a565b0460010190565b9050828481614f0057614f00615d8a565b048186021795945050505050565b60006001815b60088110156133ac5783820260020382029150600101614f14565b6040516001600160a01b038085166024830152831660448201526064810182905261237f9085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152615042565b6040516001600160a01b038316602482015260448101829052610ad09084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401614f7c565b610c048282612553565b60006000198284099392505050565b6000615097826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661512a9092919063ffffffff16565b90508051600014806150b85750808060200190518101906150b89190615ef7565b610ad05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610bf1565b6060610b27848460008585600080866001600160a01b031685876040516151519190615f19565b60006040518083038185875af1925050503d806000811461518e576040519150601f19603f3d011682016040523d82523d6000602084013e615193565b606091505b50915091506151a4878383876151af565b979650505050505050565b6060831561521e578251600003615217576001600160a01b0385163b6152175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bf1565b5081610b27565b610b2783838151156152335781518083602001fd5b8060405162461bcd60e51b8152600401610bf19190615e45565b604051806040016040528060006001600160801b0316815260200161527061533b565b905290565b604080516080810182526000808252602082015290810161529461533b565b8152602001615270615359565b8260028101928215615301579160200282015b8281111561530157825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b039091161782556020909201916001909101906152b4565b506143b09291506153bd565b8260038101928215615301579160200282015b82811115615301578251825591602001919060010190615320565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816153685790505090565b60405180606001604052806003906020820280368337509192915050565b5b808211156143b057600081556001016153be565b6000602082840312156153e457600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e3c57600080fd5b6001600160a01b0381168114610c3b57600080fd5b60008083601f84011261543b57600080fd5b50813567ffffffffffffffff81111561545357600080fd5b6020830191508360208260061b8501011115614e4657600080fd5b80356001600160801b038116811461548557600080fd5b919050565b60008060008060008060a087890312156154a357600080fd5b86356154ae81615414565b955060208701356154be81615414565b9450604087013567ffffffffffffffff8111156154da57600080fd5b6154e689828a01615429565b909550935050606087013591506154ff6080880161546e565b90509295509295509295565b80610100810183101561084157600080fd5b6000806000610220848603121561553357600080fd5b83359250615544856020860161550b565b915061555485610120860161550b565b90509250925092565b60006020828403121561556f57600080fd5b5035919050565b6000806000806060858703121561558c57600080fd5b843561559781615414565b935060208501356155a781615414565b9250604085013567ffffffffffffffff8111156155c357600080fd5b6155cf87828801615429565b95989497509550505050565b600080604083850312156155ee57600080fd5b82359150602083013561560081615414565b809150509250929050565b6000806040838503121561561e57600080fd5b823561562981615414565b9150602083013561560081615414565b803563ffffffff8116811461548557600080fd5b60008060006060848603121561566257600080fd5b833561566d81615414565b9250602084013561567d81615414565b915061555460408501615639565b60006020828403121561569d57600080fd5b610e3c82615639565b8060005b600281101561237f5781516001600160a01b03168452602093840193909101906001016156aa565b81516001600160801b0316815260208083015160608301916133ac908401826156a6565b6000806020838503121561570957600080fd5b823567ffffffffffffffff8082111561572157600080fd5b818501915085601f83011261573557600080fd5b81358181111561574457600080fd5b86602082850101111561575657600080fd5b60209290920196919550909350505050565b6000806040838503121561577b57600080fd5b50508035926020909101359150565b60008060006060848603121561579f57600080fd5b83356157aa81615414565b92506020840135915060408401356157c181615414565b809150509250925092565b8051825260206001600160a01b0381830151168184015260408201516157f560408501826156a6565b506060820151608080850160005b6002811015615865576158558285516001600160801b0380825116835280602083015116602084015250604081015167ffffffffffffffff808216604085015280606084015116606085015250505050565b9284019290820190600101615803565b50505050505050565b610180810161084182846157cc565b6000806000610140848603121561589357600080fd5b833561589e81615414565b925060208401356158ae81615414565b9150615554856040860161550b565b600080600080608085870312156158d357600080fd5b84356158de81615414565b935060208501356158ee81615414565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015615946576159328385516157cc565b92840192610180929092019160010161591f565b50909695505050505050565b60006020828403121561596457600080fd5b8135610e3c81615414565b602080825282518282018190526000919060409081850190868401855b828110156159af5761599f8483516156a6565b928401929085019060010161598c565b5091979650505050505050565b6000602082840312156159ce57600080fd5b8151610e3c81615414565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b61ffff8181168382160190808211156133ac576133ac6159ef565b600060208284031215615a3257600080fd5b610e3c8261546e565b6001600160801b038181168382160190808211156133ac576133ac6159ef565b6101208101615aa882866001600160801b0380825116835280602083015116602084015250604081015167ffffffffffffffff808216604085015280606084015116606085015250505050565b83516001600160801b03908116608084015260208501511660a0830152604084015167ffffffffffffffff90811660c084015260608501511660e08301525b60ff8316610100830152949350505050565b6001600160801b038281168282160390808211156133ac576133ac6159ef565b80820180821115610841576108416159ef565b803567ffffffffffffffff8116811461548557600080fd5b600060208284031215615b5657600080fd5b610e3c82615b2c565b634e487b7160e01b600052604160045260246000fd5b600060808284031215615b8757600080fd5b6040516080810181811067ffffffffffffffff82111715615bb857634e487b7160e01b600052604160045260246000fd5b604052615bc48361546e565b8152615bd26020840161546e565b6020820152615be360408401615b2c565b6040820152615bf460608401615b2c565b60608201529392505050565b6001600160801b0380615c128361546e565b16835280615c226020840161546e565b16602084015250615c3560408201615b2c565b67ffffffffffffffff808216604085015280615c5360608501615b2c565b16606085015250505050565b6101208101615c6e8286615c00565b615ae76080830185615c00565b8381526101208101615cce60208301856001600160801b0380825116835280602083015116602084015250604081015167ffffffffffffffff808216604085015280606084015116606085015250505050565b82516001600160801b0390811660a084015260208401511660c0830152604083015167ffffffffffffffff90811660e0840152606084015116610100830152610b27565b81810381811115610841576108416159ef565b8381526101208101615d3a6020830185615c00565b610b2760a0830184615c00565b60006001600160801b03808316818103615d6357615d636159ef565b6001019392505050565b63ffffffff8281168282160390808211156133ac576133ac6159ef565b634e487b7160e01b600052601260045260246000fd5b60005b83811015615dbb578181015183820152602001615da3565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615dfc816017850160208801615da0565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351615e39816028840160208801615da0565b01602801949350505050565b6020815260008251806020840152615e64816040850160208701615da0565b601f01601f19169190910160400192915050565b8082028115828204841417610841576108416159ef565b600082615eac57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215615ec357600080fd5b5051919050565b600081615ed957615ed96159ef565b506000190190565b634e487b7160e01b600052603160045260246000fd5b600060208284031215615f0957600080fd5b81518015158114610e3c57600080fd5b60008251615f2b818460208701615da0565b919091019291505056fea26469706673582212209c302235969fcbab86da2b510d8218382e4a4d1b6fe46dba8661433bf44b251364736f6c63430008130033",
    "sourceMap": "968:13709:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:223:58;;;;;;;;;;-1:-1:-1;962:223:58;;;;;:::i;:::-;;:::i;:::-;;;516:14:127;;509:22;491:41;;479:2;464:18;962:223:58;;;;;;;;10025:1073:0;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2473:47:127;;;2455:66;;2443:2;2428:18;10025:1073:0;2309:218:127;6592:876:0;;;;;;:::i;:::-;;:::i;:::-;;4834:129:59;;;;;;;;;;-1:-1:-1;4834:129:59;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;;;;3553:25:127;;;3541:2;3526:18;4834:129:59;3407:177:127;11772:557:0;;;;;;;;;;-1:-1:-1;11772:557:0;;;;;:::i;:::-;;:::i;3394:100::-;;;;;;;;;;-1:-1:-1;1418:30:0;3394:100;;5259:145:59;;;;;;;;;;-1:-1:-1;5259:145:59;;;;;:::i;:::-;;:::i;8797:256:0:-;;;;;;;;;;-1:-1:-1;8797:256:0;;;;;:::i;:::-;;:::i;6368:214:59:-;;;;;;;;;;-1:-1:-1;6368:214:59;;;;;:::i;:::-;;:::i;13430:94:0:-;;;;;;;;;;;;;:::i;3220:110::-;;;;;;;;;;-1:-1:-1;1273:35:0;3220:110;;3036:115;;;;;;;;;;-1:-1:-1;3143:1:0;3036:115;;;5626:6:127;5614:19;;;5596:38;;5584:2;5569:18;3036:115:0;5452:188:127;4558:285:0;;;;;;;;;;-1:-1:-1;4558:285:0;;;;;:::i;:::-;;:::i;1858:84:64:-;;;;;;;;;;-1:-1:-1;1928:7:64;;;;1858:84;;4223:149:0;;;;;;;;;;-1:-1:-1;4223:149:0;;;;;:::i;:::-;;:::i;2174:83::-;;;;;;;;;;;;;:::i;13175:90::-;;;;;;;;;;;;;:::i;5354:169::-;;;;;;;;;;-1:-1:-1;5354:169:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7569:485::-;;;;;;;;;;-1:-1:-1;7569:485:0;;;;;:::i;:::-;;:::i;2361:282:32:-;;;;;;;;;;-1:-1:-1;2361:282:32;;;;;:::i;:::-;;:::i;1770:151:58:-;;;;;;;;;;-1:-1:-1;1770:151:58;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8569:55:127;;;8551:74;;8539:2;8524:18;1770:151:58;8405:226:127;3329:145:59;;;;;;;;;;-1:-1:-1;3329:145:59;;;;;:::i;:::-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;;;;3329:145;2109:87:32;;;;;;;;;;-1:-1:-1;960:23:32;2109:87;;12598:413:0;;;;;;;;;;-1:-1:-1;12598:413:0;;;;;:::i;:::-;;:::i;2450:49:59:-;;;;;;;;;;-1:-1:-1;2450:49:59;2495:4;2450:49;;3553:104:0;;;;;;;;;;-1:-1:-1;1497:1:0;3553:104;;3869:192;;;;;;;;;;-1:-1:-1;3869:192:0;;;;;:::i;:::-;;:::i;:::-;;;9335:10:127;9323:23;;;9305:42;;9293:2;9278:18;3869:192:0;9161::127;8113:202:0;;;;;;;;;;-1:-1:-1;8113:202:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4902:243::-;;;;;;;;;;-1:-1:-1;4902:243:0;;;;;:::i;:::-;;:::i;2089:140:58:-;;;;;;;;;;-1:-1:-1;2089:140:58;;;;;:::i;:::-;;:::i;5684:147:59:-;;;;;;;;;;-1:-1:-1;5684:147:59;;;;;:::i;:::-;;:::i;3716:94:0:-;;;;;;;;;;-1:-1:-1;3789:14:0;;;;;;;3716:94;;9112:854;;;;;;:::i;:::-;;:::i;11157:556::-;;;;;;;;;;-1:-1:-1;11157:556:0;;;;;:::i;:::-;;:::i;5625:908::-;;;;;;:::i;:::-;;:::i;8374:364::-;;;;;;;;;;-1:-1:-1;8374:364:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12388:151::-;;;;;;;;;;-1:-1:-1;12388:151:0;;;;;:::i;:::-;;:::i;5204:91::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;962:223:58:-;1047:4;1070:68;;;1085:53;1070:68;;:108;;;1142:36;1166:11;1142:23;:36::i;:::-;1063:115;962:223;-1:-1:-1;;962:223:58:o;10025:1073:0:-;10282:7;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;10301:77:0::3;10322:11;10335;10348:8;10358:9;10369:8;10301:20;:77::i;:::-;10393:22;:11;-1:-1:-1::0;;;;;10393:20:0::3;;:22::i;:::-;10389:212;;;10508:8;-1:-1:-1::0;;;;;10496:20:0::3;:9;:20;10492:99;;;10543:33;;;;;;;;;;;;;;10492:99;10611:17;10631:31;10637:11;10650;10631:5;:31::i;:::-;10700:317;::::0;;::::3;::::0;::::3;::::0;;10734:10:::3;10700:317:::0;;10766:57;;;;::::3;::::0;;-1:-1:-1;;;;;10766:57:0;;::::3;::::0;;;::::3;10700:317;10766:57:::0;;::::3;::::0;;;;10700:317;::::3;::::0;10853:4:::3;10700:317:::0;;;;;;;-1:-1:-1;;;;;10700:317:0;::::3;::::0;;;;10914:9:::3;10700:317:::0;;;;;;;;;;10672:25:::3;10700:317:::0;;;;;;;;;;10611:51;;-1:-1:-1;11027:28:0::3;11034:12:::0;;10700:317;11027:6:::3;:28::i;:::-;11072:19;;::::0;;-1:-1:-1;;2547:20:65;1787:1;3053:7;:22;2873:209;2547:20;10025:1073:0;;;;;;;;:::o;6592:876::-;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;6800:24:0::3;6827:42;6837:31;6857:10;33176:3:2::0;33162:17;;33056:131;6837:31:0::3;6827:9;:42::i;:::-;6964:28;::::0;-1:-1:-1;;;6964:28:0;;::::3;::::0;::::3;3553:25:127::0;;;6800:69:0;;-1:-1:-1;6964:8:0::3;-1:-1:-1::0;;;;;6964:16:0::3;::::0;::::3;::::0;3526:18:127;;6964:28:0::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6950:42:0::3;:10;-1:-1:-1::0;;;;;6950:42:0::3;;6946:94;;7015:14;;-1:-1:-1::0;;;7015:14:0::3;;;;;;;;;;;6946:94;7105:1;7093:9;:13;:51;;;;-1:-1:-1::0;7111:19:0::3;::::0;::::3;::::0;:33:::3;::::0;7131:1:::3;7111:22;;;;;-1:-1:-1::0;;;;;7111:31:0::3;;:33::i;:::-;7110:34;7093:51;:89;;;;-1:-1:-1::0;7149:19:0::3;::::0;::::3;::::0;:33:::3;::::0;7169:1:::3;7149:22;::::0;:33:::3;7148:34;7093:89;7089:159;;;7205:32;;-1:-1:-1::0;;;7205:32:0::3;;;;;;;;;;;7089:159;7308:26;7324:9;7308:15;:26::i;:::-;7371:90;7387:10;7399:13;7414:9;7425:12;7439:10;7451:9;7371:15;:90::i;:::-;6790:678;2547:20:65::0;1787:1;3053:7;:22;2873:209;2547:20;6592:876:0;;;:::o;11772:557::-;11936:7;11955:46;11976:11;11989;11955:20;:46::i;:::-;12011:24;12038:31;12044:11;12057;12038:5;:31::i;:::-;12107:57;;;;;;;;;-1:-1:-1;;;;;12107:57:0;;;;;;;;;;;12011:58;;-1:-1:-1;12079:25:0;12214:71;12107:57;12251:12;;12011:58;12079:25;12214:28;:71::i;:::-;12302:20;;;;-1:-1:-1;;;;11772:557:0;;;;;;;:::o;5259:145:59:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;8797:256:0:-:0;8879:7;8898:36;8919:6;8927;8898:20;:36::i;:::-;8945:24;8972:21;8978:6;8986;8972:5;:21::i;:::-;8945:48;;9010:36;9033:12;9010:22;:36::i;6368:214:59:-;-1:-1:-1;;;;;6463:23:59;;929:10:71;6463:23:59;6455:83;;;;-1:-1:-1;;;6455:83:59;;14497:2:127;6455:83:59;;;14479:21:127;14536:2;14516:18;;;14509:30;14575:34;14555:18;;;14548:62;14646:17;14626:18;;;14619:45;14681:19;;6455:83:59;;;;;;;;;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;13430:94:0:-;1273:35;1936:26:32;1945:4;1951:10;1936:8;:26::i;:::-;13507:10:0::1;:8;:10::i;:::-;13430:94:::0;:::o;4558:285::-;1831:32:32;960:23;1852:10;1831:8;:32::i;:::-;4703:20:0::1;1169:14:33;1179:3;1169:9;:14::i;:::-;4735:17:0::2;4755:21;4761:6;4769;4755:5;:21::i;:::-;4735:41;;4786:50;4808:5;4815:20;4786:21;:50::i;:::-;4725:118;1874:1:32::1;4558:285:0::0;;;:::o;4223:149::-;1831:32:32;960:23;1852:10;1831:8;:32::i;:::-;4302:16:0::1;1169:14:33;1179:3;1169:9;:14::i;:::-;4330:35:0::2;4348:16;4330:17;:35::i;2174:83::-:0;3279:19:63;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:63;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:63;1713:19:70;:23;;;3387:66:63;;-1:-1:-1;3436:12:63;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:63;;14913:2:127;3325:201:63;;;14895:21:127;14952:2;14932:18;;;14925:30;14991:34;14971:18;;;14964:62;15062:16;15042:18;;;15035:44;15096:19;;3325:201:63;14711:410:127;3325:201:63;3536:12;:16;;-1:-1:-1;;3536:16:63;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:63;;;;;3562:65;2225:25:0::1;:23;:25::i;:::-;3651:14:63::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:63;;;3721:14;;-1:-1:-1;15278:36:127;;3721:14:63;;15266:2:127;15251:18;3721:14:63;;;;;;;3269:483;2174:83:0:o;13175:90::-;1273:35;1936:26:32;1945:4;1951:10;1936:8;:26::i;:::-;13250:8:0::1;:6;:8::i;5354:169::-:0;5419:11;;:::i;:::-;5442:36;5463:6;5471;5442:20;:36::i;:::-;5495:21;5501:6;5509;5495:5;:21::i;:::-;5488:28;5354:169;-1:-1:-1;;;5354:169:0:o;7569:485::-;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;7719:24:0::3;7746:42;7756:31;7776:10;33176:3:2::0;33162:17;;33056:131;7746:42:0::3;7883:28;::::0;-1:-1:-1;;;7883:28:0;;::::3;::::0;::::3;3553:25:127::0;;;7719:69:0;;-1:-1:-1;7883:8:0::3;-1:-1:-1::0;;;;;7883:16:0::3;::::0;::::3;::::0;3526:18:127;;7883:28:0::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7869:42:0::3;:10;-1:-1:-1::0;;;;;7869:42:0::3;;7865:94;;7934:14;;-1:-1:-1::0;;;7934:14:0::3;;;;;;;;;;;7865:94;7996:51;8012:10;8024:8;8034:12;7996:15;:51::i;:::-;7667:387;2547:20:65::0;1787:1;3053:7;:22;2873:209;2361:282:32;2447:16;;2422:22;;2447:20;;:16;;;:20;:::i;:::-;2422:45;-1:-1:-1;2481:28:32;;;3143:1:0;2481:28:32;2477:86;;2532:20;;;;;;;;;;;;;;2477:86;2573:16;:34;;-1:-1:-1;;2573:34:32;;;;;;;6592:876:0;;;:::o;1770:151:58:-;1860:7;1886:18;;;:12;:18;;;;;:28;;1908:5;1886:21;:28::i;12598:413:0:-;12923:7;1482:19:64;:17;:19::i;:::-;1418:30:0::1;1936:26:32;1945:4;1951:10;1936:8;:26::i;:::-;12800:9:0::2;857:19:33;871:4;857:13;:19::i;:::-;12845:5:0::3;857:19:33;871:4;857:13;:19::i;:::-;12877:6:0::4;510:23:33;527:5;510:16;:23::i;:::-;2505:21:65::5;:19;:21::i;:::-;12953:51:0::6;12967:10;12979:6;12987:5;12994:9;12953:13;:51::i;:::-;12946:58;;2547:20:65::5;1787:1:::0;3053:7;:22;2873:209;2547:20:::5;887:1:33::4;::::3;1973::32::2;1511::64::1;12598:413:0::0;;;;;:::o;3869:192::-;3947:6;3965:17;3985:21;3991:6;3999;3985:5;:21::i;:::-;3965:41;;4023:31;4045:5;:8;;;4023:21;:31::i;8113:202::-;8166:15;;:::i;:::-;8193:24;8220:34;8230:23;8250:2;33176:3:2;33162:17;;33056:131;8220:34:0;8193:61;;8271:37;8281:2;8285:8;8295:12;8271:9;:37::i;4902:243::-;5035:11;;:::i;:::-;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;5058:36:0::3;5079:6;5087;5058:20;:36::i;:::-;5111:27;5123:6;5131;5111:11;:27::i;:::-;5104:34;;2547:20:65::0;1787:1;3053:7;:22;2873:209;2089:140:58;2169:7;2195:18;;;:12;:18;;;;;:27;;:25;:27::i;5684:147:59:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;9112:854:0:-:0;9370:7;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;9389:78:0::3;9410:11;9423;9436:8;9446:9;9457;9389:20;:78::i;:::-;9477:17;9497:31;9503:11;9516;9497:5;:31::i;:::-;9566:319;::::0;;::::3;::::0;::::3;::::0;;9600:10:::3;9566:319:::0;;9632:57;;;;::::3;::::0;;-1:-1:-1;;;;;9632:57:0;;::::3;::::0;;;::::3;9566:319;9632:57:::0;;::::3;::::0;;;;9566:319;::::3;::::0;9538:25:::3;9566:319:::0;;;;;;-1:-1:-1;;;;;9566:319:0;::::3;::::0;;;;9782:9:::3;9566:319:::0;;;;;;;;;;;;;;;;;;;;;;;9477:51;;-1:-1:-1;9895:28:0::3;9902:12:::0;;9566:319;9895:6:::3;:28::i;:::-;9940:19;;::::0;;-1:-1:-1;;2547:20:65;1787:1;3053:7;:22;2873:209;11157:556:0;11321:7;11340:46;11361:11;11374;11340:20;:46::i;:::-;11396:24;11423:31;11429:11;11442;11423:5;:31::i;:::-;11492:57;;;;;;;;;-1:-1:-1;;;;;11492:57:0;;;;;;;;;;;11396:58;;-1:-1:-1;11464:25:0;11599:70;11492:57;11636:12;;11396:58;11664:4;11599:28;:70::i;:::-;11686:20;;11157:556;-1:-1:-1;;;;;;;;11157:556:0:o;5625:908::-;5804:7;2505:21:65;:19;:21::i;:::-;1482:19:64::1;:17;:19::i;:::-;327:20:31::2;:18;:20::i;:::-;5823:36:0::3;5844:6;5852;5823:20;:36::i;:::-;5925:1;5913:9;:13;:35;;;;;5931:17;:6;-1:-1:-1::0;;;;;5931:15:0::3;;:17::i;:::-;5930:18;5913:35;:57;;;;;5953:17;:6;-1:-1:-1::0;;;;;5953:15:0::3;;:17::i;:::-;5952:18;5913:57;5909:127;;;5993:32;;-1:-1:-1::0;;;5993:32:0::3;;;;;;;;;;;5909:127;6096:23;6112:6;6096:15;:23::i;:::-;6178:24;;:::i;:::-;6217:27;6229:6;6237;6217:11;:27::i;:::-;6212:168;;6275:27;6287:6;6295;6275:11;:27::i;:::-;6260:42;;6212:168;;;6348:21;6354:6;6362;6348:5;:21::i;:::-;6333:36;;6212:168;6390:41;::::0;;;;::::3;::::0;;;-1:-1:-1;;;;;6390:41:0;;::::3;::::0;;;::::3;;::::0;::::3;::::0;6448:78:::3;6464:8;6390:41:::0;6482:6;6490:12;6504:10:::3;6516:9;6448:15;:78::i;:::-;6441:85;;;;2547:20:65::0;1787:1;3053:7;:22;2873:209;8374:364:0;8527:17;8556:36;8577:6;8585;8556:20;:36::i;:::-;8603:24;8630:21;8636:6;8644;8630:5;:21::i;:::-;8603:48;;8668:63;8686:12;8700:10;8712:8;8722;8668:17;:63::i;12388:151::-;12483:7;12466:5;857:19:33;871:4;857:13;:19::i;:::-;-1:-1:-1;;;;;;;12509:23:0::1;;::::0;;;:16:::1;:23;::::0;;;;;;12388:151::o;5204:91::-;5244:17;5280:8;:6;:8::i;:::-;5273:15;;5204:91;:::o;3029:213:59:-;3114:4;3137:58;;;3152:43;3137:58;;:98;;-1:-1:-1;1183:36:73;1168:51;;;;3199:36:59;1060:166:73;2580:287:65;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:65;;15889:2:127;2704:63:65;;;15871:21:127;15928:2;15908:18;;;15901:30;15967:33;15947:18;;;15940:61;16018:18;;2704:63:65;15687:355:127;2704:63:65;1830:1;2842:7;:18;2580:287::o;2010:106:64:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:64;;16249:2:127;2071:38:64;;;16231:21:127;16288:2;16268:18;;;16261:30;16327:18;16307;;;16300:46;16363:18;;2071:38:64;16047:340:127;2071:38:64;2010:106::o;372:139:31:-;438:4;-1:-1:-1;;;;;447:6:31;430:23;;426:79;;476:18;;;;;;;;;;;;;;13952:723:0;14198:15;14187:8;:26;14183:81;;;14236:17;;;;;;;;;;;;;;14183:81;14315:28;14332:10;-1:-1:-1;;;;;14315:28:0;:16;:28::i;:::-;14410:46;14431:11;14444;14410:20;:46::i;:::-;14575:1;14567:5;:9;:36;;;;;14581:22;:11;-1:-1:-1;;;;;14581:20:0;;:22::i;:::-;14580:23;14567:36;14563:106;;;14626:32;;-1:-1:-1;;;14626:32:0;;;;;;;;;;;1465:88:25;1510:4;-1:-1:-1;;;;;1219:34:25;;568:42;1219:34;1529:21;1153:103;2227:450:1;2293:11;;:::i;:::-;2356:27;2368:6;2376;2356:11;:27::i;:::-;2351:84;;2406:18;;;;;;;;;;;;;;2351:84;2468:28;2499:27;2511:6;2519;2499:11;:27::i;:::-;2582:15;;-1:-1:-1;;;;;2573:25:1;;;2560:10;2573:25;;;:8;2582:15;2573:25;;;;;;;2599:15;;;;2573:42;;;;;;;;;;;;;2632:38;;;;;;;;-1:-1:-1;;;;;2573:42:1;2632:38;;;;;;;;;;-1:-1:-1;;;;2227:450:1:o;14341:4535:2:-;14440:19;14462:45;:6;:13;;;:20;;;14486:6;:11;;;:18;;;14505:1;14486:21;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1219:34:25;;;;;;;1153:103;14462:45:2;14440:67;;14556:9;14551:2644;14571:23;;;14551:2644;;;14664:14;14681:12;;14694:1;14681:15;;;;;;;:::i;:::-;;;;;;:22;;;;;;;;;;:::i;:::-;14664:39;;14717:18;14738:12;;14751:1;14738:15;;;;;;;:::i;:::-;;;;;;;;;:26;;14812:37;;;:25;:37;;;;;14863:51;;;;;;;;;14738:26;;-1:-1:-1;14812:37:2;14738:26;;-1:-1:-1;14812:37:2;;14863:51;;14812:37;14863:51;;;;;;;;;;;;;;;;;;;;;;;;14929:22;14953:19;14976:33;14990:18;14976:13;:33::i;:::-;14928:81;;;;15024:56;15045:6;:11;;;:14;;;15061:10;15073:6;15024:20;:56::i;:::-;15096:24;15122;15168:14;15150:32;;:14;:32;;;:114;;15243:9;;;15254;;;15150:114;;;15202:9;;;;15213;;15150:114;15095:169;;;;15327:20;15349;15373:146;15431:11;15460:6;15484;:21;;;15373:40;:146::i;:::-;15326:193;;;;15617:12;-1:-1:-1;;;;;15601:28:2;:11;:13;;;-1:-1:-1;;;;;15601:28:2;;15597:97;;;15656:23;;;;;;;;;;;;;;15597:97;15834:29;;;;;-1:-1:-1;;;;;15834:29:2;;;15892;;15909:12;;15892:29;;;;15909:12;;15892:29;:::i;:::-;-1:-1:-1;;;;;15892:29:2;;;;;;15955:13;;15939;;;;:29;;;;;;15935:97;;-1:-1:-1;15935:97:2;;16004:13;;-1:-1:-1;;;;;15988:29:2;:13;;;:29;15935:97;16091:33;16127:35;16139:6;16147:14;16127:11;:35::i;:::-;16268:18;;16250:36;;16268:18;16406;;;;16381:21;;;;16091:71;;-1:-1:-1;16381:43:2;16377:118;;16462:18;;;;16478:1;16444:15;;:36;16377:118;16621:18;;;;;16596:21;;;;:43;16592:118;;16677:18;;;;16693:1;16659:15;;:36;16592:118;16904:6;:11;;;:18;;;16923:14;:22;;16944:1;16923:22;;;16940:1;16923:22;16904:42;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;16762:323:2;16836:6;:11;;;:18;;;16855:14;:22;;16876:1;16855:22;;;16872:1;16855:22;16836:42;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;16762:323:2;16800:10;16762:323;16972:6;16979:1;16972:9;;;;17007:6;17014:1;17007:9;;;;5546:1;16762:323;;;;;;;;:::i;:::-;;;;;;;;17123:12;17100:6;:19;;:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;17100:35:2;;;-1:-1:-1;17149:19:2;;;:35;;17172:12;;17149:19;:35;;17172:12;;17149:35;:::i;:::-;-1:-1:-1;;;;;17149:35:2;;;-1:-1:-1;14600:15:2;;-1:-1:-1;14613:1:2;;-1:-1:-1;14600:12:2;;-1:-1:-1;;;;;;;;;14600:15:2:i;:::-;14596:19;;14551:2644;;;;17234:24;17272:6;:21;;;17268:869;;;17309:26;17338:44;17346:6;:19;;;17367:6;:11;;;:14;;;17338:7;:44::i;:::-;17309:73;;17436:6;:19;;;17415:18;:40;;;;:::i;:::-;-1:-1:-1;;;;;17469:40:2;;;:19;;;:40;;;17549:17;;;;17396:59;;-1:-1:-1;17527:39:2;;-1:-1:-1;17523:106:2;;;17593:21;;;;;;;;;;;;;;17523:106;17659:13;;;;;:20;-1:-1:-1;;;;;17642:38:2;;;;;:16;:38;;;;;;:58;;-1:-1:-1;;;;;17642:58:2;;;:38;:58;;;;;:::i;:::-;;;;-1:-1:-1;17268:869:2;;-1:-1:-1;;17268:869:2;;17731:26;17760:49;17773:6;:19;;;17794:6;:11;;;:14;;;17760:12;:49::i;:::-;17731:78;;17864:18;17842:6;:19;;;:40;;;;:::i;:::-;-1:-1:-1;;;;;17896:40:2;;;:19;;;:40;;;17976:17;;;;17823:59;;-1:-1:-1;17954:39:2;;-1:-1:-1;17950:105:2;;;18020:20;;;;;;;;;;;;;;17950:105;18085:13;;;;;:20;;;-1:-1:-1;;;;;18068:38:2;;;;;:16;:38;;;;;;:58;;-1:-1:-1;;;;;18068:58:2;;;:38;:58;;;;;:::i;:::-;;;;-1:-1:-1;;;17268:869:2;18173:193;18229:6;:13;;;:20;;;18263:6;:13;;;18290:6;:19;;;-1:-1:-1;;;;;18173:193:2;18323:6;:14;;;18351:5;18173:42;:193::i;:::-;18376:81;18391:6;:13;;;:20;;;18421:6;:13;;;18437:6;:19;;;-1:-1:-1;;;;;18376:81:2;:14;:81::i;:::-;18645:6;:13;;;:20;;;-1:-1:-1;;;;;18523:346:2;18598:6;:13;;;:20;;;-1:-1:-1;;;;;18523:346:2;18558:6;:13;;;-1:-1:-1;;;;;18523:346:2;;18693:6;:19;;;18740:6;:19;;;18791:16;18837:6;:21;;;18523:346;;;;;;;;-1:-1:-1;;;;;17876:15:127;;;17858:34;;17928:15;;;17923:2;17908:18;;17901:43;17980:15;;17975:2;17960:18;;17953:43;18039:14;;18032:22;18027:2;18012:18;;18005:50;17792:3;17777:19;;17580:481;18523:346:2;;;;;;;;14430:4446;;14341:4535;;;:::o;2873:209:65:-;1787:1;3053:7;:22;2873:209::o;2683:289:1:-;2741:11;;:::i;:::-;-1:-1:-1;;;;;2789:21:1;;2764:22;2789:21;;;:13;:21;;;;;;2764:46;;;;;;;;;;;;2789:21;2764:46;;;;-1:-1:-1;;;;;2764:46:1;;;;;;;;;;;;;;;;;;;;;;2859:1;-1:-1:-1;;;;;2824:37:1;2837:6;2844:1;2837:9;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2824:37:1;;2820:93;;2884:18;;;;;;;;;;;;;;2820:93;2929:36;;;;;;;;;-1:-1:-1;;;;;2929:36:1;;;;;;;;;-1:-1:-1;2929:36:1;2683:289::o;32282:438:2:-;32362:9;32357:357;32381:1;32377;:5;32357:357;;;32437:6;32444:1;32437:9;;;;;;;:::i;:::-;;;;:11;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32423:25:2;:6;32430:1;32423:9;;;;;;;:::i;:::-;;;;:11;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32423:25:2;;32419:93;;;32475:22;;;;;;;;;;;;;;32419:93;32530:23;32541:6;32548:1;32541:9;;;;;;;:::i;:::-;;;;:11;;;;;;;;;;:::i;:::-;32530:23;;6538:7;31392:10;;;;31384:19;31383:25;;;31234:191;32530:23;32525:83;;32580:13;;;;;;;;;;;;;;32525:83;32626:23;32637:6;32644:1;32637:9;;;;;;;:::i;:::-;;;;:11;;;;;;;;;;:::i;32626:23::-;32621:83;;32676:13;;;;;;;;;;;;;;32621:83;34729:1;34725:5;32357:357;;10765:2467;11029:31;11063:37;;;:25;:37;;;;;;11110:51;;;;;;;;;11063:37;;11029:31;11063:37;;11110:51;;11063:37;11110:51;;;;;;;;;;;;;;;;;;;;;;;;11172:22;11196:19;11219:33;11233:18;11219:13;:33::i;:::-;11333:43;;;;;;;;;11171:81;;-1:-1:-1;11171:81:2;-1:-1:-1;11333:43:2;;11354:13;11333:43;-1:-1:-1;11333:43:2;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11369:6;11333:20;:43::i;:::-;11328:92;;11399:10;;;;;;;;;;;;;;11328:92;11507:38;;;;;;;;;11471:33;;11507:38;;11519:9;11507:38;11471:33;11507:38;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11530:14;11507:11;:38::i;:::-;11584:18;;11559:21;;11471:74;;-1:-1:-1;11559:43:2;11555:110;;11636:18;;11618:36;;11555:110;11703:18;;;;;11678:21;;;;:43;11674:110;;11755:18;;;;11771:1;11737:15;;:36;11674:110;11822:18;;;;;11797:21;;;;:43;11793:110;;11874:18;;;;11890:1;11856:15;;:36;11793:110;11945:28;11976:41;11996:4;12002:14;11976:19;:41::i;:::-;11945:72;;12032:9;12027:915;12051:1;12047;:5;12027:915;;;12089:11;12103:12;12116:1;12103:15;;;;;;;:::i;:::-;;;;;12089:29;;12153:6;12160:1;12153:9;;;;;;;:::i;:::-;;;;;:11;-1:-1:-1;;;;;12136:28:2;:9;12146:1;12136:12;;;;;;;:::i;:::-;;;;:14;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12136:28:2;;12132:513;;;12249:13;12279:9;12289:1;12279:12;;;;;;;:::i;:::-;;;;:14;;;;;;;;;;:::i;:::-;12265:6;12272:1;12265:9;;;;;;;:::i;:::-;;;;;:11;:28;;;;:::i;:::-;12249:44;;12311;12326:5;12341;12349;-1:-1:-1;;;;;12311:44:2;:14;:44::i;:::-;12166:204;12132:513;;;12397:6;12404:1;12397:9;;;;;;;:::i;:::-;;;;;:11;-1:-1:-1;;;;;12380:28:2;:9;12390:1;12380:12;;;;;;;:::i;:::-;;;;:14;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12380:28:2;;12376:269;;;12492:13;12525:6;12532:1;12525:9;;;;;;;:::i;:::-;;;;;:11;12508:9;12518:1;12508:12;;;;;;;:::i;:::-;;;;:14;;;;;;;;;;:::i;:::-;:28;;;;:::i;:::-;12492:44;;12554:76;12597:5;12604;12611;-1:-1:-1;;;;;12554:76:2;12618:5;12625:4;12554:42;:76::i;:::-;12410:235;12376:269;12803:1;12795:5;:9;:29;;;;;12808:16;:5;-1:-1:-1;;;;;12808:14:2;;:16::i;:::-;12795:62;;;;;12846:6;12853:1;12846:9;;;;;;;:::i;:::-;;;;;:11;-1:-1:-1;;;;;12828:29:2;:9;12838:1;12828:12;;;;;;;:::i;:::-;;;;:14;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12828:29:2;;;12795:62;12791:141;;;12877:40;-1:-1:-1;;;;;12877:33:2;;12911:5;12877:33;:40::i;:::-;-1:-1:-1;34729:1:2;34725:5;12027:915;;;-1:-1:-1;13082:15:2;;;;13045;;12979:246;;-1:-1:-1;;;;;12979:246:2;;;;;;;;13013:10;;12979:246;;;;13119:9;;:12;13153;;;13058:1;;12979:246;:::i;:::-;;;;;;;;10983:2249;;;;;;10765:2467;;;;;;:::o;13611:253:0:-;13730:6;857:19:33;871:4;857:13;:19::i;:::-;13765:6:0::1;857:19:33;871:4;857:13;:19::i;:::-;-1:-1:-1::0;;;;;1219:34:25;;;;;;;13784:74:0::2;;13827:20;;;;;;;;;;;;;;13784:74;887:1:33::1;13611:253:0::0;;;:::o;20108:1538:2:-;-1:-1:-1;;;;;;;;;;;;;;;;;20358:19:2;20380:31;:6;:13;;;20397:4;:11;;;20409:1;20397:14;;;;;;;:::i;20380:31::-;20358:53;;20460:9;20455:947;20475:23;;;20455:947;;;20568:14;20585:12;;20598:1;20585:15;;;;;;;:::i;:::-;;;;;;:22;;;;;;;;;;:::i;:::-;20568:39;;20621:18;20642:12;;20655:1;20642:15;;;;;;;:::i;:::-;;;;;;;;;:26;;20721:37;;;:25;:37;;;;;20682:76;;;;;;;;;20642:26;;-1:-1:-1;20642:26:2;;20682:76;;-1:-1:-1;20721:37:2;20682:76;;20721:37;20682:76;;;;;;;;;;;;;;;;;;;;;;;;20773:22;20797:19;20820:33;20834:18;20820:13;:33::i;:::-;20772:81;;;;20868:49;20889:4;:7;;;20898:10;20910:6;20868:20;:49::i;:::-;20932:24;20977:14;20959:32;;:14;:32;;;:56;;21006:9;;20959:56;;;20994:9;;;;20959:56;20932:83;;21078:20;21100;21124:139;21182:11;21211:6;21235:14;21124:40;:139::i;:::-;21077:186;;;;21330:12;21307:6;:19;;:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;21307:35:2;;;-1:-1:-1;21356:19:2;;;:35;;21379:12;;21356:19;:35;;21379:12;;21356:35;:::i;:::-;-1:-1:-1;;;;;21356:35:2;;;-1:-1:-1;20504:15:2;;-1:-1:-1;20517:1:2;;-1:-1:-1;20504:12:2;;-1:-1:-1;;;;;;20504:15:2:i;:::-;20500:19;;20455:947;;;;21445:14;21441:199;;;21505:19;;21526:7;;21497:37;;21505:19;21497:7;:37::i;:::-;-1:-1:-1;;;;;21475:59:2;;;21441:199;;;21587:42;21600:6;:19;;;21621:4;:7;;;21587:12;:42::i;:::-;-1:-1:-1;;;;;21565:64:2;:19;;;:64;21441:199;20348:1298;20108:1538;;;;;;;:::o;3768:103:59:-;3834:30;3845:4;929:10:71;3834::59;:30::i;2317:166:58:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;22847:227:2:-;23022:7;;-1:-1:-1;;;;;22994:36:2;22920:7;22994:36;;;:27;:36;;;;;23047:20;22994:36;23047:18;:20::i;2572:171:58:-;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:18;;;;:12;:18;;;;;:34;;2728:7;2702:25;:34::i;2828:154:32:-;3415:4:59;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;2901:75:32;;2951:14;;-1:-1:-1;;;2951:14:32;;;;;;;;;;;2676:117:64;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:64::1;::::0;;2764:22:::1;929:10:71::0;2773:12:64::1;2764:22;::::0;-1:-1:-1;;;;;8569:55:127;;;8551:74;;8539:2;8524:18;2764:22:64::1;;;;;;;2676:117::o:0;1254:131:33:-;109:9:27;1313:20:33;;;;1309:70;;;1356:12;;;;;;;;;;;;;;25844:548:2;25997:7;;-1:-1:-1;;;;;25976:29:2;25943:30;25976:29;;;:20;:29;;;;;;;;;;;26019:49;;;;26015:86;;26084:7;25844:548;;:::o;26015:86::-;26132:7;;-1:-1:-1;;;;;26111:29:2;;;;;:20;:29;;;;;;;:54;;;;;;;;;;26264:11;;;;:14;;;;-1:-1:-1;;;;;26181:204:2;;26228:14;;;;-1:-1:-1;;;;;26181:204:2;;26304:23;26352:22;26181:204;;;;;;20588:10:127;20625:15;;;20607:34;;20677:15;;20672:2;20657:18;;20650:43;20566:2;20551:18;;20408:291;26181:204:2;;;;;;;;25933:459;25844:548;;:::o;25401:346::-;25499:14;;;;;;;;;;25527:37;;;;25523:74;;25580:7;25401:346;:::o;25523:74::-;25607:14;:33;;;;;;;;;;;;;;;;;;;25656:84;;;20625:15:127;;;20607:34;;20672:2;20657:18;;20650:43;;;;25656:84:2;;20551:18:127;25656:84:2;;;;;;;25462:285;25401:346;:::o;2376:258:0:-;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;2447:14:0::1;:12;:14::i;:::-;2471:19;:17;:19::i;:::-;2500:20;:18;:20::i;:::-;2530:24;:22;:24::i;:::-;2564:17;:15;:17::i;:::-;2592:35;:33;:35::i;2429:115:64:-:0;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:64::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:71::0;;850:96;13285:889:2;13385:24;13412:36;13422:10;13434:7;13443:4;13412:9;:36::i;:::-;13510:11;;13497:25;;;;;13385:63;;-1:-1:-1;;;;;;13497:12:2;;;;;:25;;;;3553::127;;;3541:2;3526:18;;3407:177;13497:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13591:11:2;;13565:38;;;;:25;:38;;;;;-1:-1:-1;;;;;;;;;;;;;13558:45:2;;-1:-1:-1;;13558:45:2;13657:11;;13641:7;;-1:-1:-1;;;;;13613:36:2;13657:11;13613:36;;;:27;:36;;;;;:56;;:43;:56::i;:::-;-1:-1:-1;13721:15:2;;;;:18;;13749:14;;;13766:15;;;;13706:81;;13721:18;13749:14;13737:1;13766:18;;;;;:20;-1:-1:-1;;;;;13706:81:2;:14;:81::i;:::-;13812:15;;;;:18;;;;;13840:14;;;;13857:15;;;;13797:81;;13812:18;13840:14;13828:1;13857:18;;13797:81;14058:15;;;;:18;;;;-1:-1:-1;;;;;13916:251:2;;14034:1;14018:18;;;;-1:-1:-1;;;;;13916:251:2;13982:8;:14;;;-1:-1:-1;;;;;13916:251:2;;13950:8;:11;;;14098:8;:15;;;14114:1;14098:18;;;;;;;:::i;:::-;;;;;14138:15;;;;14154:1;14138:18;;;;13916:251;;;;;;;;:::i;:::-;;;;;;;;13375:799;13285:889;;;:::o;9574:156:77:-;9648:7;9698:22;9702:3;9714:5;9698:3;:22::i;947:139:33:-;-1:-1:-1;;;;;1012:18:33;;1008:72;;1053:16;;;;;;;;;;;;;;604:130;673:5;682:1;673:10;669:59;;706:11;;;;;;;;;;;;;;33193:551:2;-1:-1:-1;;;;;33345:23:2;;33298:7;33345:23;;;:16;:23;;;;;;33382:22;;;33378:61;;33427:1;33420:8;;;;;33378:61;33461:17;33452:6;:26;33448:83;;;33503:17;33494:26;;33448:83;33567:26;33587:6;33567:17;:26;:::i;:::-;-1:-1:-1;;;;;33541:23:2;;;;;;:16;:23;;;;;:52;33603:49;33558:5;33633:9;33645:6;33603:14;:49::i;:::-;33667:47;;-1:-1:-1;;;;;8569:55:127;;;8551:74;;33699:6:2;;33667:47;;;;;;;;;8539:2:127;8524:18;33667:47:2;;;;;;;-1:-1:-1;33731:6:2;;33193:551;-1:-1:-1;;;;33193:551:2:o;19756:232::-;-1:-1:-1;;;;;19873:28:2;;19826:6;19873:28;;;:20;:28;;;;;;;;19918:24;;:63;;19962:19;19918:63;;;-1:-1:-1;;19945:14:2;;;;;;;;19911:70;-1:-1:-1;19756:232:2:o;23158:551::-;23248:15;;:::i;:::-;23314:19;;-1:-1:-1;;;23314:19:2;;;;;3553:25:127;;;23297:14:2;;-1:-1:-1;;;;;23314:15:2;;;;;3526:18:127;;23314:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23343:36;23382:29;;;:25;:29;;;;;;23343:68;;;;;;;;;23297:36;;-1:-1:-1;23343:36:2;;:68;23382:29;23343:68;;23382:29;23343:68;;;;;;;;;;;;;;;;;;;;;;;;23422:22;23446:19;23469:33;23483:18;23469:13;:33::i;:::-;23421:81;;;;23539:28;23570:41;23590:4;23596:14;23570:19;:41::i;:::-;23629:73;;;;;;;;;;;-1:-1:-1;;;;;23629:73:2;;;;;;;;;;-1:-1:-1;;23629:73:2;;;;-1:-1:-1;23629:73:2;-1:-1:-1;23158:551:2;;;;;:::o;1510:643:1:-;1577:11;;:::i;:::-;1639:27;1651:6;1659;1639:11;:27::i;:::-;1635:84;;;1689:19;;;;;;;;;;;;;;1635:84;1752:28;1783:27;1795:6;1803;1783:11;:27::i;:::-;1863:11;;1752:58;;-1:-1:-1;1850:10:1;;1863:15;;-1:-1:-1;;;;;1863:11:1;;:15;:::i;:::-;1888:11;:16;;-1:-1:-1;;1888:16:1;-1:-1:-1;;;;;1888:16:1;;;;;;;;-1:-1:-1;1937:17:1;;;:13;:17;;;;;1888:16;;-1:-1:-1;1937:32:1;;1957:12;1937:32;;:::i;:::-;-1:-1:-1;1988:15:1;;-1:-1:-1;;;;;1979:25:1;;;;;;;:8;1988:15;1979:25;;;;;;;2005:15;;;;;1979:42;;;;;;;;;:47;;-1:-1:-1;;1979:47:1;-1:-1:-1;;;;;1979:47:1;;;;;;;;2075:15;;2058;;2042:49;;;;;;;;;;;;;;2108:38;;;;;;;;2119:2;-1:-1:-1;;;;;2108:38:1;;;;;2131:12;2108:38;;;2101:45;;;;1510:643;;;;:::o;9117:115:77:-;9180:7;9206:19;9214:3;4556:18;;4474:107;3090:297:1;3162:4;3201:28;3232:27;3244:6;3252;3232:11;:27::i;:::-;3283:15;;-1:-1:-1;;;;;3274:25:1;;;;;;;:8;3283:15;3274:25;;;;;;;3300:15;;;;3274:42;;;;;;;;;;;;3283:15;;-1:-1:-1;;;;;;3274:42:1;;;:47;;3270:90;;3344:5;3337:12;;;;;3270:90;-1:-1:-1;3376:4:1;;3090:297;-1:-1:-1;;;3090:297:1:o;9570:1132:2:-;9871:9;;9783:7;;9828:86;;9882:5;9889:6;9783:7;9889:9;;;;:11;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9828:86:2;9902:5;9909:4;9828:42;:86::i;:::-;9967:9;;;;9924:86;;9978:5;9985:6;9974:1;9985:9;;9924:86;10059:16;;10041:15;;10059:20;;-1:-1:-1;;;;;10059:16:2;;:20;:::i;:::-;10089:16;:26;;-1:-1:-1;;;;;10089:26:2;;-1:-1:-1;;10089:26:2;;;;;;;;10150:7;;10089:26;;-1:-1:-1;;;32946:3:2;32927:22;;32926:40;10205:7;;-1:-1:-1;;;;;10177:36:2;;;;;:27;:36;;;;;10125:42;;-1:-1:-1;10177:44:2;;10125:42;10177:40;:44::i;:::-;-1:-1:-1;10278:9:2;;;10291:11;;;10256:19;;10278:27;;10303:1;10291:14;;10278:27;10347:35;;;;;;;;;10256:49;;-1:-1:-1;10347:35:2;;10359:6;10347:35;-1:-1:-1;10347:35:2;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10367:14;10347:11;:35::i;:::-;10315:29;;;;:25;:29;;;;;:67;;;;:::i;:::-;-1:-1:-1;10417:23:2;;;;;-1:-1:-1;;;;;21893:55:127;;;10417:23:2;;;21875:74:127;21965:18;;;21958:34;;;10417:12:2;;;;;21848:18:127;;10417:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10593:6;10600:1;10593:9;;;;;;;:::i;:::-;;;;;10562;;10478:197;;-1:-1:-1;;;;;10478:197:2;;;;;;;;;;;;;;;10512:2;;10624:6;;:9;10655;;;10478:197;:::i;:::-;;;;;;;;-1:-1:-1;10693:2:2;9570:1132;-1:-1:-1;;;;;;;;9570:1132:2:o;21716:1048::-;21990:7;;-1:-1:-1;;;;;21962:36:2;21907:52;21962:36;;;:27;:36;;;;;21878:17;;22028:20;21962:36;22028:18;:20::i;:::-;22008:40;-1:-1:-1;22158:13:2;;;:37;;;22186:9;22175:8;:20;22158:37;22154:88;;;22222:9;22211:20;;22154:88;22319:8;22306:10;:21;22302:75;;;22350:16;;;;;;;;;;;;;;22302:75;22418:20;22441:21;22452:10;22441:8;:21;:::i;:::-;22418:44;;22472:24;22514:12;22499:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22472:55;;22542:9;22537:197;22561:12;22557:1;:16;22537:197;;;22610:18;22631:30;22646:14;22659:1;22646:10;:14;:::i;:::-;22631:11;;:14;:30::i;:::-;22610:51;;22687:36;22697:10;22709:7;22718:4;22687:9;:36::i;:::-;22675:6;22682:1;22675:9;;;;;;;;:::i;:::-;;;;;;:48;;;;22596:138;22579:15;22592:1;34729;34725:5;;34621:126;22579:15;22575:19;;22537:197;;;-1:-1:-1;22751:6:2;21716:1048;-1:-1:-1;;;;;;;;21716:1048:2:o;3459:285:1:-;3546:11;;3500:17;;-1:-1:-1;;;;;3546:11:1;3529:14;3546:11;3592:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3567:47;;3629:9;3624:92;3648:6;-1:-1:-1;;;;;3644:10:1;:1;-1:-1:-1;;;;;3644:10:1;;3624:92;;;3685:13;:20;3699:5;:1;3703;3699:5;:::i;:::-;-1:-1:-1;;;;;3685:20:1;;;;;;;;;;;;;;-1:-1:-1;3685:20:1;3675:30;;;;;;;;;;;;3685:20;3675:30;;;;-1:-1:-1;;;;;3675:30:1;;;;;;;;;;;;;;;;;;;;:4;3680:1;-1:-1:-1;;;;;3675:7:1;;;;;;;;;:::i;:::-;;;;;;:30;;;;3656:3;;;;;:::i;:::-;;;;3624:92;;;-1:-1:-1;3733:4:1;3459:285;-1:-1:-1;;3459:285:1:o;3837:193::-;3908:15;;:::i;:::-;3978:6;-1:-1:-1;;;;;3942:43:1;3955:6;-1:-1:-1;;;;;3942:43:1;;:81;;;;;;;;;;;-1:-1:-1;;;;;3942:81:1;;;;;;;;;;;;;;-1:-1:-1;3942:81:1;;;;;;;;;-1:-1:-1;;;;;3942:81:1;;;;;;;;;;;;3837:193::o;30264:661:2:-;30349:22;;:::i;:::-;30404:454;;;30427:199;;;;;;30462:9;;-1:-1:-1;;;;;30427:199:2;;;30404:454;;;30427:199;;;30506:9;;;;;;30427:199;;;;;;30549:9;;30427:199;30549:16;;;30427:199;;;;;;30594:9;;:16;;;30427:199;;;;30404:454;;;30640:208;;;;;;;30675:9;;:16;;30640:208;;30721:9;;;;30640:208;;;;;;;-1:-1:-1;;;;;;30640:208:2;;;;30462:9;30728:1;30764:9;;;;:16;;30640:208;;;;;;30829:3;30823:1;30810:6;30817:1;30810:9;;;;;;;:::i;:::-;;;;;:14;;30809:23;;30640:208;;;;30404:454;;;-1:-1:-1;6600:8:2;30885:6;30892:1;30885:9;;;;:33;;30868:50;;30264:661;;;:::o;24907:421::-;25113:6;-1:-1:-1;;;;;25078:41:2;:31;25098:10;33176:3;33162:17;;33056:131;25078:31;-1:-1:-1;;;;;25078:41:2;;25074:109;;25142:30;;;;;;;;;;;;;;25074:109;25246:11;-1:-1:-1;;;;;25246:16:2;25261:1;25246:16;25242:80;;25285:26;;;;;;;;;;;;;;31522:692;31682:20;31704;31736:9;31756:5;:7;;;-1:-1:-1;;;;;31748:16:2;31736:28;;31774:9;31794:5;:7;;;-1:-1:-1;;;;;31786:16:2;31774:28;;31812:9;31824:29;31844:5;:7;;;31836:16;;31133:10;;;6538:7;31149:10;;;31132:28;;30979:198;31824:29;31812:41;;31863:9;31875:29;31895:5;:7;;;31887:16;;31133:10;;;6538:7;31149:10;;;31132:28;;30979:198;31875:29;31863:41;;31918:14;31914:294;;;31963:59;:47;31991:6;-1:-1:-1;;;;;31963:47:2;31999:1;32002;32005;32008;31963:27;:47::i;:::-;:57;:59::i;:::-;31948:74;;32051:6;32036:21;;31914:294;;;32103:6;32088:21;;32138:59;:47;32166:6;-1:-1:-1;;;;;32138:47:2;32174:1;32177;32180;32183;32138:27;:47::i;:59::-;32123:74;;31914:294;31726:488;;;;31522:692;;;;;;:::o;29582:596::-;29670:24;;:::i;:::-;29706:465;;;;;;;;;29776:9;;;;;:11;29746:9;;:11;29792:3;29768:27;;;-1:-1:-1;;29768:27:2;-1:-1:-1;;;;;29738:20:2;;;29737:59;29706:465;;29890:9;;:11;;;;29858;;;;29828;;;;29906:3;29882:27;;;;;;29850;;;;;;29820:20;;29819:59;:91;;;;29706:465;;;;;;;30105:14;:41;;30145:1;30105:41;;;6600:8;30105:41;30077:3;30061:6;30068:1;30061:9;;;;:11;;;30053:20;;:27;;30025:3;30009:6;30016:1;30009:9;;;;:11;;;30001:20;;:27;;29975:1;29959:6;29966:1;29959:9;;;;:11;;;-1:-1:-1;;;;;29951:20:2;:25;;29950:79;:131;:197;29706:465;;;;;29582:596;;;;:::o;34621:126::-;34729:1;34725:5;;34621:126::o;18950:296::-;19021:7;19040:20;19063:29;19085:6;19063:21;:29::i;:::-;19040:52;-1:-1:-1;19157:82:2;:70;-1:-1:-1;;;;;19157:70:2;;109:9:27;19196:30:2;19040:52;109:9:27;19196:30:2;:::i;:::-;19157:70;;:14;:70::i;19321:303::-;19397:7;19416:20;19439:29;19461:6;19439:21;:29::i;:::-;19416:52;-1:-1:-1;19535:82:2;:70;-1:-1:-1;;;;;19535:70:2;;19558:30;19416:52;109:9:27;19558:30:2;:::i;:::-;19535:70;;109:9:27;19535:14:2;:70::i;23804:1097::-;24020:16;:5;-1:-1:-1;;;;;24020:14:2;;:16::i;:::-;24016:879;;;24066:13;24056:7;:23;24052:91;;;24106:22;;;;;;;;;;;;;;24052:91;24241:13;24231:7;:23;24227:120;;;24274:58;24308:23;24318:13;24308:7;:23;:::i;:::-;-1:-1:-1;;;;;24274:33:2;;;;:58::i;:::-;24016:879;;;24367:17;;24363:532;;24404:21;24400:485;;;24445:19;24467:30;-1:-1:-1;;;;;24467:15:2;;24491:4;24467:15;:30::i;:::-;24445:52;-1:-1:-1;24515:59:2;-1:-1:-1;;;;;24515:22:2;;24538:5;24553:4;24560:13;24515:22;:59::i;:::-;24592:18;24613:30;-1:-1:-1;;;;;24613:15:2;;24637:4;24613:15;:30::i;:::-;24592:51;-1:-1:-1;24693:13:2;24665:24;24678:11;24592:51;24665:24;:::i;:::-;:41;24661:112;;24737:17;;;;;;;;;;;;;;24661:112;24427:360;;24400:485;;;24811:59;-1:-1:-1;;;;;24811:22:2;;24834:5;24849:4;24856:13;24811:22;:59::i;34112:503::-;34211:6;34221:1;34211:11;34207:48;;34112:503;;;:::o;34207:48::-;34269:16;:5;-1:-1:-1;;;;;34269:14:2;;:16::i;:::-;34265:344;;;34509:24;-1:-1:-1;;;;;34509:16:2;;34526:6;34509:16;:24::i;34265:344::-;34564:34;-1:-1:-1;;;;;34564:18:2;;34583:6;34591;34564:18;:34::i;26484:482::-;26587:4;;26622:317;26638:1;26634;:5;26622:317;;;26713:7;26721:1;26713:10;;;;;;;:::i;:::-;;;;;:12;-1:-1:-1;;;;;26697:28:2;:7;26705:1;26697:10;;;;;;;:::i;:::-;;;;;:12;-1:-1:-1;;;;;26697:28:2;;;;:76;;;26761:7;26769:1;26761:10;;;;;;;:::i;:::-;;;;;:12;;;-1:-1:-1;;;;;26745:28:2;:7;26753:1;26745:10;;;;;;;:::i;:::-;;;;;:12;;;-1:-1:-1;;;;;26745:28:2;;;26697:76;:124;;;;26809:7;26817:1;26809:10;;;;;;;:::i;:::-;;;;;:12;;;26793:28;;:7;26801:1;26793:10;;;;;;;:::i;:::-;;;;;:12;;;:28;;;;26697:124;:172;;;;26857:7;26865:1;26857:10;;;;;;;:::i;:::-;;;;;:12;;;26841:28;;:7;26849:1;26841:10;;;;;;;:::i;:::-;;;;;:12;;;:28;;;;26697:172;26676:253;;;26909:5;26902:12;;;;;26676:253;34729:1;34725:5;26622:317;;33838:194;33928:15;;:::i;:::-;33962:14;:63;;34014:4;:11;;;33962:63;;;;;;;;;;;33980:4;:11;;;33992:1;33980:14;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;33962:63:2;-1:-1:-1;;;;;33962:63:2;;;;;33996:4;:11;;;34008:1;33996:14;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;33962:63:2;;;33955:70;33838:194;-1:-1:-1;;;33838:194:2:o;2647:312:95:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:95;;23279:2:127;2728:73:95;;;23261:21:127;23318:2;23298:18;;;23291:30;23357:31;23337:18;;;23330:59;23406:18;;2728:73:95;23077:353:127;2728:73:95;2813:12;2831:9;-1:-1:-1;;;;;2831:14:95;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:95;;23847:2:127;2874:78:95;;;23829:21:127;23886:2;23866:18;;;23859:30;23925:34;23905:18;;;23898:62;23996:28;23976:18;;;23969:56;24042:19;;2874:78:95;23645:422:127;4152:501:59;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:59;;;;;;;;;;-1:-1:-1;;;4278:358:59;;;;;;;:::i;7917:233::-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:59;;;;;;;;;:36;;-1:-1:-1;;8038:36:59;8070:4;8038:36;;;8120:12;929:10:71;;850:96;8120:12:59;-1:-1:-1;;;;;8093:40:59;8111:7;-1:-1:-1;;;;;8093:40:59;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8316:150:77:-;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:77;;8409:4;:50::i;8321:234:59:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:59;;;;;;;;;;;;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:59;;;;;;;;;;:37;;-1:-1:-1;;8442:37:59;;;8498:40;929:10:71;;8442:12:59;;8498:40;;8474:5;8498:40;8321:234;;:::o;8634:156:77:-;8707:4;8730:53;8738:3;-1:-1:-1;;;;;8758:23:77;;8730:7;:53::i;2188:106:64:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:64;;25806:2:127;2246:41:64;;;25788:21:127;25845:2;25825:18;;;25818:30;25884:22;25864:18;;;25857:50;25924:18;;2246:41:64;25604:344:127;1135:91:1;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1195:24:1::1;:22;:24::i;9169:101:2:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;9234:29:2::1;:27;:29::i;1232:136:32:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1298:22:32::1;:20;:22::i;:::-;1331:30;:28;:30::i;1868:111:65:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1938:34:65::1;:32;:34::i;1063:97:64:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1126:27:64::1;:25;:27::i;2710:230:0:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;2830:49:0::1;1273:35;960:23:32;2830:13:0;:49::i;:::-;2889:44;1418:30;960:23:32;2889:13:0;:44::i;11101:135:77:-:0;11171:4;11194:35;11202:3;11222:5;11194:7;:35::i;4923:118::-;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;10804:129::-;10871:4;10894:32;10899:3;10919:5;10894:4;:32::i;28498:957:2:-;28722:7;28745:1;28750;28745:6;28741:159;;28771:1;28776;28771:6;28767:67;;28804:15;;;;;;;;;;;;;;28767:67;28854:35;28869:1;28872:9;6538:7;;28872:9;:::i;:::-;28883:5;28887:1;;28883:5;:::i;:::-;28854:14;:35::i;:::-;28847:42;;;;28741:159;6538:7;28988;;29030:5;;;29038;;;29030:13;28910;29100:5;29034:1;29100;:5;:::i;:::-;29092:13;;:5;:13;:::i;:::-;29076:29;;29116:15;29134:30;29151:5;29158;29134:16;:30::i;:::-;29116:48;;29174:15;29192:30;29209:5;29216;29192:16;:30::i;:::-;29174:48;;29232:14;29249:26;29258:7;29267;29249:8;:26::i;:::-;29232:43;;29286:13;29302:36;29317:5;29324;29331:6;29302:14;:36::i;:::-;29286:52;;29348:13;29364:36;29379:5;29386;29393:6;29364:14;:36::i;:::-;29348:52;;29417:31;29432:1;29435:5;29442;29417:14;:31::i;:::-;29410:38;;;;;;;;;;28498:957;;;;;;;;:::o;9088:192:104:-;9145:7;-1:-1:-1;;;;;9172:26:104;;;9164:78;;;;-1:-1:-1;;;9164:78:104;;26328:2:127;9164:78:104;;;26310:21:127;26367:2;26347:18;;;26340:30;26406:34;26386:18;;;26379:62;26477:9;26457:18;;;26450:37;26504:19;;9164:78:104;26126:403:127;9164:78:104;-1:-1:-1;9267:5:104;9088:192::o;27183:1123:2:-;27407:7;27430:1;27435;27430:6;27426:159;;27456:1;27461;27456:6;27452:67;;27489:15;;;;;;;;;;;;;;27452:67;27539:35;27554:1;27557:5;27561:1;;27557:5;:::i;:::-;27564:9;6538:7;;27564:9;:::i;:::-;27539:14;:35::i;27426:159::-;6538:7;27673;;27715:5;;;27723;;;27715:13;27595;27777:9;27785:1;27715:13;27777:9;:::i;:::-;27761:25;;27797:15;27815:30;27832:5;27839;27815:16;:30::i;:::-;27797:48;;27855:15;27873:26;27890:5;27897:1;27873:16;:26::i;:::-;27855:44;;27909:14;27926:26;27935:7;27944;27926:8;:26::i;:::-;27909:43;;27963:13;27979:36;27994:5;28001;28008:6;27979:14;:36::i;:::-;27963:52;;28025:13;28041:32;28056:5;28063:1;28066:6;28041:14;:32::i;:::-;28025:48;;28085:9;28096:11;28111:29;28127:5;28134;28111:15;:29::i;:::-;28084:56;;;;28154:4;28150:84;;;28181:42;28196:5;28203:14;28211:6;28203:5;:14;:::i;:::-;28219:3;28181:14;:42::i;:::-;28174:49;;;;;;;;;;;;;;28150:84;28263:35;28278:5;28285;28292;28263:14;:35::i;:::-;28259:39;;:1;:39;:::i;:::-;28250:49;;:5;:49;:::i;:::-;28243:56;;;;;;;;;;;;27183:1123;;;;;;;:::o;1712:406:30:-;1785:7;1804:9;1816:16;1824:1;1827;1830;1816:7;:16::i;:::-;1804:28;;1865:1;1846:16;1854:1;1857;1860;1846:7;:16::i;:::-;:20;1842:252;;;-1:-1:-1;;1886:1:30;:22;1882:78;;1935:10;;;;;;;;;;;;;;1882:78;2068:1;2064:5;;-1:-1:-1;2057:12:30;;447:1166;520:7;609:12;623;639:13;647:1;650;639:7;:13::i;:::-;608:44;;;;707:4;715:1;707:9;703:63;;750:1;743:4;:8;;;;;:::i;:::-;;736:15;;;;;;703:63;836:1;828:4;:9;824:65;;864:10;;;;;;;;;;;;;;824:65;903:9;915:16;923:1;926;929;915:7;:16::i;:::-;903:28;;965:11;978;993:22;1001:4;1007;1013:1;993:7;:22::i;:::-;964:51;;;;1118:3;1125:1;1118:8;1114:61;;1159:1;1153:3;:7;;;;;:::i;:::-;;1146:14;;;;;;;;;1114:61;1189:9;11117:5;;;1201:20;;;1306;1314:3;1319;1201:20;1306:7;:20::i;:::-;1294:32;;1427:9;1439:14;1451:1;1447;:5;;;;;:::i;:::-;;1439:7;:14::i;:::-;11315:5;;;;;1527:23;-1:-1:-1;;;;;;;;;;;447:1166:30:o;2093:187:25:-;2156:7;2175:15;2184:5;2175:8;:15::i;:::-;2171:60;;;-1:-1:-1;;;;;;2209:15:25;;;2202:22;;2171:60;2252:5;2243:34;;;;;-1:-1:-1;;;;;8569:55:127;;;2243:34:25;;;8551:74:127;2243:25:25;;;;;;;8524:18:127;;2243:34:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3087:204::-;3178:11;;;:30;;;3193:15;3202:5;3193:8;:15::i;:::-;3220:7;3174:59;3238:50;-1:-1:-1;;;;;3238:32:25;;3271:4;3277:2;3281:6;3238:32;:50::i;2622:245::-;2695:6;2705:1;2695:11;2691:40;;2622:245;;;:::o;2691:40::-;2740:15;2749:5;2740:8;:15::i;:::-;2736:129;;;2767:28;;-1:-1:-1;;;;;2767:20:25;;;:28;;;;;2788:6;;2767:28;;;;2788:6;2767:20;:28;;;;;;;;;;;;;;;;;;;2736:129;2818:40;-1:-1:-1;;;;;2818:28:25;;2847:2;2851:6;2818:28;:40::i;2473:149:72:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:72;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:72;;1984:47;;2041:15;:6;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;2066;:6;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;2096:9:72;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;2162:8;2171:5;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;;;;;;;;;;-1:-1:-1;2207:1:72;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:72;;2228:55;;;;-1:-1:-1;;;2228:55:72;;27405:2:127;2228:55:72;;;27387:21:127;;;27424:18;;;27417:30;27483:34;27463:18;;;27456:62;27535:18;;2228:55:72;27203:356:127;2225:404:77;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:77;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:77;2600:12;;2797:1388;2863:4;3000:19;;;:12;;;:19;;;;;;3034:15;;3030:1149;;3403:21;3427:14;3440:1;3427:10;:14;:::i;:::-;3475:18;;3403:38;;-1:-1:-1;3455:17:77;;3475:22;;3496:1;;3475:22;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3816:23;;;:12;;;:23;;;;;:36;;;3512:398;3988:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;;;1302:62:1;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;9346:124:2;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;9421:42:2::1;6665:4;9421:17;:42::i;1444:307:32:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1520:16:32::1;:20:::0;;-1:-1:-1;;1520:20:32::1;1539:1;1520:20;::::0;;1590:37:::1;960:23;::::0;1590:13:::1;:37::i;:::-;1710:34;960:23;1733:10;1710;:34::i;1985:109:65:-:0;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;1166:95:64;5374:13:63;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:63;;20906:2:127;5366:69:63;;;20888:21:127;20945:2;20925:18;;;20918:30;20984:34;20964:18;;;20957:62;-1:-1:-1;;;21035:18:127;;;21028:41;21086:19;;5366:69:63;20704:407:127;5366:69:63;1239:7:64::1;:15:::0;;-1:-1:-1;;1239:15:64::1;::::0;;1166:95::o;7502:247:59:-;7585:25;4934:12;;;:6;:12;;;;;;:22;;;;7641:34;;;;7690:52;;4934:22;;7641:34;;4934:22;;:12;;7690:52;;7585:25;7690:52;7575:174;7502:247;;:::o;2222:2511:30:-;2286:7;2306:10;2318;2332:13;2340:1;2343;2332:7;:13::i;:::-;2305:40;;;;2761:2;2760:3;2755:2;:8;:26;;2775:2;2780:1;2775:6;2755:26;;;-1:-1:-1;2771:1:30;2766:6;;2748:33;-1:-1:-1;;;2222:2511:30:o;413:104:103:-;471:7;501:1;497;:5;:13;;509:1;497:13;;;-1:-1:-1;505:1:103;;413:104;-1:-1:-1;413:104:103:o;641:216:105:-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;782:28;832:4;;-1:-1:-1;838:1:105;-1:-1:-1;641:216:105;;;;;;:::o;11585:120:30:-;11657:7;11696:1;11683:15;;;;;:::i;:::-;11693:1;11690;11683:15;11676:22;11585:120;-1:-1:-1;;;;11585:120:30:o;8894:449::-;8955:7;8964;8983:9;8995:16;9006:1;9009;8995:10;:16::i;:::-;8983:28;-1:-1:-1;11315:5:30;;;9063:6;;;9059:137;;9162:5;;;;;-1:-1:-1;9166:1:30;-1:-1:-1;9154:17:30;;9059:137;9321:1;11117:5;;;9302:20;;9324:1;;-1:-1:-1;8894:449:30;-1:-1:-1;;;;8894:449:30:o;9406:301::-;9482:7;9491;9521:1;9514:3;:8;9510:145;;-1:-1:-1;9617:3:30;;-1:-1:-1;9622:7:30;;;9609:21;;9510:145;9672:7;9678:1;9672:3;:7;:::i;:::-;9664:36;-1:-1:-1;;11117:5:30;;;9406:301;;;;;;;:::o;9814:366::-;9894:7;;10001:43;10035:5;11117;;;10012:28;;;;;:::i;:::-;;10042:1;10919:5;;10805:136;10001:43;9982:62;;10120:5;10114:3;:11;;;;;:::i;:::-;;11315:5;;;10085:41;;9814:366;-1:-1:-1;;;;;9814:366:30:o;10305:438::-;10355:7;10486:1;10355:7;10557:152;10581:1;10577;:5;10557:152;;;11315:5;;;10636:1;11117:5;11315;;10607:50;-1:-1:-1;10584:3:30;;10557:152;;1355:203:94;1482:68;;-1:-1:-1;;;;;28034:15:127;;;1482:68:94;;;28016:34:127;28086:15;;28066:18;;;28059:43;28118:18;;;28111:34;;;1455:96:94;;1475:5;;1505:27;;27928:18:127;;1482:68:94;;;;-1:-1:-1;;1482:68:94;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;21893:55:127;;1050:58:94;;;21875:74:127;21965:18;;;21958:34;;;1023:86:94;;1043:5;;1073:23;;21848:18:127;;1050:58:94;21701:297:127;7267:110:59;7345:25;7356:4;7362:7;7345:10;:25::i;11403:128:30:-;11467:7;-1:-1:-1;;11503:1:30;11500;11493:31;11486:38;11403:128;-1:-1:-1;;;11403:128:30:o;5173:642:94:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:94;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:94;;28640:2:127;5697:111:94;;;28622:21:127;28679:2;28659:18;;;28652:30;28718:34;28698:18;;;28691:62;28789:12;28769:18;;;28762:40;28819:19;;5697:111:94;28438:406:127;4108:223:95;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:95;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:95:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1713:19:70;;;8113:60:95;;;;-1:-1:-1;;;8113:60:95;;29750:2:127;8113:60:95;;;29732:21:127;29789:2;29769:18;;;29762:30;29828:31;29808:18;;;29801:59;29877:18;;8113:60:95;29548:353:127;8113:60:95;-1:-1:-1;8208:10:95;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:95;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:332:127;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:173;-1:-1:-1;;;;;641:5:127;637:54;630:5;627:65;617:93;;706:1;703;696:12;721:387;804:8;814:6;868:3;861:4;853:6;849:17;845:27;835:55;;886:1;883;876:12;835:55;-1:-1:-1;909:20:127;;952:18;941:30;;938:50;;;984:1;981;974:12;938:50;1021:4;1013:6;1009:17;997:29;;1081:3;1074:4;1064:6;1061:1;1057:14;1049:6;1045:27;1041:38;1038:47;1035:67;;;1098:1;1095;1088:12;1113:188;1181:20;;-1:-1:-1;;;;;1230:46:127;;1220:57;;1210:85;;1291:1;1288;1281:12;1210:85;1113:188;;;:::o;1306:998::-;1511:6;1519;1527;1535;1543;1551;1604:3;1592:9;1583:7;1579:23;1575:33;1572:53;;;1621:1;1618;1611:12;1572:53;1660:9;1647:23;1679:50;1723:5;1679:50;:::i;:::-;1748:5;-1:-1:-1;1805:2:127;1790:18;;1777:32;1818:52;1777:32;1818:52;:::i;:::-;1889:7;-1:-1:-1;1947:2:127;1932:18;;1919:32;1974:18;1963:30;;1960:50;;;2006:1;2003;1996:12;1960:50;2045:90;2127:7;2118:6;2107:9;2103:22;2045:90;:::i;:::-;2154:8;;-1:-1:-1;2019:116:127;-1:-1:-1;;2236:2:127;2221:18;;2208:32;;-1:-1:-1;2259:39:127;2293:3;2278:19;;2259:39;:::i;:::-;2249:49;;1306:998;;;;;;;;:::o;2532:174::-;2640:6;2673:3;2661:16;;2658:25;-1:-1:-1;2655:45:127;;;2696:1;2693;2686:12;2711:506;2888:6;2896;2904;2957:3;2945:9;2936:7;2932:23;2928:33;2925:53;;;2974:1;2971;2964:12;2925:53;3010:9;2997:23;2987:33;;3039:76;3107:7;3102:2;3091:9;3087:18;3039:76;:::i;:::-;3029:86;;3134:77;3203:7;3197:3;3186:9;3182:19;3134:77;:::i;:::-;3124:87;;2711:506;;;;;:::o;3222:180::-;3281:6;3334:2;3322:9;3313:7;3309:23;3305:32;3302:52;;;3350:1;3347;3340:12;3302:52;-1:-1:-1;3373:23:127;;3222:180;-1:-1:-1;3222:180:127:o;3589:854::-;3776:6;3784;3792;3800;3853:2;3841:9;3832:7;3828:23;3824:32;3821:52;;;3869:1;3866;3859:12;3821:52;3908:9;3895:23;3927:50;3971:5;3927:50;:::i;:::-;3996:5;-1:-1:-1;4053:2:127;4038:18;;4025:32;4066:52;4025:32;4066:52;:::i;:::-;4137:7;-1:-1:-1;4195:2:127;4180:18;;4167:32;4222:18;4211:30;;4208:50;;;4254:1;4251;4244:12;4208:50;4293:90;4375:7;4366:6;4355:9;4351:22;4293:90;:::i;:::-;3589:854;;;;-1:-1:-1;4402:8:127;-1:-1:-1;;;;3589:854:127:o;4448:334::-;4516:6;4524;4577:2;4565:9;4556:7;4552:23;4548:32;4545:52;;;4593:1;4590;4583:12;4545:52;4629:9;4616:23;4606:33;;4689:2;4678:9;4674:18;4661:32;4702:50;4746:5;4702:50;:::i;:::-;4771:5;4761:15;;;4448:334;;;;;:::o;4787:478::-;4907:6;4915;4968:2;4956:9;4947:7;4943:23;4939:32;4936:52;;;4984:1;4981;4974:12;4936:52;5023:9;5010:23;5042:50;5086:5;5042:50;:::i;:::-;5111:5;-1:-1:-1;5168:2:127;5153:18;;5140:32;5181:52;5140:32;5181:52;:::i;5645:163::-;5712:20;;5772:10;5761:22;;5751:33;;5741:61;;5798:1;5795;5788:12;5813:550;5941:6;5949;5957;6010:2;5998:9;5989:7;5985:23;5981:32;5978:52;;;6026:1;6023;6016:12;5978:52;6065:9;6052:23;6084:50;6128:5;6084:50;:::i;:::-;6153:5;-1:-1:-1;6210:2:127;6195:18;;6182:32;6223:52;6182:32;6223:52;:::i;:::-;6294:7;-1:-1:-1;6320:37:127;6353:2;6338:18;;6320:37;:::i;6368:184::-;6426:6;6479:2;6467:9;6458:7;6454:23;6450:32;6447:52;;;6495:1;6492;6485:12;6447:52;6518:28;6536:9;6518:28;:::i;6557:394::-;6669:5;6692:1;6702:243;6716:4;6713:1;6710:11;6702:243;;;6779:13;;-1:-1:-1;;;;;6775:62:127;6763:75;;6861:4;6885:12;;;;6920:15;;;;6736:1;6729:9;6702:243;;6956:410;7168:13;;-1:-1:-1;;;;;7164:54:127;7146:73;;7266:4;7254:17;;;7248:24;7134:2;7119:18;;;7281:79;;7339:20;;7248:24;7281:79;:::i;7556:591::-;7626:6;7634;7687:2;7675:9;7666:7;7662:23;7658:32;7655:52;;;7703:1;7700;7693:12;7655:52;7743:9;7730:23;7772:18;7813:2;7805:6;7802:14;7799:34;;;7829:1;7826;7819:12;7799:34;7867:6;7856:9;7852:22;7842:32;;7912:7;7905:4;7901:2;7897:13;7893:27;7883:55;;7934:1;7931;7924:12;7883:55;7974:2;7961:16;8000:2;7992:6;7989:14;7986:34;;;8016:1;8013;8006:12;7986:34;8061:7;8056:2;8047:6;8043:2;8039:15;8035:24;8032:37;8029:57;;;8082:1;8079;8072:12;8029:57;8113:2;8105:11;;;;;8135:6;;-1:-1:-1;7556:591:127;;-1:-1:-1;;;;7556:591:127:o;8152:248::-;8220:6;8228;8281:2;8269:9;8260:7;8256:23;8252:32;8249:52;;;8297:1;8294;8287:12;8249:52;-1:-1:-1;;8320:23:127;;;8390:2;8375:18;;;8362:32;;-1:-1:-1;8152:248:127:o;8636:520::-;8739:6;8747;8755;8808:2;8796:9;8787:7;8783:23;8779:32;8776:52;;;8824:1;8821;8814:12;8776:52;8863:9;8850:23;8882:50;8926:5;8882:50;:::i;:::-;8951:5;-1:-1:-1;9003:2:127;8988:18;;8975:32;;-1:-1:-1;9059:2:127;9044:18;;9031:32;9072:52;9031:32;9072:52;:::i;:::-;9143:7;9133:17;;;8636:520;;;;;:::o;9788:740::-;9868:5;9862:12;9857:3;9850:25;9894:4;-1:-1:-1;;;;;9949:2:127;9942:5;9938:14;9932:21;9928:70;9923:2;9918:3;9914:12;9907:92;10045:4;10038:5;10034:16;10028:23;10060:73;10127:4;10122:3;10118:14;10104:12;10060:73;:::i;:::-;;10181:4;10174:5;10170:16;10164:23;10206:4;10241:2;10236:3;10232:12;10322:1;10332:190;10346:4;10343:1;10340:11;10332:190;;;10393:45;10432:5;10423:6;10417:13;-1:-1:-1;;;;;9500:2:127;9492:5;9486:12;9482:21;9477:3;9470:34;9565:2;9557:4;9550:5;9546:16;9540:23;9536:32;9529:4;9524:3;9520:14;9513:56;;9615:4;9608:5;9604:16;9598:23;9640:18;9708:2;9694:12;9690:21;9683:4;9678:3;9674:14;9667:45;9773:2;9765:4;9758:5;9754:16;9748:23;9744:32;9737:4;9732:3;9728:14;9721:56;;;9358:425;;;10393:45;10497:15;;;;10460:14;;;;10366:1;10359:9;10332:190;;;10336:3;;;;;9788:740;;:::o;10533:250::-;10719:3;10704:19;;10732:45;10708:9;10759:6;10732:45;:::i;10788:641::-;10967:6;10975;10983;11036:3;11024:9;11015:7;11011:23;11007:33;11004:53;;;11053:1;11050;11043:12;11004:53;11092:9;11079:23;11111:50;11155:5;11111:50;:::i;:::-;11180:5;-1:-1:-1;11237:2:127;11222:18;;11209:32;11250:52;11209:32;11250:52;:::i;:::-;11321:7;-1:-1:-1;11347:76:127;11415:7;11410:2;11395:18;;11347:76;:::i;11434:615::-;11572:6;11580;11588;11596;11649:3;11637:9;11628:7;11624:23;11620:33;11617:53;;;11666:1;11663;11656:12;11617:53;11705:9;11692:23;11724:50;11768:5;11724:50;:::i;:::-;11793:5;-1:-1:-1;11850:2:127;11835:18;;11822:32;11863:52;11822:32;11863:52;:::i;:::-;11434:615;;11934:7;;-1:-1:-1;;;;11988:2:127;11973:18;;11960:32;;12039:2;12024:18;12011:32;;11434:615::o;12054:708::-;12277:2;12329:21;;;12399:13;;12302:18;;;12421:22;;;12248:4;;12277:2;12500:15;;;;12474:2;12459:18;;;12248:4;12543:193;12557:6;12554:1;12551:13;12543:193;;;12606:46;12648:3;12639:6;12633:13;12606:46;:::i;:::-;12711:15;;;;12681:6;12672:16;;;;;12579:1;12572:9;12543:193;;;-1:-1:-1;12753:3:127;;12054:708;-1:-1:-1;;;;;;12054:708:127:o;12767:292::-;12852:6;12905:2;12893:9;12884:7;12880:23;12876:32;12873:52;;;12921:1;12918;12911:12;12873:52;12960:9;12947:23;12979:50;13023:5;12979:50;:::i;13064:762::-;13307:2;13359:21;;;13429:13;;13332:18;;;13451:22;;;13278:4;;13307:2;13492;;13510:18;;;;13551:15;;;13278:4;13594:206;13608:6;13605:1;13602:13;13594:206;;;13657:63;13716:3;13707:6;13701:13;13657:63;:::i;:::-;13740:12;;;;13775:15;;;;13630:1;13623:9;13594:206;;;-1:-1:-1;13817:3:127;;13064:762;-1:-1:-1;;;;;;;13064:762:127:o;13831:270::-;13901:6;13954:2;13942:9;13933:7;13929:23;13925:32;13922:52;;;13970:1;13967;13960:12;13922:52;14002:9;13996:16;14021:50;14065:5;14021:50;:::i;14106:184::-;-1:-1:-1;;;14155:1:127;14148:88;14255:4;14252:1;14245:15;14279:4;14276:1;14269:15;15325:184;-1:-1:-1;;;15374:1:127;15367:88;15474:4;15471:1;15464:15;15498:4;15495:1;15488:15;15514:168;15581:6;15607:10;;;15619;;;15603:27;;15642:11;;;15639:37;;;15656:18;;:::i;16392:186::-;16451:6;16504:2;16492:9;16483:7;16479:23;16475:32;16472:52;;;16520:1;16517;16510:12;16472:52;16543:29;16562:9;16543:29;:::i;16583:197::-;-1:-1:-1;;;;;16705:10:127;;;16717;;;16701:27;;16740:11;;;16737:37;;;16754:18;;:::i;16785:455::-;17063:3;17048:19;;17076:42;17052:9;17100:6;-1:-1:-1;;;;;9500:2:127;9492:5;9486:12;9482:21;9477:3;9470:34;9565:2;9557:4;9550:5;9546:16;9540:23;9536:32;9529:4;9524:3;9520:14;9513:56;;9615:4;9608:5;9604:16;9598:23;9640:18;9708:2;9694:12;9690:21;9683:4;9678:3;9674:14;9667:45;9773:2;9765:4;9758:5;9754:16;9748:23;9744:32;9737:4;9732:3;9728:14;9721:56;;;9358:425;;;17076:42;9486:12;;-1:-1:-1;;;;;9482:21:127;;;17174:3;17159:19;;9470:34;9557:4;9546:16;;9540:23;9536:32;9520:14;;;9513:56;9615:4;9604:16;;9598:23;9640:18;9690:21;;;9674:14;;;9667:45;9765:4;9754:16;;9748:23;9744:32;9728:14;;;9721:56;17127:52;17228:4;17220:6;17216:17;17210:3;17199:9;17195:19;17188:46;16785:455;;;;;;:::o;17245:200::-;-1:-1:-1;;;;;17381:10:127;;;17369;;;17365:27;;17404:12;;;17401:38;;;17419:18;;:::i;17450:125::-;17515:9;;;17536:10;;;17533:36;;;17549:18;;:::i;18066:171::-;18133:20;;18193:18;18182:30;;18172:41;;18162:69;;18227:1;18224;18217:12;18242:184;18300:6;18353:2;18341:9;18332:7;18328:23;18324:32;18321:52;;;18369:1;18366;18359:12;18321:52;18392:28;18410:9;18392:28;:::i;18431:184::-;-1:-1:-1;;;18480:1:127;18473:88;18580:4;18577:1;18570:15;18604:4;18601:1;18594:15;18620:812;18702:6;18755:3;18743:9;18734:7;18730:23;18726:33;18723:53;;;18772:1;18769;18762:12;18723:53;18805:2;18799:9;18847:3;18839:6;18835:16;18917:6;18905:10;18902:22;18881:18;18869:10;18866:34;18863:62;18860:242;;;-1:-1:-1;;;18955:1:127;18948:88;19059:4;19056:1;19049:15;19087:4;19084:1;19077:15;18860:242;19118:2;19111:22;19157:29;19176:9;19157:29;:::i;:::-;19149:6;19142:45;19220:38;19254:2;19243:9;19239:18;19220:38;:::i;:::-;19215:2;19207:6;19203:15;19196:63;19292:37;19325:2;19314:9;19310:18;19292:37;:::i;:::-;19287:2;19279:6;19275:15;19268:62;19363:37;19396:2;19385:9;19381:18;19363:37;:::i;:::-;19358:2;19346:15;;19339:62;19350:6;18620:812;-1:-1:-1;;;18620:812:127:o;19437:484::-;-1:-1:-1;;;;;19601:2:127;19574:25;19593:5;19574:25;:::i;:::-;19570:34;19565:3;19558:47;19679:2;19641:36;19671:4;19664:5;19660:16;19641:36;:::i;:::-;19637:45;19630:4;19625:3;19621:14;19614:69;;19712:35;19741:4;19734:5;19730:16;19712:35;:::i;:::-;19766:18;19834:2;19820:12;19816:21;19809:4;19804:3;19800:14;19793:45;19911:2;19874:35;19903:4;19896:5;19892:16;19874:35;:::i;:::-;19870:44;19863:4;19858:3;19854:14;19847:68;;;19437:484;;:::o;19926:477::-;20208:3;20193:19;;20221:51;20197:9;20254:6;20221:51;:::i;:::-;20281:61;20337:3;20326:9;20322:19;20314:6;20281:61;:::i;21116:447::-;21411:25;;;21398:3;21383:19;;21445:51;21492:2;21477:18;;21469:6;-1:-1:-1;;;;;9500:2:127;9492:5;9486:12;9482:21;9477:3;9470:34;9565:2;9557:4;9550:5;9546:16;9540:23;9536:32;9529:4;9524:3;9520:14;9513:56;;9615:4;9608:5;9604:16;9598:23;9640:18;9708:2;9694:12;9690:21;9683:4;9678:3;9674:14;9667:45;9773:2;9765:4;9758:5;9754:16;9748:23;9744:32;9737:4;9732:3;9728:14;9721:56;;;9358:425;;;21445:51;9486:12;;-1:-1:-1;;;;;9482:21:127;;;21552:3;21537:19;;9470:34;9557:4;9546:16;;9540:23;9536:32;9520:14;;;9513:56;9615:4;9604:16;;9598:23;9640:18;9690:21;;;9674:14;;;9667:45;9765:4;9754:16;;9748:23;9744:32;9728:14;;;9721:56;21505:52;9358:425;21568:128;21635:9;;;21656:11;;;21653:37;;;21670:18;;:::i;22003:469::-;22302:25;;;22289:3;22274:19;;22336:60;22392:2;22377:18;;22369:6;22336:60;:::i;:::-;22405:61;22461:3;22450:9;22446:19;22438:6;22405:61;:::i;22477:226::-;22516:3;-1:-1:-1;;;;;22613:2:127;22606:5;22602:14;22640:2;22631:7;22628:15;22625:41;;22646:18;;:::i;:::-;22695:1;22682:15;;22477:226;-1:-1:-1;;;22477:226:127:o;22708:175::-;22776:10;22819;;;22807;;;22803:27;;22842:12;;;22839:38;;;22857:18;;:::i;22888:184::-;-1:-1:-1;;;22937:1:127;22930:88;23037:4;23034:1;23027:15;23061:4;23058:1;23051:15;24072:250;24157:1;24167:113;24181:6;24178:1;24175:13;24167:113;;;24257:11;;;24251:18;24238:11;;;24231:39;24203:2;24196:10;24167:113;;;-1:-1:-1;;24314:1:127;24296:16;;24289:27;24072:250::o;24327:812::-;24738:25;24733:3;24726:38;24708:3;24793:6;24787:13;24809:75;24877:6;24872:2;24867:3;24863:12;24856:4;24848:6;24844:17;24809:75;:::i;:::-;24948:19;24943:2;24903:16;;;24935:11;;;24928:40;24993:13;;25015:76;24993:13;25077:2;25069:11;;25062:4;25050:17;;25015:76;:::i;:::-;25111:17;25130:2;25107:26;;24327:812;-1:-1:-1;;;;24327:812:127:o;25144:455::-;25293:2;25282:9;25275:21;25256:4;25325:6;25319:13;25368:6;25363:2;25352:9;25348:18;25341:34;25384:79;25456:6;25451:2;25440:9;25436:18;25431:2;25423:6;25419:15;25384:79;:::i;:::-;25515:2;25503:15;-1:-1:-1;;25499:88:127;25484:104;;;;25590:2;25480:113;;25144:455;-1:-1:-1;;25144:455:127:o;25953:168::-;26026:9;;;26057;;26074:15;;;26068:22;;26054:37;26044:71;;26095:18;;:::i;26534:274::-;26574:1;26600;26590:189;;-1:-1:-1;;;26632:1:127;26625:88;26736:4;26733:1;26726:15;26764:4;26761:1;26754:15;26590:189;-1:-1:-1;26793:9:127;;26534:274::o;26813:184::-;26883:6;26936:2;26924:9;26915:7;26911:23;26907:32;26904:52;;;26952:1;26949;26942:12;26904:52;-1:-1:-1;26975:16:127;;26813:184;-1:-1:-1;26813:184:127:o;27002:196::-;27041:3;27069:5;27059:39;;27078:18;;:::i;:::-;-1:-1:-1;;;27114:78:127;;27002:196::o;27564:184::-;-1:-1:-1;;;27613:1:127;27606:88;27713:4;27710:1;27703:15;27737:4;27734:1;27727:15;28156:277;28223:6;28276:2;28264:9;28255:7;28251:23;28247:32;28244:52;;;28292:1;28289;28282:12;28244:52;28324:9;28318:16;28377:5;28370:13;28363:21;28356:5;28353:32;28343:60;;28399:1;28396;28389:12;29256:287;29385:3;29423:6;29417:13;29439:66;29498:6;29493:3;29486:4;29478:6;29474:17;29439:66;:::i;:::-;29521:16;;;;;29256:287;-1:-1:-1;;29256:287:127:o",
    "linkReferences": {},
    "immutableReferences": {
      "64": [
        {
          "start": 2470,
          "length": 32
        },
        {
          "start": 3715,
          "length": 32
        },
        {
          "start": 3885,
          "length": 32
        },
        {
          "start": 4253,
          "length": 32
        },
        {
          "start": 4903,
          "length": 32
        },
        {
          "start": 4993,
          "length": 32
        }
      ],
      "8814": [
        {
          "start": 5424,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "accumulatedFees(address)": "fcf66664",
    "calculateTradeSourceAmount(address,address,(uint256,uint128)[])": "f2bda26d",
    "calculateTradeTargetAmount(address,address,(uint256,uint128)[])": "2ab2fad1",
    "controllerType()": "b76040cd",
    "createPair(address,address)": "c9c65396",
    "createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])": "f727473a",
    "deleteStrategy(uint256)": "87302037",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize()": "8129fc1c",
    "pair(address,address)": "8672d545",
    "pairTradingFeePPM(address,address)": "ba0a868b",
    "pairs()": "ffb0a4a0",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "postUpgrade(bytes)": "8cd2403d",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "roleAdmin()": "93867fb5",
    "roleEmergencyStopper()": "41f435b3",
    "roleFeesManager()": "2c40de1b",
    "setPairTradingFeePPM(address,address,uint32)": "55817d1d",
    "setTradingFeePPM(uint32)": "69a4dea7",
    "strategiesByPair(address,address,uint256,uint256)": "f74dad81",
    "strategiesByPairCount(address,address)": "322cf844",
    "strategy(uint256)": "bc88d7e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)": "f1c5e014",
    "tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)": "102ee9ba",
    "tradingFeePPM()": "f06f8acd",
    "unpause()": "3f4ba83a",
    "updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])": "21589fa1",
    "version()": "54fd4d50",
    "withdrawFees(address,uint256,address)": "9ba372c2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVoucher\",\"name\":\"initVoucher\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GreaterThanMaxInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientCapacity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientNativeTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIndices\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeActionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeActionStrategyId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LowerThanMinReturn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAmountMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrderDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutDated\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Overflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PairDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnknownDelegator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnnecessaryNativeTokenReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"pairId\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"prevFeePPM\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFeePPM\",\"type\":\"uint32\"}],\"name\":\"PairTradingFeePPMUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order1\",\"type\":\"tuple\"}],\"name\":\"StrategyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order1\",\"type\":\"tuple\"}],\"name\":\"StrategyDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Order\",\"name\":\"order1\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"tradingFeeAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"byTargetAmount\",\"type\":\"bool\"}],\"name\":\"TokensTraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"prevFeePPM\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newFeePPM\",\"type\":\"uint32\"}],\"name\":\"TradingFeePPMUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"accumulatedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"}],\"name\":\"calculateTradeSourceAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"}],\"name\":\"calculateTradeTargetAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controllerType\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"}],\"internalType\":\"struct Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"name\":\"createStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"}],\"name\":\"deleteStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"id\",\"type\":\"uint128\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"}],\"internalType\":\"struct Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairTradingFeePPM\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"Token[2][]\",\"name\":\"\",\"type\":\"address[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"postUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleEmergencyStopper\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roleFeesManager\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"newPairTradingFeePPM\",\"type\":\"uint32\"}],\"name\":\"setPairTradingFeePPM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newTradingFeePPM\",\"type\":\"uint32\"}],\"name\":\"setTradingFeePPM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"strategiesByPair\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"internalType\":\"struct Strategy[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"strategiesByPairCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"strategy\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"Token[2]\",\"name\":\"tokens\",\"type\":\"address[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"orders\",\"type\":\"tuple[2]\"}],\"internalType\":\"struct Strategy\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"minReturn\",\"type\":\"uint128\"}],\"name\":\"tradeBySourceAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"sourceToken\",\"type\":\"address\"},{\"internalType\":\"Token\",\"name\":\"targetToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct TradeAction[]\",\"name\":\"tradeActions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"maxInput\",\"type\":\"uint128\"}],\"name\":\"tradeByTargetAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingFeePPM\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strategyId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"currentOrders\",\"type\":\"tuple[2]\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"y\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"z\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"A\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"B\",\"type\":\"uint64\"}],\"internalType\":\"struct Order[2]\",\"name\":\"newOrders\",\"type\":\"tuple[2]\"}],\"name\":\"updateStrategy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Carbon Controller contract\",\"events\":{\"FeesWithdrawn(address,address,uint256,address)\":{\"details\":\"triggered when fees are withdrawn\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"PairCreated(uint128,address,address)\":{\"details\":\"triggered when a new pair is created\"},\"PairTradingFeePPMUpdated(address,address,uint32,uint32)\":{\"details\":\"triggered when the custom trading fee for a given pair is updated\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"StrategyCreated(uint256,address,address,address,(uint128,uint128,uint64,uint64),(uint128,uint128,uint64,uint64))\":{\"details\":\"triggered when a strategy is created\"},\"StrategyDeleted(uint256,address,address,address,(uint128,uint128,uint64,uint64),(uint128,uint128,uint64,uint64))\":{\"details\":\"triggered when a strategy is deleted\"},\"StrategyUpdated(uint256,address,address,(uint128,uint128,uint64,uint64),(uint128,uint128,uint64,uint64),uint8)\":{\"details\":\"triggered when a strategy is updated\"},\"TokensTraded(address,address,address,uint256,uint256,uint128,bool)\":{\"details\":\"triggered when tokens are traded\"},\"TradingFeePPMUpdated(uint32,uint32)\":{\"details\":\"triggered when the network fee is updated\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"accumulatedFees(address)\":{\"details\":\"returns the amount of fees accumulated for the specified token\"},\"calculateTradeSourceAmount(address,address,(uint256,uint128)[])\":{\"details\":\"returns the source amount required when trading by target amount\"},\"calculateTradeTargetAmount(address,address,(uint256,uint128)[])\":{\"details\":\"returns the target amount expected when trading by source amount\"},\"constructor\":{\"details\":\"used to set immutable state variables and initialize the implementation\"},\"controllerType()\":{\"details\":\"returns the type of the controller\"},\"createPair(address,address)\":{\"details\":\"creates a new pair of provided token0 and token1\"},\"createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])\":{\"details\":\"creates a new strategy, returns the strategy's id requirements: - the caller must have approved the tokens with assigned liquidity in the order, if any\"},\"deleteStrategy(uint256)\":{\"details\":\"deletes a strategy matching the provided id notes: - 100% of liquidity is withdrawn and sent to the owner requirements: - the caller must be the owner of the NFT voucher\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize()\":{\"details\":\"fully initializes the contract and its parents\"},\"pair(address,address)\":{\"details\":\"returns a pair's metadata matching the provided token0 and token1\"},\"pairTradingFeePPM(address,address)\":{\"details\":\"returns the trading fee for a given pair (in units of PPM)\"},\"pairs()\":{\"details\":\"returns a list of all supported pairs\"},\"pause()\":{\"details\":\"pauses the CarbonController requirements: - the caller must have the ROLE_EMERGENCY_STOPPER privilege\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"postUpgrade(bytes)\":{\"details\":\"performs post-upgrade initialization requirements: - this must and can be called only once per-upgrade\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"roleAdmin()\":{\"details\":\"returns the admin role\"},\"roleEmergencyStopper()\":{\"details\":\"returns the emergency stopper role\"},\"roleFeesManager()\":{\"details\":\"returns the fees manager role\"},\"setPairTradingFeePPM(address,address,uint32)\":{\"details\":\"sets the custom trading fee for a given pair (in units of PPM) requirements: - the caller must be the admin of the contract\"},\"setTradingFeePPM(uint32)\":{\"details\":\"sets the trading fee (in units of PPM) requirements: - the caller must be the admin of the contract\"},\"strategiesByPair(address,address,uint256,uint256)\":{\"details\":\"returns strategies belonging to a specific pair note that for the full list of strategies pass 0 to both startIndex and endIndex\"},\"strategiesByPairCount(address,address)\":{\"details\":\"returns the count of strategies belonging to a specific pair\"},\"strategy(uint256)\":{\"details\":\"returns a strategy matching the provided id, note tokens and orders are returned sorted as provided upon creation\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)\":{\"details\":\"performs a trade by specifying a fixed source amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token\"},\"tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)\":{\"details\":\"performs a trade by specifying a fixed target amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token\"},\"tradingFeePPM()\":{\"details\":\"returns the trading fee (in units of PPM)\"},\"unpause()\":{\"details\":\"resumes the CarbonController requirements: - the caller must have the ROLE_EMERGENCY_STOPPER privilege\"},\"updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])\":{\"details\":\"updates an existing strategy notes: - currentOrders should reflect the orders values at the time of sending the tx this prevents cases in which the strategy was updated due to a trade between the time the transaction was sent and the time it was mined, thus, giving more control to the strategy owner. - reduced liquidity is refunded to the owner - increased liquidity is deposited - excess native token is returned to the sender if any - the sorting of orders is expected to equal the sorting upon creation requirements: - the caller must have approved the tokens with increased liquidity, if any\"},\"withdrawFees(address,uint256,address)\":{\"details\":\"transfers the accumulated fees to the specified recipient notes: `amount` is capped to the available amount returns the amount withdrawn\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/carbon/CarbonController.sol\":\"CarbonController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@bancor/=node_modules/@bancor/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@mean-finance/=node_modules/@mean-finance/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/carbon/CarbonController.sol\":{\"keccak256\":\"0x729137cd38a083001ad32368098fec2d0050e79af519c7e98547ff813db4f04e\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://cbab013c16dca3fa3566b529c1a22f99ad4161fddda485c972fb5a0ab896351a\",\"dweb:/ipfs/QmPsuygKXdqW8b5PQND8AnCNJ2SU4b7euzNPem2ScbuD5E\"]},\"contracts/carbon/Pairs.sol\":{\"keccak256\":\"0xf93c805727414083085098262481ac9def2bdeafcb71934234b0b92cc6320551\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://9e20dd667bc2da286024e68e30924dacf9e5eef9d750bd3af879c46065afda63\",\"dweb:/ipfs/QmW6DpK4egvQAXUH3z1iuUBNjEMRksegFcEKQ2HQPgUqv7\"]},\"contracts/carbon/Strategies.sol\":{\"keccak256\":\"0xba59c67b8d76573fd75a71fa1ef572044d6fcd936fa925c0933227f958bfe6c7\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://37313cc5b1b04ab8d7fee913972b65e1e614d922039b7c7a89b52456ac185d1d\",\"dweb:/ipfs/QmRKGWAcaNtFbbvQ8j4oVkdWaeNEc7awohDJ2akCn8NaNg\"]},\"contracts/carbon/interfaces/ICarbonController.sol\":{\"keccak256\":\"0xf495e13cd389a72edea6e37db3ae5b419718eea5efc2cfb48259747c2399ff15\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://cae2932b36654b8bd93b86f38fa926a2db359e6f0531cec7286109e164d651f5\",\"dweb:/ipfs/QmWHyTrivw9cNP35LTpTmBU8DmpE9hAseUNDxCvbAGVmpE\"]},\"contracts/token/Token.sol\":{\"keccak256\":\"0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521\",\"dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi\"]},\"contracts/utility/Constants.sol\":{\"keccak256\":\"0x6cbf2c0e48b5377fe5fea47278256856368612efd7e29b17c716f1611b64d0f3\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://3ad5afc72e4194aa21ac7c02801e6031076bfcd1689f444071b18a123b14884a\",\"dweb:/ipfs/QmdQ4EJgQs6h3oKqh38fbqHnzoEb3Mt26BKiHuesYkTb2f\"]},\"contracts/utility/Fraction.sol\":{\"keccak256\":\"0x84c801ef901e7fd30e99637377b29dfa28c6c1fa140adb5c872fddd8b82fd358\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f7aa812bdb61aa1fff9dc357d67309fb104e08b1bfcf13d2e12cb7adea036c19\",\"dweb:/ipfs/QmYNvFA6HbG5mwfZjHUPLNqRFUfHhqQH346PiHY6cEpxAD\"]},\"contracts/utility/MathEx.sol\":{\"keccak256\":\"0x2ff481334338c5d5b13f918a3a58dfebb9ec3329848117acd7ac7e63382664c5\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://a411ed9456feb5fcf7414a6eae0adf8c63be63c73cf7abdc6218b3bd3b03ff74\",\"dweb:/ipfs/Qme7bfmJra8Wyv1DWT4v5keQsxSigSSMmWQW21GdBqJ4E4\"]},\"contracts/utility/OnlyProxyDelegate.sol\":{\"keccak256\":\"0x47a46b82fc8870eda785f8f0c7c9839a93c1503103d081d493e6ee42fefc3bb0\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://57141475c70be8aa2ac269d15b04ed6d51f2f168c2315f035dfb4ee20d7d5746\",\"dweb:/ipfs/QmeJjLcNzFk74vGKpnP6viPd9diUYxjXp7kMjDCcuFXtCS\"]},\"contracts/utility/Upgradeable.sol\":{\"keccak256\":\"0x49cc44253aa440cf48c4275daa0e51414e4a65fd57c4b7fe9e3aac6588f2f4a4\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://538f91cd0f6f578206e14412b71f75241295fd87086de44ee38a992efc8fe598\",\"dweb:/ipfs/QmPCCj3DEFYsDfrSW7oELRNGdD7WjaRFzvrcjBi1bv4kHr\"]},\"contracts/utility/Utils.sol\":{\"keccak256\":\"0xf6f3ad1ec3ee378729ebe1ffc0ac72e95a6353a9ec5b85fdf3e4c3b0f54a5f1e\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://fe8ad2c267dd51f7347c2939ede51a74e603cce0ac4fbad256d6d723bdc66675\",\"dweb:/ipfs/QmQDzduCwAnZca5QHRrqJjPYbggA8jKTCwswoch7dzL744\"]},\"contracts/utility/interfaces/IUpgradeable.sol\":{\"keccak256\":\"0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978\",\"dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU\"]},\"contracts/utility/interfaces/IVersioned.sol\":{\"keccak256\":\"0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51\",\"dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif\"]},\"contracts/voucher/interfaces/IVoucher.sol\":{\"keccak256\":\"0x989f053712ccd26f2d5dfde61f149882a73cb07892f0f2f2ade13e0fd8ded054\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://082409c5265f905ca7f0a46f5ba67dd7d806538a83a272ddad8b5dec0288764a\",\"dweb:/ipfs/QmRh4tkxALT6sJJrzm6aokWqPCEdkGHvBrV2VkkMWDRNUW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IVoucher",
              "name": "initVoucher",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "proxy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "GreaterThanMaxInput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IdenticalAddresses"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientCapacity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientLiquidity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientNativeTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidIndices"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTradeActionAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTradeActionStrategyId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LowerThanMinReturn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeAmountMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OrderDisabled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutDated"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Overflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PairAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PairDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnknownDelegator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnnecessaryNativeTokenReceived"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroValue"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeesWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "pairId",
              "type": "uint128",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PairCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "prevFeePPM",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newFeePPM",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PairTradingFeePPMUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct Order",
              "name": "order0",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct Order",
              "name": "order1",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct Order",
              "name": "order0",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct Order",
              "name": "order1",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct Order",
              "name": "order0",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "struct Order",
              "name": "order1",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "reason",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sourceAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "tradingFeeAmount",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "byTargetAmount",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensTraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "prevFeePPM",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newFeePPM",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TradingFeePPMUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "accumulatedFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTradeSourceAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTradeTargetAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "controllerType",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPair",
          "outputs": [
            {
              "internalType": "struct Pair",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "id",
                  "type": "uint128"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "struct Order[2]",
              "name": "orders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pair",
          "outputs": [
            {
              "internalType": "struct Pair",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "id",
                  "type": "uint128"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pairTradingFeePPM",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pairs",
          "outputs": [
            {
              "internalType": "Token[2][]",
              "name": "",
              "type": "address[2][]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "roleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "roleEmergencyStopper",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "roleFeesManager",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "newPairTradingFeePPM",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPairTradingFeePPM"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "newTradingFeePPM",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTradingFeePPM"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "startIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesByPair",
          "outputs": [
            {
              "internalType": "struct Strategy[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                },
                {
                  "internalType": "struct Order[2]",
                  "name": "orders",
                  "type": "tuple[2]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "y",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "z",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "A",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "B",
                      "type": "uint64"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "token1",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesByPairCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategy",
          "outputs": [
            {
              "internalType": "struct Strategy",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "Token[2]",
                  "name": "tokens",
                  "type": "address[2]"
                },
                {
                  "internalType": "struct Order[2]",
                  "name": "orders",
                  "type": "tuple[2]",
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "y",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint128",
                      "name": "z",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "A",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "B",
                      "type": "uint64"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "minReturn",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tradeBySourceAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "sourceToken",
              "type": "address"
            },
            {
              "internalType": "Token",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "struct TradeAction[]",
              "name": "tradeActions",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "strategyId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "maxInput",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "tradeByTargetAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tradingFeePPM",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "strategyId",
              "type": "uint256"
            },
            {
              "internalType": "struct Order[2]",
              "name": "currentOrders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            },
            {
              "internalType": "struct Order[2]",
              "name": "newOrders",
              "type": "tuple[2]",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "y",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "z",
                  "type": "uint128"
                },
                {
                  "internalType": "uint64",
                  "name": "A",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "B",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateStrategy"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "accumulatedFees(address)": {
            "details": "returns the amount of fees accumulated for the specified token"
          },
          "calculateTradeSourceAmount(address,address,(uint256,uint128)[])": {
            "details": "returns the source amount required when trading by target amount"
          },
          "calculateTradeTargetAmount(address,address,(uint256,uint128)[])": {
            "details": "returns the target amount expected when trading by source amount"
          },
          "constructor": {
            "details": "used to set immutable state variables and initialize the implementation"
          },
          "controllerType()": {
            "details": "returns the type of the controller"
          },
          "createPair(address,address)": {
            "details": "creates a new pair of provided token0 and token1"
          },
          "createStrategy(address,address,(uint128,uint128,uint64,uint64)[2])": {
            "details": "creates a new strategy, returns the strategy's id requirements: - the caller must have approved the tokens with assigned liquidity in the order, if any"
          },
          "deleteStrategy(uint256)": {
            "details": "deletes a strategy matching the provided id notes: - 100% of liquidity is withdrawn and sent to the owner requirements: - the caller must be the owner of the NFT voucher"
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize()": {
            "details": "fully initializes the contract and its parents"
          },
          "pair(address,address)": {
            "details": "returns a pair's metadata matching the provided token0 and token1"
          },
          "pairTradingFeePPM(address,address)": {
            "details": "returns the trading fee for a given pair (in units of PPM)"
          },
          "pairs()": {
            "details": "returns a list of all supported pairs"
          },
          "pause()": {
            "details": "pauses the CarbonController requirements: - the caller must have the ROLE_EMERGENCY_STOPPER privilege"
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "postUpgrade(bytes)": {
            "details": "performs post-upgrade initialization requirements: - this must and can be called only once per-upgrade"
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "roleAdmin()": {
            "details": "returns the admin role"
          },
          "roleEmergencyStopper()": {
            "details": "returns the emergency stopper role"
          },
          "roleFeesManager()": {
            "details": "returns the fees manager role"
          },
          "setPairTradingFeePPM(address,address,uint32)": {
            "details": "sets the custom trading fee for a given pair (in units of PPM) requirements: - the caller must be the admin of the contract"
          },
          "setTradingFeePPM(uint32)": {
            "details": "sets the trading fee (in units of PPM) requirements: - the caller must be the admin of the contract"
          },
          "strategiesByPair(address,address,uint256,uint256)": {
            "details": "returns strategies belonging to a specific pair note that for the full list of strategies pass 0 to both startIndex and endIndex"
          },
          "strategiesByPairCount(address,address)": {
            "details": "returns the count of strategies belonging to a specific pair"
          },
          "strategy(uint256)": {
            "details": "returns a strategy matching the provided id, note tokens and orders are returned sorted as provided upon creation"
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "tradeBySourceAmount(address,address,(uint256,uint128)[],uint256,uint128)": {
            "details": "performs a trade by specifying a fixed source amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token"
          },
          "tradeByTargetAmount(address,address,(uint256,uint128)[],uint256,uint128)": {
            "details": "performs a trade by specifying a fixed target amount notes: - excess native token is returned to the sender if any requirements: - the caller must have approved the source token"
          },
          "tradingFeePPM()": {
            "details": "returns the trading fee (in units of PPM)"
          },
          "unpause()": {
            "details": "resumes the CarbonController requirements: - the caller must have the ROLE_EMERGENCY_STOPPER privilege"
          },
          "updateStrategy(uint256,(uint128,uint128,uint64,uint64)[2],(uint128,uint128,uint64,uint64)[2])": {
            "details": "updates an existing strategy notes: - currentOrders should reflect the orders values at the time of sending the tx this prevents cases in which the strategy was updated due to a trade between the time the transaction was sent and the time it was mined, thus, giving more control to the strategy owner. - reduced liquidity is refunded to the owner - increased liquidity is deposited - excess native token is returned to the sender if any - the sorting of orders is expected to equal the sorting upon creation requirements: - the caller must have approved the tokens with increased liquidity, if any"
          },
          "withdrawFees(address,uint256,address)": {
            "details": "transfers the accumulated fees to the specified recipient notes: `amount` is capped to the available amount returns the amount withdrawn"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@bancor/=node_modules/@bancor/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@mean-finance/=node_modules/@mean-finance/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/carbon/CarbonController.sol": "CarbonController"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/carbon/CarbonController.sol": {
        "keccak256": "0x729137cd38a083001ad32368098fec2d0050e79af519c7e98547ff813db4f04e",
        "urls": [
          "bzz-raw://cbab013c16dca3fa3566b529c1a22f99ad4161fddda485c972fb5a0ab896351a",
          "dweb:/ipfs/QmPsuygKXdqW8b5PQND8AnCNJ2SU4b7euzNPem2ScbuD5E"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/carbon/Pairs.sol": {
        "keccak256": "0xf93c805727414083085098262481ac9def2bdeafcb71934234b0b92cc6320551",
        "urls": [
          "bzz-raw://9e20dd667bc2da286024e68e30924dacf9e5eef9d750bd3af879c46065afda63",
          "dweb:/ipfs/QmW6DpK4egvQAXUH3z1iuUBNjEMRksegFcEKQ2HQPgUqv7"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/carbon/Strategies.sol": {
        "keccak256": "0xba59c67b8d76573fd75a71fa1ef572044d6fcd936fa925c0933227f958bfe6c7",
        "urls": [
          "bzz-raw://37313cc5b1b04ab8d7fee913972b65e1e614d922039b7c7a89b52456ac185d1d",
          "dweb:/ipfs/QmRKGWAcaNtFbbvQ8j4oVkdWaeNEc7awohDJ2akCn8NaNg"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/carbon/interfaces/ICarbonController.sol": {
        "keccak256": "0xf495e13cd389a72edea6e37db3ae5b419718eea5efc2cfb48259747c2399ff15",
        "urls": [
          "bzz-raw://cae2932b36654b8bd93b86f38fa926a2db359e6f0531cec7286109e164d651f5",
          "dweb:/ipfs/QmWHyTrivw9cNP35LTpTmBU8DmpE9hAseUNDxCvbAGVmpE"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/token/Token.sol": {
        "keccak256": "0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53",
        "urls": [
          "bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521",
          "dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Constants.sol": {
        "keccak256": "0x6cbf2c0e48b5377fe5fea47278256856368612efd7e29b17c716f1611b64d0f3",
        "urls": [
          "bzz-raw://3ad5afc72e4194aa21ac7c02801e6031076bfcd1689f444071b18a123b14884a",
          "dweb:/ipfs/QmdQ4EJgQs6h3oKqh38fbqHnzoEb3Mt26BKiHuesYkTb2f"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Fraction.sol": {
        "keccak256": "0x84c801ef901e7fd30e99637377b29dfa28c6c1fa140adb5c872fddd8b82fd358",
        "urls": [
          "bzz-raw://f7aa812bdb61aa1fff9dc357d67309fb104e08b1bfcf13d2e12cb7adea036c19",
          "dweb:/ipfs/QmYNvFA6HbG5mwfZjHUPLNqRFUfHhqQH346PiHY6cEpxAD"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/MathEx.sol": {
        "keccak256": "0x2ff481334338c5d5b13f918a3a58dfebb9ec3329848117acd7ac7e63382664c5",
        "urls": [
          "bzz-raw://a411ed9456feb5fcf7414a6eae0adf8c63be63c73cf7abdc6218b3bd3b03ff74",
          "dweb:/ipfs/Qme7bfmJra8Wyv1DWT4v5keQsxSigSSMmWQW21GdBqJ4E4"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/OnlyProxyDelegate.sol": {
        "keccak256": "0x47a46b82fc8870eda785f8f0c7c9839a93c1503103d081d493e6ee42fefc3bb0",
        "urls": [
          "bzz-raw://57141475c70be8aa2ac269d15b04ed6d51f2f168c2315f035dfb4ee20d7d5746",
          "dweb:/ipfs/QmeJjLcNzFk74vGKpnP6viPd9diUYxjXp7kMjDCcuFXtCS"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Upgradeable.sol": {
        "keccak256": "0x49cc44253aa440cf48c4275daa0e51414e4a65fd57c4b7fe9e3aac6588f2f4a4",
        "urls": [
          "bzz-raw://538f91cd0f6f578206e14412b71f75241295fd87086de44ee38a992efc8fe598",
          "dweb:/ipfs/QmPCCj3DEFYsDfrSW7oELRNGdD7WjaRFzvrcjBi1bv4kHr"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/Utils.sol": {
        "keccak256": "0xf6f3ad1ec3ee378729ebe1ffc0ac72e95a6353a9ec5b85fdf3e4c3b0f54a5f1e",
        "urls": [
          "bzz-raw://fe8ad2c267dd51f7347c2939ede51a74e603cce0ac4fbad256d6d723bdc66675",
          "dweb:/ipfs/QmQDzduCwAnZca5QHRrqJjPYbggA8jKTCwswoch7dzL744"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IUpgradeable.sol": {
        "keccak256": "0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c",
        "urls": [
          "bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978",
          "dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IVersioned.sol": {
        "keccak256": "0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04",
        "urls": [
          "bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51",
          "dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/voucher/interfaces/IVoucher.sol": {
        "keccak256": "0x989f053712ccd26f2d5dfde61f149882a73cb07892f0f2f2ade13e0fd8ded054",
        "urls": [
          "bzz-raw://082409c5265f905ca7f0a46f5ba67dd7d806538a83a272ddad8b5dec0288764a",
          "dweb:/ipfs/QmRh4tkxALT6sJJrzm6aokWqPCEdkGHvBrV2VkkMWDRNUW"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c",
        "urls": [
          "bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a",
          "dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f",
        "urls": [
          "bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f",
          "dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/carbon/CarbonController.sol",
    "id": 1083,
    "exportedSymbols": {
      "AccessDenied": [
        9015
      ],
      "CarbonController": [
        1082
      ],
      "ICarbonController": [
        4463
      ],
      "IVersioned": [
        9124
      ],
      "IVoucher": [
        10500
      ],
      "MAX_GAP": [
        7826
      ],
      "OnlyProxyDelegate": [
        8849
      ],
      "Order": [
        1491
      ],
      "Pair": [
        1098
      ],
      "Pairs": [
        1454
      ],
      "PausableUpgradeable": [
        53937
      ],
      "ReentrancyGuardUpgradeable": [
        54021
      ],
      "Strategies": [
        4215
      ],
      "Strategy": [
        1513
      ],
      "Token": [
        7445
      ],
      "TradeAction": [
        1518
      ],
      "TradeTokens": [
        1498
      ],
      "Upgradeable": [
        9007
      ],
      "Utils": [
        9103
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:14627:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "51:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "75:121:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 54022,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54021,
              "src": "84:26:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "197:107:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 53938,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "PausableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53937,
              "src": "206:19:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "305:66:0",
        "nodes": [],
        "absolutePath": "contracts/utility/interfaces/IVersioned.sol",
        "file": "../utility/interfaces/IVersioned.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 9125,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "IVersioned",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9124,
              "src": "314:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "372:42:0",
        "nodes": [],
        "absolutePath": "contracts/carbon/Pairs.sol",
        "file": "./Pairs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 1455,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "Pairs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1454,
              "src": "381:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 9,
              "name": "Pair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1098,
              "src": "388:4:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "415:43:0",
        "nodes": [],
        "absolutePath": "contracts/token/Token.sol",
        "file": "../token/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 7801,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11,
              "name": "Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7445,
              "src": "424:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18,
        "nodeType": "ImportDirective",
        "src": "459:89:0",
        "nodes": [],
        "absolutePath": "contracts/carbon/Strategies.sol",
        "file": "./Strategies.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 4216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13,
              "name": "Strategies",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4215,
              "src": "468:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 14,
              "name": "Strategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1513,
              "src": "480:8:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 15,
              "name": "TradeAction",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1518,
              "src": "490:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 16,
              "name": "Order",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1491,
              "src": "503:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 17,
              "name": "TradeTokens",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1498,
              "src": "510:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20,
        "nodeType": "ImportDirective",
        "src": "549:57:0",
        "nodes": [],
        "absolutePath": "contracts/utility/Upgradeable.sol",
        "file": "../utility/Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 9008,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19,
              "name": "Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9007,
              "src": "558:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 22,
        "nodeType": "ImportDirective",
        "src": "607:62:0",
        "nodes": [],
        "absolutePath": "contracts/voucher/interfaces/IVoucher.sol",
        "file": "../voucher/interfaces/IVoucher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 10501,
        "symbolAliases": [
          {
            "foreign": {
              "id": 21,
              "name": "IVoucher",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10500,
              "src": "616:8:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24,
        "nodeType": "ImportDirective",
        "src": "670:71:0",
        "nodes": [],
        "absolutePath": "contracts/carbon/interfaces/ICarbonController.sol",
        "file": "./interfaces/ICarbonController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 4464,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23,
              "name": "ICarbonController",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4463,
              "src": "679:17:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27,
        "nodeType": "ImportDirective",
        "src": "742:59:0",
        "nodes": [],
        "absolutePath": "contracts/utility/Utils.sol",
        "file": "../utility/Utils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 9104,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9103,
              "src": "751:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 26,
              "name": "AccessDenied",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9015,
              "src": "758:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29,
        "nodeType": "ImportDirective",
        "src": "802:69:0",
        "nodes": [],
        "absolutePath": "contracts/utility/OnlyProxyDelegate.sol",
        "file": "../utility/OnlyProxyDelegate.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 8850,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28,
              "name": "OnlyProxyDelegate",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8849,
              "src": "811:17:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31,
        "nodeType": "ImportDirective",
        "src": "872:51:0",
        "nodes": [],
        "absolutePath": "contracts/utility/Constants.sol",
        "file": "../utility/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1083,
        "sourceUnit": 7827,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30,
              "name": "MAX_GAP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7826,
              "src": "881:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1082,
        "nodeType": "ContractDefinition",
        "src": "968:13709:0",
        "nodes": [
          {
            "id": 53,
            "nodeType": "VariableDeclaration",
            "src": "1223:85:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ROLE_EMERGENCY_STOPPER",
            "nameLocation": "1248:22:0",
            "scope": 1082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 49,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1223:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "524f4c455f454d455247454e43595f53544f50504552",
                  "id": 51,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1283:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_f28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c0845",
                    "typeString": "literal_string \"ROLE_EMERGENCY_STOPPER\""
                  },
                  "value": "ROLE_EMERGENCY_STOPPER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_f28f409b8cbe6b50c7ca45afe893f01f69626f8a4e33cb480bc1bc2d618c0845",
                    "typeString": "literal_string \"ROLE_EMERGENCY_STOPPER\""
                  }
                ],
                "id": 50,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1273:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1273:35:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 58,
            "nodeType": "VariableDeclaration",
            "src": "1373:75:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ROLE_FEES_MANAGER",
            "nameLocation": "1398:17:0",
            "scope": 1082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 54,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1373:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "524f4c455f464545535f4d414e41474552",
                  "id": 56,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1428:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b16",
                    "typeString": "literal_string \"ROLE_FEES_MANAGER\""
                  },
                  "value": "ROLE_FEES_MANAGER"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_24a843cae781765d8cdc3bca1cc42497522c0508f4e621c2ca36ceea2fda7b16",
                    "typeString": "literal_string \"ROLE_FEES_MANAGER\""
                  }
                ],
                "id": 55,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1418:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1418:30:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "id": 61,
            "nodeType": "VariableDeclaration",
            "src": "1455:43:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "CONTROLLER_TYPE",
            "nameLocation": "1479:15:0",
            "scope": 1082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 59,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "1455:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 60,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1497:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 64,
            "nodeType": "VariableDeclaration",
            "src": "1533:35:0",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_voucher",
            "nameLocation": "1560:8:0",
            "scope": 1082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVoucher_$10500",
              "typeString": "contract IVoucher"
            },
            "typeName": {
              "id": 63,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 62,
                "name": "IVoucher",
                "nameLocations": [
                  "1533:8:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10500,
                "src": "1533:8:0"
              },
              "referencedDeclaration": 10500,
              "src": "1533:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVoucher_$10500",
                "typeString": "contract IVoucher"
              }
            },
            "visibility": "private"
          },
          {
            "id": 68,
            "nodeType": "VariableDeclaration",
            "src": "1624:30:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1649:5:0",
            "scope": 1082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 65,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1624:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 67,
              "length": {
                "id": 66,
                "name": "MAX_GAP",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 7826,
                "src": "1632:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "ArrayTypeName",
              "src": "1624:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 70,
            "nodeType": "ErrorDefinition",
            "src": "1661:27:0",
            "nodes": [],
            "errorSelector": "bd969eb0",
            "name": "IdenticalAddresses",
            "nameLocation": "1667:18:0",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1685:2:0"
            }
          },
          {
            "id": 72,
            "nodeType": "ErrorDefinition",
            "src": "1693:39:0",
            "nodes": [],
            "errorSelector": "26697e9e",
            "name": "UnnecessaryNativeTokenReceived",
            "nameLocation": "1699:30:0",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1729:2:0"
            }
          },
          {
            "id": 74,
            "nodeType": "ErrorDefinition",
            "src": "1737:40:0",
            "nodes": [],
            "errorSelector": "7038b899",
            "name": "InsufficientNativeTokenReceived",
            "nameLocation": "1743:31:0",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1774:2:0"
            }
          },
          {
            "id": 76,
            "nodeType": "ErrorDefinition",
            "src": "1782:24:0",
            "nodes": [],
            "errorSelector": "1ab7da6b",
            "name": "DeadlineExpired",
            "nameLocation": "1788:15:0",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1803:2:0"
            }
          },
          {
            "id": 103,
            "nodeType": "FunctionDefinition",
            "src": "1912:181:0",
            "nodes": [],
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1986:107:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91,
                            "name": "initVoucher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "2018:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVoucher_$10500",
                              "typeString": "contract IVoucher"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVoucher_$10500",
                              "typeString": "contract IVoucher"
                            }
                          ],
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2010:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2010:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2010:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88,
                      "name": "_validAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9078,
                      "src": "1996:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$__$",
                        "typeString": "function (address) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:35:0"
                },
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "_voucher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "2042:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoucher_$10500",
                        "typeString": "contract IVoucher"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "initVoucher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80,
                      "src": "2053:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoucher_$10500",
                        "typeString": "contract IVoucher"
                      }
                    },
                    "src": "2042:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoucher_$10500",
                      "typeString": "contract IVoucher"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:22:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 99,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "2074:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:12:0"
                }
              ]
            },
            "documentation": {
              "id": 77,
              "nodeType": "StructuredDocumentation",
              "src": "1812:95:0",
              "text": " @dev used to set immutable state variables and initialize the implementation"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 85,
                    "name": "proxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "1979:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 86,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 84,
                  "name": "OnlyProxyDelegate",
                  "nameLocations": [
                    "1961:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8849,
                  "src": "1961:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1961:24:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "initVoucher",
                  "nameLocation": "1933:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1924:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoucher_$10500",
                    "typeString": "contract IVoucher"
                  },
                  "typeName": {
                    "id": 79,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78,
                      "name": "IVoucher",
                      "nameLocations": [
                        "1924:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10500,
                      "src": "1924:8:0"
                    },
                    "referencedDeclaration": 10500,
                    "src": "1924:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoucher_$10500",
                      "typeString": "contract IVoucher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "1954:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1946:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:37:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1986:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 113,
            "nodeType": "FunctionDefinition",
            "src": "2174:83:0",
            "nodes": [],
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "2215:42:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 109,
                      "name": "__CarbonController_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2225:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:25:0"
                }
              ]
            },
            "documentation": {
              "id": 104,
              "nodeType": "StructuredDocumentation",
              "src": "2099:70:0",
              "text": " @dev fully initializes the contract and its parents"
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 107,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 106,
                  "name": "initializer",
                  "nameLocations": [
                    "2203:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53712,
                  "src": "2203:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2203:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "2183:10:0",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:2:0"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 138,
            "nodeType": "FunctionDefinition",
            "src": "2376:258:0",
            "nodes": [],
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2437:197:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 119,
                      "name": "__Pairs_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "2447:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2447:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "2447:14:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 122,
                      "name": "__Strategies_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1749,
                      "src": "2471:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:19:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 125,
                      "name": "__Upgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8892,
                      "src": "2500:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:20:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 128,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53960,
                      "src": "2530:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2530:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2530:24:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 131,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53841,
                      "src": "2564:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "2564:17:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 134,
                      "name": "__CarbonController_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155,
                      "src": "2592:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:35:0"
                }
              ]
            },
            "documentation": {
              "id": 114,
              "nodeType": "StructuredDocumentation",
              "src": "2307:64:0",
              "text": " @dev initializes the contract and its parents"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "2420:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53755,
                  "src": "2420:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2420:16:0"
              }
            ],
            "name": "__CarbonController_init",
            "nameLocation": "2385:23:0",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2408:2:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 155,
            "nodeType": "FunctionDefinition",
            "src": "2710:230:0",
            "nodes": [],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2781:159:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "ROLE_EMERGENCY_STOPPER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "2844:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 146,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8871,
                        "src": "2868:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 144,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53471,
                      "src": "2830:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2830:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 150,
                        "name": "ROLE_FEES_MANAGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2903:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 151,
                        "name": "ROLE_ADMIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8871,
                        "src": "2922:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 149,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53471,
                      "src": "2889:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2889:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:44:0"
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
              "src": "2640:65:0",
              "text": " @dev performs contract-specific initialization"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 141,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "2764:16:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53755,
                  "src": "2764:16:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2764:16:0"
              }
            ],
            "name": "__CarbonController_init_unchained",
            "nameLocation": "2719:33:0",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2752:2:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2781:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 167,
            "nodeType": "FunctionDefinition",
            "src": "3036:115:0",
            "nodes": [],
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "3126:25:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "34",
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3143:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "functionReturnParameters": 163,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "3136:8:0"
                }
              ]
            },
            "baseFunctions": [
              8942,
              9123
            ],
            "documentation": {
              "id": 156,
              "nodeType": "StructuredDocumentation",
              "src": "2989:42:0",
              "text": " @inheritdoc Upgradeable"
            },
            "functionSelector": "54fd4d50",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nameLocation": "3045:7:0",
            "overrides": {
              "id": 160,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 158,
                  "name": "IVersioned",
                  "nameLocations": [
                    "3084:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9124,
                  "src": "3084:10:0"
                },
                {
                  "id": 159,
                  "name": "Upgradeable",
                  "nameLocations": [
                    "3096:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9007,
                  "src": "3096:11:0"
                }
              ],
              "src": "3075:33:0"
            },
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3052:2:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 167,
                  "src": "3118:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3117:8:0"
            },
            "scope": 1082,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 176,
            "nodeType": "FunctionDefinition",
            "src": "3220:110:0",
            "nodes": [],
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "3284:46:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "name": "ROLE_EMERGENCY_STOPPER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "3301:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 174,
                  "nodeType": "Return",
                  "src": "3294:29:0"
                }
              ]
            },
            "documentation": {
              "id": 168,
              "nodeType": "StructuredDocumentation",
              "src": "3157:58:0",
              "text": " @dev returns the emergency stopper role"
            },
            "functionSelector": "41f435b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "roleEmergencyStopper",
            "nameLocation": "3229:20:0",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:2:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "3275:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3274:9:0"
            },
            "scope": 1082,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 185,
            "nodeType": "FunctionDefinition",
            "src": "3394:100:0",
            "nodes": [],
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "3453:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 182,
                    "name": "ROLE_FEES_MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "3470:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "3463:24:0"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "3336:53:0",
              "text": " @dev returns the fees manager role"
            },
            "functionSelector": "2c40de1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "roleFeesManager",
            "nameLocation": "3403:15:0",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:2:0"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "3444:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3443:9:0"
            },
            "scope": 1082,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 194,
            "nodeType": "FunctionDefinition",
            "src": "3553:104:0",
            "nodes": [],
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "3618:39:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 191,
                    "name": "CONTROLLER_TYPE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "3635:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 190,
                  "id": 192,
                  "nodeType": "Return",
                  "src": "3628:22:0"
                }
              ]
            },
            "baseFunctions": [
              4236
            ],
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "3500:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "b76040cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "controllerType",
            "nameLocation": "3562:14:0",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:2:0"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "3610:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:8:0"
            },
            "scope": 1082,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 203,
            "nodeType": "FunctionDefinition",
            "src": "3716:94:0",
            "nodes": [],
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "3772:38:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 200,
                    "name": "_tradingFeePPM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1605,
                    "src": "3789:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 199,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "3782:21:0"
                }
              ]
            },
            "baseFunctions": [
              4242
            ],
            "documentation": {
              "id": 195,
              "nodeType": "StructuredDocumentation",
              "src": "3663:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "f06f8acd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradingFeePPM",
            "nameLocation": "3725:13:0",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3738:2:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "3764:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3764:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3763:8:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 229,
            "nodeType": "FunctionDefinition",
            "src": "3869:192:0",
            "nodes": [],
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "3955:106:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "3977:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 228,
                      "src": "3965:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 215,
                          "name": "Pair",
                          "nameLocations": [
                            "3965:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "3965:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "3965:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 219,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3991:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 220,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3999:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 218,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "3985:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3965:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 224,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "4045:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                            "typeString": "struct Pair memory"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4051:2:0",
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1092,
                        "src": "4045:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 223,
                      "name": "_getPairTradingFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2723,
                      "src": "4023:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$returns$_t_uint32_$",
                        "typeString": "function (uint128) view returns (uint32)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 214,
                  "id": 227,
                  "nodeType": "Return",
                  "src": "4016:38:0"
                }
              ]
            },
            "baseFunctions": [
              4254
            ],
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "3816:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "ba0a868b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairTradingFeePPM",
            "nameLocation": "3878:17:0",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "3902:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3896:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 205,
                      "name": "Token",
                      "nameLocations": [
                        "3896:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3896:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3896:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "3916:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3910:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 209,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 208,
                      "name": "Token",
                      "nameLocations": [
                        "3910:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3910:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3910:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:28:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "3947:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3947:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3946:8:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 245,
            "nodeType": "FunctionDefinition",
            "src": "4223:149:0",
            "nodes": [],
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "4320:52:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 241,
                        "name": "newTradingFeePPM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "4348:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 240,
                      "name": "_setTradingFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3233,
                      "src": "4330:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4330:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "4330:35:0"
                }
              ]
            },
            "documentation": {
              "id": 230,
              "nodeType": "StructuredDocumentation",
              "src": "4067:151:0",
              "text": " @dev sets the trading fee (in units of PPM)\n requirements:\n - the caller must be the admin of the contract"
            },
            "functionSelector": "69a4dea7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 234,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4283:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8924,
                  "src": "4283:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4283:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 237,
                    "name": "newTradingFeePPM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 232,
                    "src": "4302:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "validFee",
                  "nameLocations": [
                    "4293:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9088,
                  "src": "4293:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4293:26:0"
              }
            ],
            "name": "setTradingFeePPM",
            "nameLocation": "4232:16:0",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "newTradingFeePPM",
                  "nameLocation": "4256:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "4249:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4248:25:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4320:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 276,
            "nodeType": "FunctionDefinition",
            "src": "4558:285:0",
            "nodes": [],
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "4725:118:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "4747:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "4735:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 263,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 262,
                          "name": "Pair",
                          "nameLocations": [
                            "4735:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "4735:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "4735:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 266,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "4761:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 267,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "4769:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 265,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "4755:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4755:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4735:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 271,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4808:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "id": 272,
                        "name": "newPairTradingFeePPM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "4815:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 270,
                      "name": "_setPairTradingFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3276,
                      "src": "4786:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Pair_$1098_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (struct Pair memory,uint32)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4786:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:50:0"
                }
              ]
            },
            "documentation": {
              "id": 246,
              "nodeType": "StructuredDocumentation",
              "src": "4378:175:0",
              "text": " @dev sets the custom trading fee for a given pair (in units of PPM)\n requirements:\n - the caller must be the admin of the contract"
            },
            "functionSelector": "55817d1d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 257,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 256,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4684:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8924,
                  "src": "4684:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4684:9:0"
              },
              {
                "arguments": [
                  {
                    "id": 259,
                    "name": "newPairTradingFeePPM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 254,
                    "src": "4703:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "validFee",
                  "nameLocations": [
                    "4694:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9088,
                  "src": "4694:8:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4694:30:0"
              }
            ],
            "name": "setPairTradingFeePPM",
            "nameLocation": "4567:20:0",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "4603:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4597:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 247,
                      "name": "Token",
                      "nameLocations": [
                        "4597:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4597:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4597:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "4625:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4619:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 250,
                      "name": "Token",
                      "nameLocations": [
                        "4619:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4619:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4619:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "newPairTradingFeePPM",
                  "nameLocation": "4648:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "4641:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4587:87:0"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4725:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 306,
            "nodeType": "FunctionDefinition",
            "src": "4902:243:0",
            "nodes": [],
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "5048:97:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "5079:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 297,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "5087:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 295,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5058:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5058:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "5058:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 280,
                        "src": "5123:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 302,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "5131:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 300,
                      "name": "_createPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "5111:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) returns (struct Pair memory)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5111:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 304,
                  "nodeType": "Return",
                  "src": "5104:34:0"
                }
              ]
            },
            "baseFunctions": [
              4267
            ],
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "4849:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "c9c65396",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 285,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4981:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "4981:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4981:12:0"
              },
              {
                "id": 288,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 287,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4994:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "4994:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4994:13:0"
              },
              {
                "id": 290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 289,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "5008:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "5008:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5008:17:0"
              }
            ],
            "name": "createPair",
            "nameLocation": "4911:10:0",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "4937:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "4931:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 279,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 278,
                      "name": "Token",
                      "nameLocations": [
                        "4931:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4931:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4931:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "4959:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "4953:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 281,
                      "name": "Token",
                      "nameLocations": [
                        "4953:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "4953:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "4953:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4921:50:0"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "5035:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                    "typeString": "struct Pair"
                  },
                  "typeName": {
                    "id": 292,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 291,
                      "name": "Pair",
                      "nameLocations": [
                        "5035:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1098,
                      "src": "5035:4:0"
                    },
                    "referencedDeclaration": 1098,
                    "src": "5035:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                      "typeString": "struct Pair"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5034:13:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 320,
            "nodeType": "FunctionDefinition",
            "src": "5204:91:0",
            "nodes": [],
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "5263:32:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 316,
                      "name": "_pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1420,
                      "src": "5280:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (Token[2] memory[] memory)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5280:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr_$dyn_memory_ptr",
                      "typeString": "Token[2] memory[] memory"
                    }
                  },
                  "functionReturnParameters": 315,
                  "id": 318,
                  "nodeType": "Return",
                  "src": "5273:15:0"
                }
              ]
            },
            "baseFunctions": [
              4290
            ],
            "documentation": {
              "id": 307,
              "nodeType": "StructuredDocumentation",
              "src": "5151:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "ffb0a4a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairs",
            "nameLocation": "5213:5:0",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5218:2:0"
            },
            "returnParameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "5244:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr_$dyn_memory_ptr",
                    "typeString": "Token[2][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 310,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 309,
                          "name": "Token",
                          "nameLocations": [
                            "5244:5:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7445,
                          "src": "5244:5:0"
                        },
                        "referencedDeclaration": 7445,
                        "src": "5244:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      "id": 312,
                      "length": {
                        "hexValue": "32",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5250:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "5244:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_storage_ptr",
                        "typeString": "Token[2]"
                      }
                    },
                    "id": 313,
                    "nodeType": "ArrayTypeName",
                    "src": "5244:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_userDefinedValueType$_Token_$7445_$2_storage_$dyn_storage_ptr",
                      "typeString": "Token[2][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5243:19:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 344,
            "nodeType": "FunctionDefinition",
            "src": "5354:169:0",
            "nodes": [],
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "5432:91:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "5463:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 335,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "5471:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 333,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5442:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5442:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "5442:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 339,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "5501:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 340,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "5509:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 338,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "5495:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5495:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "functionReturnParameters": 332,
                  "id": 342,
                  "nodeType": "Return",
                  "src": "5488:28:0"
                }
              ]
            },
            "baseFunctions": [
              4280
            ],
            "documentation": {
              "id": 321,
              "nodeType": "StructuredDocumentation",
              "src": "5301:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "8672d545",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pair",
            "nameLocation": "5363:4:0",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "5374:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "5368:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 323,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 322,
                      "name": "Token",
                      "nameLocations": [
                        "5368:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5368:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5368:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "5388:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "5382:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 325,
                      "name": "Token",
                      "nameLocations": [
                        "5382:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5382:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5382:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5367:28:0"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "5419:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                    "typeString": "struct Pair"
                  },
                  "typeName": {
                    "id": 330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 329,
                      "name": "Pair",
                      "nameLocations": [
                        "5419:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1098,
                      "src": "5419:4:0"
                    },
                    "referencedDeclaration": 1098,
                    "src": "5419:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                      "typeString": "struct Pair"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5418:13:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 443,
            "nodeType": "FunctionDefinition",
            "src": "5625:908:0",
            "nodes": [],
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "5813:720:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 368,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "5844:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 369,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "5852:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 367,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5823:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5823:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "5823:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5913:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5917:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5913:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5925:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5913:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5930:18:0",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 376,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "5931:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                "typeString": "Token"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5938:8:0",
                            "memberName": "isNative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7537,
                            "src": "5931:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                              "typeString": "function (Token) pure returns (bool)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5931:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5913:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "5952:18:0",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 381,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "5953:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5960:8:0",
                          "memberName": "isNative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7537,
                          "src": "5953:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                            "typeString": "function (Token) pure returns (bool)"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5953:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5913:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 390,
                  "nodeType": "IfStatement",
                  "src": "5909:127:0",
                  "trueBody": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "5972:64:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 386,
                            "name": "UnnecessaryNativeTokenReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "5993:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5993:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 388,
                        "nodeType": "RevertStatement",
                        "src": "5986:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "6112:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      ],
                      "id": 391,
                      "name": "_validateOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4033,
                      "src": "6096:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr_$returns$__$",
                        "typeString": "function (struct Order calldata[2] calldata) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6096:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "6096:23:0"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "6190:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "6178:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 396,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 395,
                          "name": "Pair",
                          "nameLocations": [
                            "6178:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "6178:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "6178:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6178:24:0"
                },
                {
                  "condition": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6216:28:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 400,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "6229:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                            "typeString": "Token"
                          }
                        },
                        {
                          "id": 401,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 351,
                          "src": "6237:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                            "typeString": "Token"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                            "typeString": "Token"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                            "typeString": "Token"
                          }
                        ],
                        "id": 399,
                        "name": "_pairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1365,
                        "src": "6217:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$",
                          "typeString": "function (Token,Token) view returns (bool)"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6217:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "6319:61:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 412,
                            "name": "strategyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "6333:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                              "typeString": "struct Pair memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 414,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "6354:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              },
                              {
                                "id": 415,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "6362:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              ],
                              "id": 413,
                              "name": "_pair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1284,
                              "src": "6348:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                                "typeString": "function (Token,Token) view returns (struct Pair memory)"
                              }
                            },
                            "id": 416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6348:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                              "typeString": "struct Pair memory"
                            }
                          },
                          "src": "6333:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                            "typeString": "struct Pair memory"
                          }
                        },
                        "id": 418,
                        "nodeType": "ExpressionStatement",
                        "src": "6333:36:0"
                      }
                    ]
                  },
                  "id": 420,
                  "nodeType": "IfStatement",
                  "src": "6212:168:0",
                  "trueBody": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "6246:67:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 404,
                            "name": "strategyPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "6260:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                              "typeString": "struct Pair memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 406,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "6287:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              },
                              {
                                "id": 407,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "6295:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                },
                                {
                                  "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                  "typeString": "Token"
                                }
                              ],
                              "id": 405,
                              "name": "_createPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1232,
                              "src": "6275:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                                "typeString": "function (Token,Token) returns (struct Pair memory)"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6275:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                              "typeString": "struct Pair memory"
                            }
                          },
                          "src": "6260:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                            "typeString": "struct Pair memory"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "6260:42:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 426,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "6406:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 442,
                      "src": "6390:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                        "typeString": "Token[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 424,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 423,
                            "name": "Token",
                            "nameLocations": [
                              "6390:5:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7445,
                            "src": "6390:5:0"
                          },
                          "referencedDeclaration": 7445,
                          "src": "6390:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                            "typeString": "Token"
                          }
                        },
                        "id": 425,
                        "length": {
                          "hexValue": "32",
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6396:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "6390:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_storage_ptr",
                          "typeString": "Token[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "components": [
                      {
                        "id": 427,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "6416:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 428,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "6424:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "id": 429,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6415:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                      "typeString": "Token[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6390:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 432,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "6464:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        }
                      },
                      {
                        "id": 433,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "6474:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                          "typeString": "Token[2] memory"
                        }
                      },
                      {
                        "id": 434,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "6482:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      },
                      {
                        "id": 435,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6490:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 436,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6504:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6508:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6504:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6516:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6520:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6516:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        },
                        {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                          "typeString": "Token[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 431,
                      "name": "_createStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1885,
                      "src": "6448:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IVoucher_$10500_$_t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr_$_t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr_$_t_struct$_Pair_$1098_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IVoucher,Token[2] memory,struct Order calldata[2] calldata,struct Pair memory,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6448:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 366,
                  "id": 441,
                  "nodeType": "Return",
                  "src": "6441:85:0"
                }
              ]
            },
            "baseFunctions": [
              4307
            ],
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "5572:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "f727473a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 358,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5750:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "5750:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5750:12:0"
              },
              {
                "id": 361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 360,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5763:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "5763:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5763:13:0"
              },
              {
                "id": 363,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 362,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "5777:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "5777:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5777:17:0"
              }
            ],
            "name": "createStrategy",
            "nameLocation": "5634:14:0",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "5664:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5658:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 347,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 346,
                      "name": "Token",
                      "nameLocations": [
                        "5658:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5658:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5658:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "5686:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5680:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 350,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 349,
                      "name": "Token",
                      "nameLocations": [
                        "5680:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "5680:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "5680:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "orders",
                  "nameLocation": "5720:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5702:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 353,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 352,
                        "name": "Order",
                        "nameLocations": [
                          "5702:5:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "5702:5:0"
                      },
                      "referencedDeclaration": 1491,
                      "src": "5702:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 355,
                    "length": {
                      "hexValue": "32",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5708:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5702:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:84:0"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5804:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5803:9:0"
            },
            "scope": 1082,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 527,
            "nodeType": "FunctionDefinition",
            "src": "6592:876:0",
            "nodes": [],
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "6790:678:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "6812:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 526,
                      "src": "6800:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 466,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 465,
                          "name": "Pair",
                          "nameLocations": [
                            "6800:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "6800:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "6800:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 473,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 470,
                            "name": "strategyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "6857:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 469,
                          "name": "_pairIdByStrategyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4070,
                          "src": "6837:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6837:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 468,
                      "name": "_pairById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "6827:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (uint128) view returns (struct Pair memory)"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6827:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6800:69:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 474,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6950:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6954:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6950:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 478,
                          "name": "strategyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "6981:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 476,
                          "name": "_voucher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "6964:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVoucher_$10500",
                            "typeString": "contract IVoucher"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6973:7:0",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55040,
                        "src": "6964:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6964:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6950:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 485,
                  "nodeType": "IfStatement",
                  "src": "6946:94:0",
                  "trueBody": {
                    "id": 484,
                    "nodeType": "Block",
                    "src": "6994:46:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 481,
                            "name": "AccessDenied",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9015,
                            "src": "7015:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7015:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 483,
                        "nodeType": "RevertStatement",
                        "src": "7008:21:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 486,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7093:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7097:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7093:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7105:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7093:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7110:34:0",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 490,
                                  "name": "strategyPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 467,
                                  "src": "7111:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                                    "typeString": "struct Pair memory"
                                  }
                                },
                                "id": 491,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7124:6:0",
                                "memberName": "tokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1097,
                                "src": "7111:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                                  "typeString": "Token[2] memory"
                                }
                              },
                              "id": 493,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7131:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7111:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                                "typeString": "Token"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7134:8:0",
                            "memberName": "isNative",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7537,
                            "src": "7111:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                              "typeString": "function (Token) pure returns (bool)"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7111:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7093:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "7148:34:0",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "id": 498,
                                "name": "strategyPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 467,
                                "src": "7149:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                                  "typeString": "struct Pair memory"
                                }
                              },
                              "id": 499,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7162:6:0",
                              "memberName": "tokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1097,
                              "src": "7149:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_userDefinedValueType$_Token_$7445_$2_memory_ptr",
                                "typeString": "Token[2] memory"
                              }
                            },
                            "id": 501,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7169:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7149:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7172:8:0",
                          "memberName": "isNative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7537,
                          "src": "7149:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                            "typeString": "function (Token) pure returns (bool)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7149:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7093:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "IfStatement",
                  "src": "7089:159:0",
                  "trueBody": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "7184:64:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 506,
                            "name": "UnnecessaryNativeTokenReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "7205:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7205:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 508,
                        "nodeType": "RevertStatement",
                        "src": "7198:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 512,
                        "name": "newOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "7324:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      ],
                      "id": 511,
                      "name": "_validateOrders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4033,
                      "src": "7308:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr_$returns$__$",
                        "typeString": "function (struct Order calldata[2] calldata) pure"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7308:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "7308:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 516,
                        "name": "strategyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "7387:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 517,
                        "name": "currentOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "7399:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      },
                      {
                        "id": 518,
                        "name": "newOrders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 456,
                        "src": "7414:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        }
                      },
                      {
                        "id": 519,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "7425:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 520,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7439:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7443:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7439:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7451:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7455:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7451:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                          "typeString": "struct Order calldata[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 515,
                      "name": "_updateStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2154,
                      "src": "7371:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr_$_t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr_$_t_struct$_Pair_$1098_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct Order calldata[2] calldata,struct Order calldata[2] calldata,struct Pair memory,address,uint256)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7371:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "7371:90:0"
                }
              ]
            },
            "baseFunctions": [
              4323
            ],
            "documentation": {
              "id": 444,
              "nodeType": "StructuredDocumentation",
              "src": "6539:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "21589fa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 459,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 458,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6745:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "6745:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6745:12:0"
              },
              {
                "id": 461,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 460,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6758:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "6758:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6758:13:0"
              },
              {
                "id": 463,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 462,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "6772:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "6772:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6772:17:0"
              }
            ],
            "name": "updateStrategy",
            "nameLocation": "6601:14:0",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "6633:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6625:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6625:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 451,
                  "mutability": "mutable",
                  "name": "currentOrders",
                  "nameLocation": "6671:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6653:31:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 448,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 447,
                        "name": "Order",
                        "nameLocations": [
                          "6653:5:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "6653:5:0"
                      },
                      "referencedDeclaration": 1491,
                      "src": "6653:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 450,
                    "length": {
                      "hexValue": "32",
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6659:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6653:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "newOrders",
                  "nameLocation": "6712:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "6694:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$1491_calldata_ptr_$2_calldata_ptr",
                    "typeString": "struct Order[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 453,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 452,
                        "name": "Order",
                        "nameLocations": [
                          "6694:5:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1491,
                        "src": "6694:5:0"
                      },
                      "referencedDeclaration": 1491,
                      "src": "6694:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$1491_storage_ptr",
                        "typeString": "struct Order"
                      }
                    },
                    "id": 455,
                    "length": {
                      "hexValue": "32",
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6700:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6694:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$1491_storage_$2_storage_ptr",
                      "typeString": "struct Order[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6615:112:0"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6790:0:0"
            },
            "scope": 1082,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 567,
            "nodeType": "FunctionDefinition",
            "src": "7569:485:0",
            "nodes": [],
            "body": {
              "id": 566,
              "nodeType": "Block",
              "src": "7667:387:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "7731:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 566,
                      "src": "7719:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 540,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 539,
                          "name": "Pair",
                          "nameLocations": [
                            "7719:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "7719:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "7719:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 547,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 544,
                            "name": "strategyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "7776:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 543,
                          "name": "_pairIdByStrategyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4070,
                          "src": "7756:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7756:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 542,
                      "name": "_pairById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "7746:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (uint128) view returns (struct Pair memory)"
                      }
                    },
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7746:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7719:69:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 548,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7869:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7873:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7869:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 552,
                          "name": "strategyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "7900:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 550,
                          "name": "_voucher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "7883:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVoucher_$10500",
                            "typeString": "contract IVoucher"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7892:7:0",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55040,
                        "src": "7883:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7883:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7869:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 559,
                  "nodeType": "IfStatement",
                  "src": "7865:94:0",
                  "trueBody": {
                    "id": 558,
                    "nodeType": "Block",
                    "src": "7913:46:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 555,
                            "name": "AccessDenied",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9015,
                            "src": "7934:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7934:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "RevertStatement",
                        "src": "7927:21:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 561,
                        "name": "strategyId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "8012:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 562,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "8024:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        }
                      },
                      {
                        "id": 563,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "8034:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      ],
                      "id": 560,
                      "name": "_deleteStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2255,
                      "src": "7996:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_IVoucher_$10500_$_t_struct$_Pair_$1098_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,contract IVoucher,struct Pair memory)"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7996:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "ExpressionStatement",
                  "src": "7996:51:0"
                }
              ]
            },
            "baseFunctions": [
              4329
            ],
            "documentation": {
              "id": 528,
              "nodeType": "StructuredDocumentation",
              "src": "7516:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "87302037",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 532,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7622:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "7622:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7622:12:0"
              },
              {
                "id": 535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 534,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "7635:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "7635:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7635:13:0"
              },
              {
                "id": 537,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 536,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "7649:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "7649:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7649:17:0"
              }
            ],
            "name": "deleteStrategy",
            "nameLocation": "7578:14:0",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "strategyId",
                  "nameLocation": "7601:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "7593:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7593:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7592:20:0"
            },
            "returnParameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7667:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 592,
            "nodeType": "FunctionDefinition",
            "src": "8113:202:0",
            "nodes": [],
            "body": {
              "id": 591,
              "nodeType": "Block",
              "src": "8183:132:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "8205:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "8193:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 577,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 576,
                          "name": "Pair",
                          "nameLocations": [
                            "8193:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "8193:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "8193:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 584,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 581,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "8250:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 580,
                          "name": "_pairIdByStrategyId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4070,
                          "src": "8230:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8230:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 579,
                      "name": "_pairById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "8220:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint128_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (uint128) view returns (struct Pair memory)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8220:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8193:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 586,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 570,
                        "src": "8281:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 587,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "8285:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        }
                      },
                      {
                        "id": 588,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "8295:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      ],
                      "id": 585,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3071,
                      "src": "8271:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_contract$_IVoucher_$10500_$_t_struct$_Pair_$1098_memory_ptr_$returns$_t_struct$_Strategy_$1513_memory_ptr_$",
                        "typeString": "function (uint256,contract IVoucher,struct Pair memory) view returns (struct Strategy memory)"
                      }
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8271:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Strategy_$1513_memory_ptr",
                      "typeString": "struct Strategy memory"
                    }
                  },
                  "functionReturnParameters": 575,
                  "id": 590,
                  "nodeType": "Return",
                  "src": "8264:44:0"
                }
              ]
            },
            "baseFunctions": [
              4338
            ],
            "documentation": {
              "id": 568,
              "nodeType": "StructuredDocumentation",
              "src": "8060:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "bc88d7e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategy",
            "nameLocation": "8122:8:0",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 570,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8139:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "8131:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8131:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8130:12:0"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 592,
                  "src": "8166:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Strategy_$1513_memory_ptr",
                    "typeString": "struct Strategy"
                  },
                  "typeName": {
                    "id": 573,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 572,
                      "name": "Strategy",
                      "nameLocations": [
                        "8166:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1513,
                      "src": "8166:8:0"
                    },
                    "referencedDeclaration": 1513,
                    "src": "8166:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Strategy_$1513_storage_ptr",
                      "typeString": "struct Strategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8165:17:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 631,
            "nodeType": "FunctionDefinition",
            "src": "8374:364:0",
            "nodes": [],
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "8546:192:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 611,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "8577:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 612,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "8585:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 610,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "8556:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8556:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "8556:36:0"
                },
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "8615:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "8603:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 615,
                          "name": "Pair",
                          "nameLocations": [
                            "8603:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "8603:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "8603:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 622,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 619,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "8636:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 620,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "8644:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 618,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "8630:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8630:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8603:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 624,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "8686:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "id": 625,
                        "name": "startIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "8700:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 626,
                        "name": "endIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "8712:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 627,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "8722:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoucher_$10500",
                          "typeString": "contract IVoucher"
                        }
                      ],
                      "id": 623,
                      "name": "_strategiesByPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2984,
                      "src": "8668:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Pair_$1098_memory_ptr_$_t_uint256_$_t_uint256_$_t_contract$_IVoucher_$10500_$returns$_t_array$_t_struct$_Strategy_$1513_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Pair memory,uint256,uint256,contract IVoucher) view returns (struct Strategy memory[] memory)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8668:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Strategy_$1513_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Strategy memory[] memory"
                    }
                  },
                  "functionReturnParameters": 609,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "8661:70:0"
                }
              ]
            },
            "baseFunctions": [
              4356
            ],
            "documentation": {
              "id": 593,
              "nodeType": "StructuredDocumentation",
              "src": "8321:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "f74dad81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategiesByPair",
            "nameLocation": "8383:16:0",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "8415:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "8409:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 594,
                      "name": "Token",
                      "nameLocations": [
                        "8409:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "8409:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "8409:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "8437:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "8431:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 598,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 597,
                      "name": "Token",
                      "nameLocations": [
                        "8431:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "8431:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "8431:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "8461:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "8453:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8453:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "endIndex",
                  "nameLocation": "8489:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "8481:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8399:104:0"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "8527:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Strategy_$1513_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Strategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 606,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 605,
                        "name": "Strategy",
                        "nameLocations": [
                          "8527:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1513,
                        "src": "8527:8:0"
                      },
                      "referencedDeclaration": 1513,
                      "src": "8527:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Strategy_$1513_storage_ptr",
                        "typeString": "struct Strategy"
                      }
                    },
                    "id": 607,
                    "nodeType": "ArrayTypeName",
                    "src": "8527:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Strategy_$1513_storage_$dyn_storage_ptr",
                      "typeString": "struct Strategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:19:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 661,
            "nodeType": "FunctionDefinition",
            "src": "8797:256:0",
            "nodes": [],
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "8888:165:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 644,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "8919:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 645,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "8927:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 643,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "8898:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8898:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "8898:36:0"
                },
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "8957:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 660,
                      "src": "8945:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 648,
                          "name": "Pair",
                          "nameLocations": [
                            "8945:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "8945:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "8945:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 655,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 652,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "8978:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 653,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "8986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 651,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "8972:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8972:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8945:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 657,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "9033:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      ],
                      "id": 656,
                      "name": "_strategiesByPairCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3008,
                      "src": "9010:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Pair_$1098_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Pair memory) view returns (uint256)"
                      }
                    },
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 642,
                  "id": 659,
                  "nodeType": "Return",
                  "src": "9003:43:0"
                }
              ]
            },
            "baseFunctions": [
              4368
            ],
            "documentation": {
              "id": 632,
              "nodeType": "StructuredDocumentation",
              "src": "8744:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "322cf844",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategiesByPairCount",
            "nameLocation": "8806:21:0",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "8834:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "8828:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 634,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 633,
                      "name": "Token",
                      "nameLocations": [
                        "8828:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "8828:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "8828:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "8848:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "8842:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 637,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 636,
                      "name": "Token",
                      "nameLocations": [
                        "8842:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "8842:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "8842:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8827:28:0"
            },
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "8879:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8879:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8878:9:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 732,
            "nodeType": "FunctionDefinition",
            "src": "9112:854:0",
            "nodes": [],
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "9379:587:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 688,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "9410:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 689,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "9423:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 690,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 674,
                        "src": "9436:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 691,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9446:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9450:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9446:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 693,
                        "name": "minReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "9457:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 687,
                      "name": "_validateTradeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "9389:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$_t_uint256_$_t_uint256_$_t_uint128_$returns$__$",
                        "typeString": "function (Token,Token,uint256,uint256,uint128) view"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9389:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "9389:78:0"
                },
                {
                  "assignments": [
                    698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 698,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "9489:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 731,
                      "src": "9477:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 697,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 696,
                          "name": "Pair",
                          "nameLocations": [
                            "9477:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "9477:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "9477:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 703,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 700,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "9503:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 701,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 668,
                        "src": "9516:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 699,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "9497:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9497:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9477:51:0"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "9557:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 731,
                      "src": "9538:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                        "typeString": "struct Strategies.TradeParams"
                      },
                      "typeName": {
                        "id": 705,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 704,
                          "name": "TradeParams",
                          "nameLocations": [
                            "9538:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1588,
                          "src": "9538:11:0"
                        },
                        "referencedDeclaration": 1588,
                        "src": "9538:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_storage_ptr",
                          "typeString": "struct Strategies.TradeParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 708,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9600:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9604:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9600:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 711,
                            "name": "sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "9654:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          },
                          {
                            "id": 712,
                            "name": "targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "9675:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          ],
                          "id": 710,
                          "name": "TradeTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1498,
                          "src": "9632:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokens_$1498_storage_ptr_$",
                            "typeString": "type(struct TradeTokens storage pointer)"
                          }
                        },
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "9646:6:0",
                          "9667:6:0"
                        ],
                        "names": [
                          "source",
                          "target"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9632:57:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9719:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 715,
                        "name": "minReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "9750:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 716,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9782:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9786:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9782:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 718,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "9811:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9844:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9873:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 707,
                      "name": "TradeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "9566:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TradeParams_$1588_storage_ptr_$",
                        "typeString": "type(struct Strategies.TradeParams storage pointer)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "9592:6:0",
                      "9624:6:0",
                      "9703:14:0",
                      "9738:10:0",
                      "9773:7:0",
                      "9805:4:0",
                      "9830:12:0",
                      "9859:12:0"
                    ],
                    "names": [
                      "trader",
                      "tokens",
                      "byTargetAmount",
                      "constraint",
                      "txValue",
                      "pair",
                      "sourceAmount",
                      "targetAmount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "9566:319:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                      "typeString": "struct Strategies.TradeParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9538:347:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 724,
                        "name": "tradeActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 672,
                        "src": "9902:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        }
                      },
                      {
                        "id": 725,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "9916:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                          "typeString": "struct Strategies.TradeParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                          "typeString": "struct Strategies.TradeParams memory"
                        }
                      ],
                      "id": 723,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2645,
                      "src": "9895:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr_$_t_struct$_TradeParams_$1588_memory_ptr_$returns$__$",
                        "typeString": "function (struct TradeAction calldata[] calldata,struct Strategies.TradeParams memory)"
                      }
                    },
                    "id": 726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9895:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 727,
                  "nodeType": "ExpressionStatement",
                  "src": "9895:28:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 728,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "9940:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                        "typeString": "struct Strategies.TradeParams memory"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9947:12:0",
                    "memberName": "targetAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1587,
                    "src": "9940:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 686,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "9933:26:0"
                }
              ]
            },
            "baseFunctions": [
              4388
            ],
            "documentation": {
              "id": 662,
              "nodeType": "StructuredDocumentation",
              "src": "9059:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "f1c5e014",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 678,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "9316:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "9316:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9316:12:0"
              },
              {
                "id": 681,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 680,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "9329:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "9329:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9329:13:0"
              },
              {
                "id": 683,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 682,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "9343:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "9343:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9343:17:0"
              }
            ],
            "name": "tradeBySourceAmount",
            "nameLocation": "9121:19:0",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "9156:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9150:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 664,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 663,
                      "name": "Token",
                      "nameLocations": [
                        "9150:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "9150:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "9150:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "9183:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9177:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 667,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 666,
                      "name": "Token",
                      "nameLocations": [
                        "9177:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "9177:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "9177:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "9227:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9204:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 670,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 669,
                        "name": "TradeAction",
                        "nameLocations": [
                          "9204:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "9204:11:0"
                      },
                      "referencedDeclaration": 1518,
                      "src": "9204:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 671,
                    "nodeType": "ArrayTypeName",
                    "src": "9204:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "9257:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9249:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9249:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 676,
                  "mutability": "mutable",
                  "name": "minReturn",
                  "nameLocation": "9283:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9275:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 675,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9275:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9140:158:0"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "9370:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9369:9:0"
            },
            "scope": 1082,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 817,
            "nodeType": "FunctionDefinition",
            "src": "10025:1073:0",
            "nodes": [],
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "10291:807:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 759,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "10322:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 760,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "10335:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 761,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "10348:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 762,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10358:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10362:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10358:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 764,
                        "name": "maxInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "10369:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 758,
                      "name": "_validateTradeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "10301:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$_t_uint256_$_t_uint256_$_t_uint128_$returns$__$",
                        "typeString": "function (Token,Token,uint256,uint256,uint128) view"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10301:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "10301:77:0"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 767,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "10393:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10405:8:0",
                      "memberName": "isNative",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7537,
                      "src": "10393:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                        "typeString": "function (Token) pure returns (bool)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10393:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 780,
                  "nodeType": "IfStatement",
                  "src": "10389:212:0",
                  "trueBody": {
                    "id": 779,
                    "nodeType": "Block",
                    "src": "10417:184:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 770,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10496:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10500:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "10496:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 772,
                            "name": "maxInput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "10508:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "10496:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 778,
                        "nodeType": "IfStatement",
                        "src": "10492:99:0",
                        "trueBody": {
                          "id": 777,
                          "nodeType": "Block",
                          "src": "10518:73:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 774,
                                  "name": "InsufficientNativeTokenReceived",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "10543:31:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10543:33:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 776,
                              "nodeType": "RevertStatement",
                              "src": "10536:40:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "_pair",
                      "nameLocation": "10623:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 816,
                      "src": "10611:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 782,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 781,
                          "name": "Pair",
                          "nameLocations": [
                            "10611:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "10611:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "10611:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 785,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "10637:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 786,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "10650:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 784,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "10631:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10631:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10611:51:0"
                },
                {
                  "assignments": [
                    791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "10691:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 816,
                      "src": "10672:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                        "typeString": "struct Strategies.TradeParams"
                      },
                      "typeName": {
                        "id": 790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 789,
                          "name": "TradeParams",
                          "nameLocations": [
                            "10672:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1588,
                          "src": "10672:11:0"
                        },
                        "referencedDeclaration": 1588,
                        "src": "10672:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_storage_ptr",
                          "typeString": "struct Strategies.TradeParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 807,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 793,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10734:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10738:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10734:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 796,
                            "name": "sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 736,
                            "src": "10788:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          },
                          {
                            "id": 797,
                            "name": "targetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "10809:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            },
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          ],
                          "id": 795,
                          "name": "TradeTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1498,
                          "src": "10766:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TradeTokens_$1498_storage_ptr_$",
                            "typeString": "type(struct TradeTokens storage pointer)"
                          }
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "10780:6:0",
                          "10801:6:0"
                        ],
                        "names": [
                          "source",
                          "target"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "10766:57:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10853:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 800,
                        "name": "maxInput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "10883:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "id": 801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10914:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10918:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10914:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 803,
                        "name": "_pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "10943:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10976:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11005:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 792,
                      "name": "TradeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "10700:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TradeParams_$1588_storage_ptr_$",
                        "typeString": "type(struct Strategies.TradeParams storage pointer)"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "10726:6:0",
                      "10758:6:0",
                      "10837:14:0",
                      "10871:10:0",
                      "10905:7:0",
                      "10937:4:0",
                      "10962:12:0",
                      "10991:12:0"
                    ],
                    "names": [
                      "trader",
                      "tokens",
                      "byTargetAmount",
                      "constraint",
                      "txValue",
                      "pair",
                      "sourceAmount",
                      "targetAmount"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "10700:317:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                      "typeString": "struct Strategies.TradeParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10672:345:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 809,
                        "name": "tradeActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "11034:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        }
                      },
                      {
                        "id": 810,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 791,
                        "src": "11048:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                          "typeString": "struct Strategies.TradeParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                          "typeString": "struct Strategies.TradeParams memory"
                        }
                      ],
                      "id": 808,
                      "name": "_trade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2645,
                      "src": "11027:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr_$_t_struct$_TradeParams_$1588_memory_ptr_$returns$__$",
                        "typeString": "function (struct TradeAction calldata[] calldata,struct Strategies.TradeParams memory)"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11027:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "11027:28:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 813,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 791,
                      "src": "11072:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeParams_$1588_memory_ptr",
                        "typeString": "struct Strategies.TradeParams memory"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11079:12:0",
                    "memberName": "sourceAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1585,
                    "src": "11072:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 757,
                  "id": 815,
                  "nodeType": "Return",
                  "src": "11065:26:0"
                }
              ]
            },
            "baseFunctions": [
              4408
            ],
            "documentation": {
              "id": 733,
              "nodeType": "StructuredDocumentation",
              "src": "9972:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "102ee9ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 750,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 749,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10228:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "10228:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10228:12:0"
              },
              {
                "id": 752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 751,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "10241:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "10241:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10241:13:0"
              },
              {
                "id": 754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 753,
                  "name": "onlyProxyDelegate",
                  "nameLocations": [
                    "10255:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8833,
                  "src": "10255:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10255:17:0"
              }
            ],
            "name": "tradeByTargetAmount",
            "nameLocation": "10034:19:0",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "10069:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10063:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 735,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 734,
                      "name": "Token",
                      "nameLocations": [
                        "10063:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "10063:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "10063:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "10096:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10090:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 737,
                      "name": "Token",
                      "nameLocations": [
                        "10090:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "10090:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "10090:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "10140:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10117:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 741,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 740,
                        "name": "TradeAction",
                        "nameLocations": [
                          "10117:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "10117:11:0"
                      },
                      "referencedDeclaration": 1518,
                      "src": "10117:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 742,
                    "nodeType": "ArrayTypeName",
                    "src": "10117:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "10170:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10162:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10162:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "maxInput",
                  "nameLocation": "10196:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10188:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "10188:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10053:157:0"
            },
            "returnParameters": {
              "id": 757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "10282:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "10282:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10281:9:0"
            },
            "scope": 1082,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 868,
            "nodeType": "FunctionDefinition",
            "src": "11157:556:0",
            "nodes": [],
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "11330:383:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 834,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "11361:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 835,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "11374:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 833,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "11340:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11340:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "11340:46:0"
                },
                {
                  "assignments": [
                    840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 840,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "11408:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "11396:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 838,
                          "name": "Pair",
                          "nameLocations": [
                            "11396:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "11396:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "11396:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 845,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 842,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "11429:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 843,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "11442:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 841,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "11423:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11423:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11396:58:0"
                },
                {
                  "assignments": [
                    848
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 848,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "11483:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "11464:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                        "typeString": "struct TradeTokens"
                      },
                      "typeName": {
                        "id": 847,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 846,
                          "name": "TradeTokens",
                          "nameLocations": [
                            "11464:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1498,
                          "src": "11464:11:0"
                        },
                        "referencedDeclaration": 1498,
                        "src": "11464:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_storage_ptr",
                          "typeString": "struct TradeTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 853,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 850,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "11514:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 851,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 824,
                        "src": "11535:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 849,
                      "name": "TradeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "11492:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TradeTokens_$1498_storage_ptr_$",
                        "typeString": "type(struct TradeTokens storage pointer)"
                      }
                    },
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11506:6:0",
                      "11527:6:0"
                    ],
                    "names": [
                      "source",
                      "target"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11492:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                      "typeString": "struct TradeTokens memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11464:85:0"
                },
                {
                  "assignments": [
                    856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "11589:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "11559:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                        "typeString": "struct Strategies.SourceAndTargetAmounts"
                      },
                      "typeName": {
                        "id": 855,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 854,
                          "name": "SourceAndTargetAmounts",
                          "nameLocations": [
                            "11559:22:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1569,
                          "src": "11559:22:0"
                        },
                        "referencedDeclaration": 1569,
                        "src": "11559:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_storage_ptr",
                          "typeString": "struct Strategies.SourceAndTargetAmounts"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 863,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 858,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "11628:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        }
                      },
                      {
                        "id": 859,
                        "name": "tradeActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "11636:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        }
                      },
                      {
                        "id": 860,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "11650:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11664:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 857,
                      "name": "_tradeSourceAndTargetAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2874,
                      "src": "11599:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_TradeTokens_$1498_memory_ptr_$_t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr_$_t_struct$_Pair_$1098_memory_ptr_$_t_bool_$returns$_t_struct$_SourceAndTargetAmounts_$1569_memory_ptr_$",
                        "typeString": "function (struct TradeTokens memory,struct TradeAction calldata[] calldata,struct Pair memory,bool) view returns (struct Strategies.SourceAndTargetAmounts memory)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11599:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                      "typeString": "struct Strategies.SourceAndTargetAmounts memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11559:110:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 864,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "11686:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                        "typeString": "struct Strategies.SourceAndTargetAmounts memory"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11694:12:0",
                    "memberName": "sourceAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1566,
                    "src": "11686:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 832,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "11679:27:0"
                }
              ]
            },
            "baseFunctions": [
              4424
            ],
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "11104:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "f2bda26d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTradeSourceAmount",
            "nameLocation": "11166:26:0",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "11208:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "11202:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 819,
                      "name": "Token",
                      "nameLocations": [
                        "11202:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "11202:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "11202:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "11235:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "11229:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 823,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 822,
                      "name": "Token",
                      "nameLocations": [
                        "11229:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "11229:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "11229:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "11279:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "11256:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 826,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 825,
                        "name": "TradeAction",
                        "nameLocations": [
                          "11256:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "11256:11:0"
                      },
                      "referencedDeclaration": 1518,
                      "src": "11256:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 827,
                    "nodeType": "ArrayTypeName",
                    "src": "11256:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11192:105:0"
            },
            "returnParameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "11321:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11320:9:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 919,
            "nodeType": "FunctionDefinition",
            "src": "11772:557:0",
            "nodes": [],
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "11945:384:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 885,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "11976:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 886,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "11989:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 884,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "11955:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11955:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "11955:46:0"
                },
                {
                  "assignments": [
                    891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "strategyPair",
                      "nameLocation": "12023:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 918,
                      "src": "12011:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                        "typeString": "struct Pair"
                      },
                      "typeName": {
                        "id": 890,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 889,
                          "name": "Pair",
                          "nameLocations": [
                            "12011:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1098,
                          "src": "12011:4:0"
                        },
                        "referencedDeclaration": 1098,
                        "src": "12011:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_storage_ptr",
                          "typeString": "struct Pair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 896,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 893,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "12044:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 894,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "12057:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 892,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "12038:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$_t_struct$_Pair_$1098_memory_ptr_$",
                        "typeString": "function (Token,Token) view returns (struct Pair memory)"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12038:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                      "typeString": "struct Pair memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12011:58:0"
                },
                {
                  "assignments": [
                    899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 899,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "12098:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 918,
                      "src": "12079:25:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                        "typeString": "struct TradeTokens"
                      },
                      "typeName": {
                        "id": 898,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 897,
                          "name": "TradeTokens",
                          "nameLocations": [
                            "12079:11:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1498,
                          "src": "12079:11:0"
                        },
                        "referencedDeclaration": 1498,
                        "src": "12079:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_storage_ptr",
                          "typeString": "struct TradeTokens"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 901,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "12129:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 902,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "12150:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 900,
                      "name": "TradeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "12107:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_TradeTokens_$1498_storage_ptr_$",
                        "typeString": "type(struct TradeTokens storage pointer)"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "12121:6:0",
                      "12142:6:0"
                    ],
                    "names": [
                      "source",
                      "target"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "12107:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                      "typeString": "struct TradeTokens memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12079:85:0"
                },
                {
                  "assignments": [
                    907
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 907,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "12204:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 918,
                      "src": "12174:37:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                        "typeString": "struct Strategies.SourceAndTargetAmounts"
                      },
                      "typeName": {
                        "id": 906,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 905,
                          "name": "SourceAndTargetAmounts",
                          "nameLocations": [
                            "12174:22:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1569,
                          "src": "12174:22:0"
                        },
                        "referencedDeclaration": 1569,
                        "src": "12174:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_storage_ptr",
                          "typeString": "struct Strategies.SourceAndTargetAmounts"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 914,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 909,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "12243:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        }
                      },
                      {
                        "id": 910,
                        "name": "tradeActions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "12251:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        }
                      },
                      {
                        "id": 911,
                        "name": "strategyPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "12265:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12279:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TradeTokens_$1498_memory_ptr",
                          "typeString": "struct TradeTokens memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct TradeAction calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$1098_memory_ptr",
                          "typeString": "struct Pair memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 908,
                      "name": "_tradeSourceAndTargetAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2874,
                      "src": "12214:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_TradeTokens_$1498_memory_ptr_$_t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr_$_t_struct$_Pair_$1098_memory_ptr_$_t_bool_$returns$_t_struct$_SourceAndTargetAmounts_$1569_memory_ptr_$",
                        "typeString": "function (struct TradeTokens memory,struct TradeAction calldata[] calldata,struct Pair memory,bool) view returns (struct Strategies.SourceAndTargetAmounts memory)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12214:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                      "typeString": "struct Strategies.SourceAndTargetAmounts memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12174:111:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 915,
                      "name": "amounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "12302:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SourceAndTargetAmounts_$1569_memory_ptr",
                        "typeString": "struct Strategies.SourceAndTargetAmounts memory"
                      }
                    },
                    "id": 916,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12310:12:0",
                    "memberName": "targetAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1568,
                    "src": "12302:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 917,
                  "nodeType": "Return",
                  "src": "12295:27:0"
                }
              ]
            },
            "baseFunctions": [
              4440
            ],
            "documentation": {
              "id": 869,
              "nodeType": "StructuredDocumentation",
              "src": "11719:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "2ab2fad1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTradeTargetAmount",
            "nameLocation": "11781:26:0",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "11823:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11817:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 870,
                      "name": "Token",
                      "nameLocations": [
                        "11817:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "11817:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "11817:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "11850:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11844:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 874,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 873,
                      "name": "Token",
                      "nameLocations": [
                        "11844:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "11844:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "11844:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "tradeActions",
                  "nameLocation": "11894:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11871:35:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct TradeAction[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 877,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 876,
                        "name": "TradeAction",
                        "nameLocations": [
                          "11871:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1518,
                        "src": "11871:11:0"
                      },
                      "referencedDeclaration": 1518,
                      "src": "11871:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TradeAction_$1518_storage_ptr",
                        "typeString": "struct TradeAction"
                      }
                    },
                    "id": 878,
                    "nodeType": "ArrayTypeName",
                    "src": "11871:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_TradeAction_$1518_storage_$dyn_storage_ptr",
                      "typeString": "struct TradeAction[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11807:105:0"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11936:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "11936:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11935:9:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 939,
            "nodeType": "FunctionDefinition",
            "src": "12388:151:0",
            "nodes": [],
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "12492:47:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 934,
                      "name": "_accumulatedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "12509:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_userDefinedValueType$_Token_$7445_$_t_uint256_$",
                        "typeString": "mapping(Token => uint256)"
                      }
                    },
                    "id": 936,
                    "indexExpression": {
                      "id": 935,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "12526:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                        "typeString": "Token"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12509:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "12502:30:0"
                }
              ]
            },
            "baseFunctions": [
              4449
            ],
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "12335:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "fcf66664",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 928,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "12466:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "expression": {
                        "id": 926,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "12453:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Token_$7445_$",
                          "typeString": "type(Token)"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12459:6:0",
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "src": "12453:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_address_$",
                        "typeString": "function (Token) pure returns (address)"
                      }
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12453:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 925,
                  "name": "validAddress",
                  "nameLocations": [
                    "12440:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9061,
                  "src": "12440:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12440:33:0"
              }
            ],
            "name": "accumulatedFees",
            "nameLocation": "12397:15:0",
            "parameters": {
              "id": 924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 923,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12419:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "12413:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 922,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 921,
                      "name": "Token",
                      "nameLocations": [
                        "12413:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "12413:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "12413:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12412:13:0"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "12483:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12483:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12482:9:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 980,
            "nodeType": "FunctionDefinition",
            "src": "12598:413:0",
            "nodes": [],
            "body": {
              "id": 979,
              "nodeType": "Block",
              "src": "12936:75:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 972,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12967:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12971:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12967:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 974,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "12979:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 975,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "12987:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 976,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "12994:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 971,
                      "name": "_withdrawFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4133,
                      "src": "12953:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_Token_$7445_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,Token,address) returns (uint256)"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12953:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 970,
                  "id": 978,
                  "nodeType": "Return",
                  "src": "12946:58:0"
                }
              ]
            },
            "baseFunctions": [
              4462
            ],
            "documentation": {
              "id": 940,
              "nodeType": "StructuredDocumentation",
              "src": "12545:48:0",
              "text": " @inheritdoc ICarbonController"
            },
            "functionSelector": "9ba372c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 949,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "12723:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53859,
                  "src": "12723:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12723:13:0"
              },
              {
                "arguments": [
                  {
                    "id": 952,
                    "name": "ROLE_FEES_MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58,
                    "src": "12760:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 953,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 951,
                  "name": "onlyRoleMember",
                  "nameLocations": [
                    "12745:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8936,
                  "src": "12745:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12745:33:0"
              },
              {
                "arguments": [
                  {
                    "id": 955,
                    "name": "recipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 947,
                    "src": "12800:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 954,
                  "name": "validAddress",
                  "nameLocations": [
                    "12787:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9061,
                  "src": "12787:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12787:23:0"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "12845:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "expression": {
                        "id": 958,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "12832:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Token_$7445_$",
                          "typeString": "type(Token)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12838:6:0",
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "src": "12832:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_address_$",
                        "typeString": "function (Token) pure returns (address)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12832:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 962,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 957,
                  "name": "validAddress",
                  "nameLocations": [
                    "12819:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9061,
                  "src": "12819:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12819:33:0"
              },
              {
                "arguments": [
                  {
                    "id": 964,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 945,
                    "src": "12877:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 963,
                  "name": "greaterThanZero",
                  "nameLocations": [
                    "12861:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9037,
                  "src": "12861:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12861:23:0"
              },
              {
                "id": 967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 966,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "12893:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53981,
                  "src": "12893:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12893:12:0"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "12607:12:0",
            "parameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12635:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "12629:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 942,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 941,
                      "name": "Token",
                      "nameLocations": [
                        "12629:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "12629:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "12629:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12658:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "12650:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12650:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12682:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "12674:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12674:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12619:78:0"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 980,
                  "src": "12923:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12923:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12922:9:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 991,
            "nodeType": "FunctionDefinition",
            "src": "13175:90:0",
            "nodes": [],
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "13240:25:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 987,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53915,
                      "src": "13250:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13250:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "13250:8:0"
                }
              ]
            },
            "documentation": {
              "id": 981,
              "nodeType": "StructuredDocumentation",
              "src": "13017:153:0",
              "text": " @dev pauses the CarbonController\n requirements:\n - the caller must have the ROLE_EMERGENCY_STOPPER privilege"
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 984,
                    "name": "ROLE_EMERGENCY_STOPPER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "13216:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 983,
                  "name": "onlyRoleMember",
                  "nameLocations": [
                    "13201:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8936,
                  "src": "13201:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13201:38:0"
              }
            ],
            "name": "pause",
            "nameLocation": "13184:5:0",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13189:2:0"
            },
            "returnParameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13240:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1002,
            "nodeType": "FunctionDefinition",
            "src": "13430:94:0",
            "nodes": [],
            "body": {
              "id": 1001,
              "nodeType": "Block",
              "src": "13497:27:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 998,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53931,
                      "src": "13507:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13507:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "13507:10:0"
                }
              ]
            },
            "documentation": {
              "id": 992,
              "nodeType": "StructuredDocumentation",
              "src": "13271:154:0",
              "text": " @dev resumes the CarbonController\n requirements:\n - the caller must have the ROLE_EMERGENCY_STOPPER privilege"
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 995,
                    "name": "ROLE_EMERGENCY_STOPPER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "13473:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 996,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 994,
                  "name": "onlyRoleMember",
                  "nameLocations": [
                    "13458:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8936,
                  "src": "13458:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13458:38:0"
              }
            ],
            "name": "unpause",
            "nameLocation": "13439:7:0",
            "parameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13446:2:0"
            },
            "returnParameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13497:0:0"
            },
            "scope": 1082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1033,
            "nodeType": "FunctionDefinition",
            "src": "13611:253:0",
            "nodes": [],
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "13774:90:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    },
                    "function": 7501,
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1024,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1006,
                      "src": "13788:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                        "typeString": "Token"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1025,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1009,
                      "src": "13798:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                        "typeString": "Token"
                      }
                    },
                    "src": "13788:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1031,
                  "nodeType": "IfStatement",
                  "src": "13784:74:0",
                  "trueBody": {
                    "id": 1030,
                    "nodeType": "Block",
                    "src": "13806:52:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1027,
                            "name": "IdenticalAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "13827:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13827:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1029,
                        "nodeType": "RevertStatement",
                        "src": "13820:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1003,
              "nodeType": "StructuredDocumentation",
              "src": "13530:76:0",
              "text": " @dev validates both tokens are valid addresses and unique"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1014,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "13730:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "expression": {
                        "id": 1012,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "13717:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Token_$7445_$",
                          "typeString": "type(Token)"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13723:6:0",
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "src": "13717:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_address_$",
                        "typeString": "function (Token) pure returns (address)"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13717:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1016,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1011,
                  "name": "validAddress",
                  "nameLocations": [
                    "13704:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9061,
                  "src": "13704:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13704:34:0"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1020,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "13765:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "expression": {
                        "id": 1018,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7445,
                        "src": "13752:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Token_$7445_$",
                          "typeString": "type(Token)"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13758:6:0",
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "src": "13752:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_address_$",
                        "typeString": "function (Token) pure returns (address)"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13752:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1017,
                  "name": "validAddress",
                  "nameLocations": [
                    "13739:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9061,
                  "src": "13739:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13739:34:0"
              }
            ],
            "name": "_validateInputTokens",
            "nameLocation": "13620:20:0",
            "parameters": {
              "id": 1010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "13656:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "13650:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 1005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1004,
                      "name": "Token",
                      "nameLocations": [
                        "13650:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "13650:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "13650:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "13678:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "13672:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 1008,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1007,
                      "name": "Token",
                      "nameLocations": [
                        "13672:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "13672:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "13672:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13640:50:0"
            },
            "returnParameters": {
              "id": 1023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13774:0:0"
            },
            "scope": 1082,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1081,
            "nodeType": "FunctionDefinition",
            "src": "13952:723:0",
            "nodes": [],
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "14132:543:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1049,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "14187:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1050,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "14198:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14204:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "14198:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14187:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1057,
                  "nodeType": "IfStatement",
                  "src": "14183:81:0",
                  "trueBody": {
                    "id": 1056,
                    "nodeType": "Block",
                    "src": "14215:49:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1053,
                            "name": "DeadlineExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "14236:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14236:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1055,
                        "nodeType": "RevertStatement",
                        "src": "14229:24:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1059,
                        "name": "constraint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "14332:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1058,
                      "name": "_greaterThanZero",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9051,
                      "src": "14315:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) pure"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14315:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "14315:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1063,
                        "name": "sourceToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "14431:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      },
                      {
                        "id": 1064,
                        "name": "targetToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1040,
                        "src": "14444:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                          "typeString": "Token"
                        }
                      ],
                      "id": 1062,
                      "name": "_validateInputTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "14410:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$_t_userDefinedValueType$_Token_$7445_$returns$__$",
                        "typeString": "function (Token,Token) pure"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14410:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "14410:46:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1067,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "14567:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14575:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14567:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "14580:23:0",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1070,
                            "name": "sourceToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "14581:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                              "typeString": "Token"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14593:8:0",
                          "memberName": "isNative",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7537,
                          "src": "14581:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Token_$7445_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Token_$7445_$",
                            "typeString": "function (Token) pure returns (bool)"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14581:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14567:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1079,
                  "nodeType": "IfStatement",
                  "src": "14563:106:0",
                  "trueBody": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "14605:64:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1075,
                            "name": "UnnecessaryNativeTokenReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "14626:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14626:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1077,
                        "nodeType": "RevertStatement",
                        "src": "14619:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1034,
              "nodeType": "StructuredDocumentation",
              "src": "13870:77:0",
              "text": " performs all necessary validations on the trade parameters"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateTradeParams",
            "nameLocation": "13961:20:0",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "sourceToken",
                  "nameLocation": "13997:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "13991:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 1036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1035,
                      "name": "Token",
                      "nameLocations": [
                        "13991:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "13991:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "13991:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "targetToken",
                  "nameLocation": "14024:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "14018:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 1039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1038,
                      "name": "Token",
                      "nameLocations": [
                        "14018:5:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "14018:5:0"
                    },
                    "referencedDeclaration": 7445,
                    "src": "14018:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "14053:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "14045:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14045:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14079:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "14071:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14071:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "constraint",
                  "nameLocation": "14102:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "14094:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14094:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13981:137:0"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14132:0:0"
            },
            "scope": 1082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33,
              "name": "ICarbonController",
              "nameLocations": [
                "1001:17:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4463,
              "src": "1001:17:0"
            },
            "id": 34,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:17:0"
          },
          {
            "baseName": {
              "id": 35,
              "name": "Pairs",
              "nameLocations": [
                "1024:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1454,
              "src": "1024:5:0"
            },
            "id": 36,
            "nodeType": "InheritanceSpecifier",
            "src": "1024:5:0"
          },
          {
            "baseName": {
              "id": 37,
              "name": "Strategies",
              "nameLocations": [
                "1035:10:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4215,
              "src": "1035:10:0"
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "1035:10:0"
          },
          {
            "baseName": {
              "id": 39,
              "name": "Upgradeable",
              "nameLocations": [
                "1051:11:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9007,
              "src": "1051:11:0"
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "1051:11:0"
          },
          {
            "baseName": {
              "id": 41,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1068:26:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54021,
              "src": "1068:26:0"
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "1068:26:0"
          },
          {
            "baseName": {
              "id": 43,
              "name": "PausableUpgradeable",
              "nameLocations": [
                "1100:19:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53937,
              "src": "1100:19:0"
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "1100:19:0"
          },
          {
            "baseName": {
              "id": 45,
              "name": "OnlyProxyDelegate",
              "nameLocations": [
                "1125:17:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8849,
              "src": "1125:17:0"
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "1125:17:0"
          },
          {
            "baseName": {
              "id": 47,
              "name": "Utils",
              "nameLocations": [
                "1148:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9103,
              "src": "1148:5:0"
            },
            "id": 48,
            "nodeType": "InheritanceSpecifier",
            "src": "1148:5:0"
          }
        ],
        "canonicalName": "CarbonController",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32,
          "nodeType": "StructuredDocumentation",
          "src": "925:42:0",
          "text": " @dev Carbon Controller contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1082,
          9103,
          8849,
          53937,
          54021,
          9007,
          53204,
          53540,
          55779,
          55791,
          4215,
          1454,
          4463,
          9115,
          9124,
          53565,
          53638,
          55506,
          53810
        ],
        "name": "CarbonController",
        "nameLocation": "977:16:0",
        "scope": 1083,
        "usedErrors": [
          70,
          72,
          74,
          76,
          1102,
          1104,
          1544,
          1546,
          1548,
          1550,
          1552,
          1554,
          1556,
          1558,
          1560,
          1562,
          1564,
          7892,
          8816,
          8866,
          9015,
          9017,
          9019,
          9021,
          9023
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 0
}