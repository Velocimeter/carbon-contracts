{
  "abi": [
    {
      "inputs": [],
      "name": "InsufficientAmountForTrading",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientNativeTokenSent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTrade",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TradingDisabled",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "prevEthSaleAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newEthSaleAmount",
          "type": "uint128"
        }
      ],
      "name": "EthSaleAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "prevMarketPriceMultiply",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newMarketPriceMultiply",
          "type": "uint32"
        }
      ],
      "name": "MarketPriceMultiplyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "prevMinEthSaleAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "newMinEthSaleAmount",
          "type": "uint128"
        }
      ],
      "name": "MinEthSaleAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "prevPriceDecayHalfLife",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newPriceDecayHalfLife",
          "type": "uint32"
        }
      ],
      "name": "PriceDecayHalfLifeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct ICarbonPOL.Price",
          "name": "price",
          "type": "tuple"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "sourceAmount",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "targetAmount",
          "type": "uint128"
        }
      ],
      "name": "TokenTraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ],
          "indexed": false,
          "internalType": "struct ICarbonPOL.Price",
          "name": "price",
          "type": "tuple"
        }
      ],
      "name": "TradingEnabled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "amountAvailableForTrading",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethSaleAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "initial",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "current",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICarbonPOL.EthSaleAmount",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "targetAmount",
          "type": "uint128"
        }
      ],
      "name": "expectedTradeInput",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "sourceAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "sourceAmount",
          "type": "uint128"
        }
      ],
      "name": "expectedTradeReturn",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "targetAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketPriceMultiply",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minEthSaleAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDecayHalfLife",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICarbonPOL.Price",
          "name": "price",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "targetAmount",
          "type": "uint128"
        }
      ],
      "name": "trade",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Token",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tradingEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "amountAvailableForTrading(address)": "eec245e2",
    "ethSaleAmount()": "fc7499b9",
    "expectedTradeInput(address,uint128)": "a7ae00d2",
    "expectedTradeReturn(address,uint128)": "82431688",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "marketPriceMultiply()": "4cb0821e",
    "minEthSaleAmount()": "b88da7b1",
    "priceDecayHalfLife()": "63ee9e4e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "tokenPrice(address)": "84ba3f69",
    "trade(address,uint128)": "4747919d",
    "tradingEnabled(address)": "bedf9525",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientAmountForTrading\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientNativeTokenSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTrade\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradingDisabled\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"prevEthSaleAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newEthSaleAmount\",\"type\":\"uint128\"}],\"name\":\"EthSaleAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"prevMarketPriceMultiply\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newMarketPriceMultiply\",\"type\":\"uint32\"}],\"name\":\"MarketPriceMultiplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"prevMinEthSaleAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"newMinEthSaleAmount\",\"type\":\"uint128\"}],\"name\":\"MinEthSaleAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"prevPriceDecayHalfLife\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newPriceDecayHalfLife\",\"type\":\"uint32\"}],\"name\":\"PriceDecayHalfLifeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct ICarbonPOL.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"name\":\"TokenTraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"indexed\":false,\"internalType\":\"struct ICarbonPOL.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"name\":\"TradingEnabled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"amountAvailableForTrading\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethSaleAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"initial\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"current\",\"type\":\"uint128\"}],\"internalType\":\"struct ICarbonPOL.EthSaleAmount\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"name\":\"expectedTradeInput\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"}],\"name\":\"expectedTradeReturn\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketPriceMultiply\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minEthSaleAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDecayHalfLife\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"sourceAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"internalType\":\"struct ICarbonPOL.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"targetAmount\",\"type\":\"uint128\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Token\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"events\":{\"EthSaleAmountUpdated(uint128,uint128)\":{\"notice\":\"triggered when the eth sale amount is updated\"},\"MarketPriceMultiplyUpdated(uint32,uint32)\":{\"notice\":\"triggered when the market price multiplier is updated\"},\"MinEthSaleAmountUpdated(uint128,uint128)\":{\"notice\":\"triggered when the min eth sale amount is updated\"},\"PriceDecayHalfLifeUpdated(uint32,uint32)\":{\"notice\":\"triggered when the price decay halflife is updated\"},\"PriceUpdated(address,(uint128,uint128))\":{\"notice\":\"triggered after an eth trade leaves less than 10% of the initial eth sale amount\"},\"TokenTraded(address,address,uint128,uint128)\":{\"notice\":\"triggered after a successful trade is executed\"},\"TradingEnabled(address,(uint128,uint128))\":{\"notice\":\"triggered when trading is enabled for a token\"}},\"kind\":\"user\",\"methods\":{\"amountAvailableForTrading(address)\":{\"notice\":\"returns the amount available for trading for the token\"},\"ethSaleAmount()\":{\"notice\":\"returns the initial and current eth sale amount\"},\"expectedTradeInput(address,uint128)\":{\"notice\":\"returns the source amount required given a target amount\"},\"expectedTradeReturn(address,uint128)\":{\"notice\":\"returns the target amount expected given a source amount\"},\"marketPriceMultiply()\":{\"notice\":\"returns the market price multiplier\"},\"minEthSaleAmount()\":{\"notice\":\"returns the min eth sale amount\"},\"priceDecayHalfLife()\":{\"notice\":\"returns the price decay half-life according to the exp decay formula\"},\"tokenPrice(address)\":{\"notice\":\"returns the current token price (ETH / TKN)if token == ETH, returns BNT / ETH price\"},\"trade(address,uint128)\":{\"notice\":\"trades ETH for *targetAmount* of token based on the current token price (trade by target amount)if token == ETH, trades BNT for amount of ETH and alsoresets the current eth sale amount if it's below the min amount after a trade\"},\"tradingEnabled(address)\":{\"notice\":\"returns true if trading is enabled for token\"}},\"notice\":\"CarbonPOL interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pol/interfaces/ICarbonPOL.sol\":\"ICarbonPOL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@bancor/=node_modules/@bancor/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@mean-finance/=node_modules/@mean-finance/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/pol/interfaces/ICarbonPOL.sol\":{\"keccak256\":\"0x862657eeb34df1218a5655ed3288c3859828fba91bf048b573098fd21810f6da\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://0faa09af949db9b764c4bfda46c1020f7ff7bac4147ac741c801d34a60451548\",\"dweb:/ipfs/QmTCcuQkE5rkR7oHsB8VLVCP3re5QYxd3x6BrFYUfYGk6k\"]},\"contracts/token/Token.sol\":{\"keccak256\":\"0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521\",\"dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi\"]},\"contracts/utility/interfaces/IUpgradeable.sol\":{\"keccak256\":\"0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978\",\"dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU\"]},\"contracts/utility/interfaces/IVersioned.sol\":{\"keccak256\":\"0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51\",\"dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientAmountForTrading"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientNativeTokenSent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTrade"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TradingDisabled"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "prevEthSaleAmount",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newEthSaleAmount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EthSaleAmountUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "prevMarketPriceMultiply",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newMarketPriceMultiply",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MarketPriceMultiplyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "prevMinEthSaleAmount",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "newMinEthSaleAmount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MinEthSaleAmountUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "prevPriceDecayHalfLife",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "newPriceDecayHalfLife",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PriceDecayHalfLifeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ICarbonPOL.Price",
              "name": "price",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "sourceAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "targetAmount",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Token",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenTraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct ICarbonPOL.Price",
              "name": "price",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "sourceAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "targetAmount",
                  "type": "uint128"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TradingEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "amountAvailableForTrading",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ethSaleAmount",
          "outputs": [
            {
              "internalType": "struct ICarbonPOL.EthSaleAmount",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "initial",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "current",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expectedTradeInput",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "sourceAmount",
              "type": "uint128"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expectedTradeReturn",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "marketPriceMultiply",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minEthSaleAmount",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceDecayHalfLife",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenPrice",
          "outputs": [
            {
              "internalType": "struct ICarbonPOL.Price",
              "name": "price",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "sourceAmount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "targetAmount",
                  "type": "uint128"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "targetAmount",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "trade"
        },
        {
          "inputs": [
            {
              "internalType": "Token",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tradingEnabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "amountAvailableForTrading(address)": {
            "notice": "returns the amount available for trading for the token"
          },
          "ethSaleAmount()": {
            "notice": "returns the initial and current eth sale amount"
          },
          "expectedTradeInput(address,uint128)": {
            "notice": "returns the source amount required given a target amount"
          },
          "expectedTradeReturn(address,uint128)": {
            "notice": "returns the target amount expected given a source amount"
          },
          "marketPriceMultiply()": {
            "notice": "returns the market price multiplier"
          },
          "minEthSaleAmount()": {
            "notice": "returns the min eth sale amount"
          },
          "priceDecayHalfLife()": {
            "notice": "returns the price decay half-life according to the exp decay formula"
          },
          "tokenPrice(address)": {
            "notice": "returns the current token price (ETH / TKN)if token == ETH, returns BNT / ETH price"
          },
          "trade(address,uint128)": {
            "notice": "trades ETH for *targetAmount* of token based on the current token price (trade by target amount)if token == ETH, trades BNT for amount of ETH and alsoresets the current eth sale amount if it's below the min amount after a trade"
          },
          "tradingEnabled(address)": {
            "notice": "returns true if trading is enabled for token"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@bancor/=node_modules/@bancor/",
        "@ensdomains/=node_modules/@ensdomains/",
        "@mean-finance/=node_modules/@mean-finance/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "@rari-capital/=node_modules/@rari-capital/",
        "@uniswap/=node_modules/@uniswap/",
        "base64-sol/=node_modules/base64-sol/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/pol/interfaces/ICarbonPOL.sol": "ICarbonPOL"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/pol/interfaces/ICarbonPOL.sol": {
        "keccak256": "0x862657eeb34df1218a5655ed3288c3859828fba91bf048b573098fd21810f6da",
        "urls": [
          "bzz-raw://0faa09af949db9b764c4bfda46c1020f7ff7bac4147ac741c801d34a60451548",
          "dweb:/ipfs/QmTCcuQkE5rkR7oHsB8VLVCP3re5QYxd3x6BrFYUfYGk6k"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/token/Token.sol": {
        "keccak256": "0xe3b5a35bd3a75be705b6de9618db1ecf49ea738c7187d874dc5a0a0d2cf81f53",
        "urls": [
          "bzz-raw://f3c89f9a1609fdbf873d51af9e3846c7469f66b31e08429f85089b5ee3e85521",
          "dweb:/ipfs/QmZq75X5qJTEgMfaAm39G42xBDtpiyQ1Hx48KQtjLC2gPi"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IUpgradeable.sol": {
        "keccak256": "0xcc42138a568e5b5e6e1b96402d351ea04627e03bf24c0b62439910d3fda2773c",
        "urls": [
          "bzz-raw://1e565b58ac5be1d3f9016d06ef75acfbec80d53e533d711c8a7e219b21bcc978",
          "dweb:/ipfs/QmVgRbwXZHN9CT6fCBE2a7eDvCBKQz2RHuy58FgSPMHmVU"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "contracts/utility/interfaces/IVersioned.sol": {
        "keccak256": "0xa5068bacf412d0eac67377cfed9cc2bd6b36099cc4bba9f360a38d05a7bf4a04",
        "urls": [
          "bzz-raw://c740479f5afd2e567b9436fb85f0feaf96067165621d2b049858c3164a8d1c51",
          "dweb:/ipfs/QmQT9CkwZahKii2tEK4aWF5Jist8Ri7zVemjkLyEPrACif"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa",
        "urls": [
          "bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4",
          "dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pol/interfaces/ICarbonPOL.sol",
    "id": 7384,
    "exportedSymbols": {
      "ICarbonPOL": [
        7383
      ],
      "IUpgradeable": [
        9115
      ],
      "Token": [
        7445
      ]
    },
    "nodeType": "SourceUnit",
    "src": "51:3682:23",
    "nodes": [
      {
        "id": 7211,
        "nodeType": "PragmaDirective",
        "src": "51:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 7213,
        "nodeType": "ImportDirective",
        "src": "76:73:23",
        "nodes": [],
        "absolutePath": "contracts/utility/interfaces/IUpgradeable.sol",
        "file": "../../utility/interfaces/IUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7384,
        "sourceUnit": 9116,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7212,
              "name": "IUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9115,
              "src": "85:12:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7215,
        "nodeType": "ImportDirective",
        "src": "150:46:23",
        "nodes": [],
        "absolutePath": "contracts/token/Token.sol",
        "file": "../../token/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 7384,
        "sourceUnit": 7801,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7214,
              "name": "Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7445,
              "src": "159:5:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7383,
        "nodeType": "ContractDefinition",
        "src": "237:3495:23",
        "nodes": [
          {
            "id": 7220,
            "nodeType": "ErrorDefinition",
            "src": "280:21:23",
            "nodes": [],
            "errorSelector": "c1ab6dc1",
            "name": "InvalidToken",
            "nameLocation": "286:12:23",
            "parameters": {
              "id": 7219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:2:23"
            }
          },
          {
            "id": 7222,
            "nodeType": "ErrorDefinition",
            "src": "306:21:23",
            "nodes": [],
            "errorSelector": "00bfc921",
            "name": "InvalidPrice",
            "nameLocation": "312:12:23",
            "parameters": {
              "id": 7221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:23"
            }
          },
          {
            "id": 7224,
            "nodeType": "ErrorDefinition",
            "src": "332:21:23",
            "nodes": [],
            "errorSelector": "d69b5379",
            "name": "InvalidTrade",
            "nameLocation": "338:12:23",
            "parameters": {
              "id": 7223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "350:2:23"
            }
          },
          {
            "id": 7226,
            "nodeType": "ErrorDefinition",
            "src": "358:24:23",
            "nodes": [],
            "errorSelector": "bcb8b8fb",
            "name": "TradingDisabled",
            "nameLocation": "364:15:23",
            "parameters": {
              "id": 7225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:2:23"
            }
          },
          {
            "id": 7228,
            "nodeType": "ErrorDefinition",
            "src": "387:36:23",
            "nodes": [],
            "errorSelector": "9086bdc1",
            "name": "InsufficientNativeTokenSent",
            "nameLocation": "393:27:23",
            "parameters": {
              "id": 7227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "420:2:23"
            }
          },
          {
            "id": 7230,
            "nodeType": "ErrorDefinition",
            "src": "428:37:23",
            "nodes": [],
            "errorSelector": "8e26ecdf",
            "name": "InsufficientAmountForTrading",
            "nameLocation": "434:28:23",
            "parameters": {
              "id": 7229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:2:23"
            }
          },
          {
            "id": 7235,
            "nodeType": "StructDefinition",
            "src": "471:80:23",
            "nodes": [],
            "canonicalName": "ICarbonPOL.Price",
            "members": [
              {
                "constant": false,
                "id": 7232,
                "mutability": "mutable",
                "name": "sourceAmount",
                "nameLocation": "502:12:23",
                "nodeType": "VariableDeclaration",
                "scope": 7235,
                "src": "494:20:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7231,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7234,
                "mutability": "mutable",
                "name": "targetAmount",
                "nameLocation": "532:12:23",
                "nodeType": "VariableDeclaration",
                "scope": 7235,
                "src": "524:20:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7233,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Price",
            "nameLocation": "478:5:23",
            "scope": 7383,
            "visibility": "public"
          },
          {
            "id": 7240,
            "nodeType": "StructDefinition",
            "src": "557:78:23",
            "nodes": [],
            "canonicalName": "ICarbonPOL.EthSaleAmount",
            "members": [
              {
                "constant": false,
                "id": 7237,
                "mutability": "mutable",
                "name": "initial",
                "nameLocation": "596:7:23",
                "nodeType": "VariableDeclaration",
                "scope": 7240,
                "src": "588:15:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7236,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7239,
                "mutability": "mutable",
                "name": "current",
                "nameLocation": "621:7:23",
                "nodeType": "VariableDeclaration",
                "scope": 7240,
                "src": "613:15:23",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 7238,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "613:7:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "EthSaleAmount",
            "nameLocation": "564:13:23",
            "scope": 7383,
            "visibility": "public"
          },
          {
            "id": 7249,
            "nodeType": "EventDefinition",
            "src": "718:55:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7241,
              "nodeType": "StructuredDocumentation",
              "src": "641:72:23",
              "text": " @notice triggered when trading is enabled for a token"
            },
            "eventSelector": "ae3f48c001771f8e9868e24d47b9e4295b06b1d78072acf96f167074aa3fab64",
            "name": "TradingEnabled",
            "nameLocation": "724:14:23",
            "parameters": {
              "id": 7248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7244,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "753:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7249,
                  "src": "739:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7243,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7242,
                      "name": "Token",
                      "nameLocations": [
                        "739:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "739:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "739:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "766:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7249,
                  "src": "760:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$7235_memory_ptr",
                    "typeString": "struct ICarbonPOL.Price"
                  },
                  "typeName": {
                    "id": 7246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7245,
                      "name": "Price",
                      "nameLocations": [
                        "760:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7235,
                      "src": "760:5:23"
                    },
                    "referencedDeclaration": 7235,
                    "src": "760:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$7235_storage_ptr",
                      "typeString": "struct ICarbonPOL.Price"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "738:34:23"
            }
          },
          {
            "id": 7261,
            "nodeType": "EventDefinition",
            "src": "857:107:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7250,
              "nodeType": "StructuredDocumentation",
              "src": "779:73:23",
              "text": " @notice triggered after a successful trade is executed"
            },
            "eventSelector": "16ddee9b3f1b2e6f797172fe2cd10a214e749294074e075e451f95aecd0b958c",
            "name": "TokenTraded",
            "nameLocation": "863:11:23",
            "parameters": {
              "id": 7260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7252,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "891:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7261,
                  "src": "875:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7255,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "913:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7261,
                  "src": "899:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7254,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7253,
                      "name": "Token",
                      "nameLocations": [
                        "899:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "899:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "899:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7257,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceAmount",
                  "nameLocation": "928:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7261,
                  "src": "920:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7256,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7259,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAmount",
                  "nameLocation": "950:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7261,
                  "src": "942:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7258,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "874:89:23"
            }
          },
          {
            "id": 7270,
            "nodeType": "EventDefinition",
            "src": "1082:53:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7262,
              "nodeType": "StructuredDocumentation",
              "src": "970:107:23",
              "text": " @notice triggered after an eth trade leaves less than 10% of the initial eth sale amount"
            },
            "eventSelector": "aa86acbf67bc5e97ce95471a279336f9fa5bd2ac8f64e81ac442a0972b0c633b",
            "name": "PriceUpdated",
            "nameLocation": "1088:12:23",
            "parameters": {
              "id": 7269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7265,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1115:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7270,
                  "src": "1101:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7263,
                      "name": "Token",
                      "nameLocations": [
                        "1101:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "1101:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "1101:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7268,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1128:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7270,
                  "src": "1122:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$7235_memory_ptr",
                    "typeString": "struct ICarbonPOL.Price"
                  },
                  "typeName": {
                    "id": 7267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7266,
                      "name": "Price",
                      "nameLocations": [
                        "1122:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7235,
                      "src": "1122:5:23"
                    },
                    "referencedDeclaration": 7235,
                    "src": "1122:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$7235_storage_ptr",
                      "typeString": "struct ICarbonPOL.Price"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1100:34:23"
            }
          },
          {
            "id": 7277,
            "nodeType": "EventDefinition",
            "src": "1226:96:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7271,
              "nodeType": "StructuredDocumentation",
              "src": "1141:80:23",
              "text": " @notice triggered when the market price multiplier is updated"
            },
            "eventSelector": "04ee60e68c7a4f836ca7ca7f5d9772049ac5846fc054b0d809e0e3de754952b0",
            "name": "MarketPriceMultiplyUpdated",
            "nameLocation": "1232:26:23",
            "parameters": {
              "id": 7276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7273,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevMarketPriceMultiply",
                  "nameLocation": "1266:23:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7277,
                  "src": "1259:30:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7272,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7275,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMarketPriceMultiply",
                  "nameLocation": "1298:22:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7277,
                  "src": "1291:29:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7274,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:63:23"
            }
          },
          {
            "id": 7284,
            "nodeType": "EventDefinition",
            "src": "1410:93:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7278,
              "nodeType": "StructuredDocumentation",
              "src": "1328:77:23",
              "text": " @notice triggered when the price decay halflife is updated"
            },
            "eventSelector": "91a3ff80be5536f6b4a03994984844ded4c1470ac2e7c1a1f9445464358788c3",
            "name": "PriceDecayHalfLifeUpdated",
            "nameLocation": "1416:25:23",
            "parameters": {
              "id": 7283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7280,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevPriceDecayHalfLife",
                  "nameLocation": "1449:22:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7284,
                  "src": "1442:29:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7279,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7282,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPriceDecayHalfLife",
                  "nameLocation": "1480:21:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7284,
                  "src": "1473:28:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7281,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:61:23"
            }
          },
          {
            "id": 7291,
            "nodeType": "EventDefinition",
            "src": "1586:80:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7285,
              "nodeType": "StructuredDocumentation",
              "src": "1509:72:23",
              "text": " @notice triggered when the eth sale amount is updated"
            },
            "eventSelector": "85e15b0826727feb528c06e9d1eec6c462de224bbb5b7c737824ae09ea83a7bc",
            "name": "EthSaleAmountUpdated",
            "nameLocation": "1592:20:23",
            "parameters": {
              "id": 7290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7287,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevEthSaleAmount",
                  "nameLocation": "1621:17:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "1613:25:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7286,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7289,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newEthSaleAmount",
                  "nameLocation": "1648:16:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7291,
                  "src": "1640:24:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7288,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1612:53:23"
            }
          },
          {
            "id": 7298,
            "nodeType": "EventDefinition",
            "src": "1753:89:23",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 7292,
              "nodeType": "StructuredDocumentation",
              "src": "1672:76:23",
              "text": " @notice triggered when the min eth sale amount is updated"
            },
            "eventSelector": "ab3e74195d9db5b0262eea6c76eda46ba8bb5aed6f36164adbce526d219596d1",
            "name": "MinEthSaleAmountUpdated",
            "nameLocation": "1759:23:23",
            "parameters": {
              "id": 7297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7294,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevMinEthSaleAmount",
                  "nameLocation": "1791:20:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "1783:28:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7293,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7296,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newMinEthSaleAmount",
                  "nameLocation": "1821:19:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7298,
                  "src": "1813:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7295,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:59:23"
            }
          },
          {
            "id": 7304,
            "nodeType": "FunctionDefinition",
            "src": "1915:62:23",
            "nodes": [],
            "documentation": {
              "id": 7299,
              "nodeType": "StructuredDocumentation",
              "src": "1848:62:23",
              "text": " @notice returns the market price multiplier"
            },
            "functionSelector": "4cb0821e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketPriceMultiply",
            "nameLocation": "1924:19:23",
            "parameters": {
              "id": 7300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1943:2:23"
            },
            "returnParameters": {
              "id": 7303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7304,
                  "src": "1969:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7301,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1968:8:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7310,
            "nodeType": "FunctionDefinition",
            "src": "2083:61:23",
            "nodes": [],
            "documentation": {
              "id": 7305,
              "nodeType": "StructuredDocumentation",
              "src": "1983:95:23",
              "text": " @notice returns the price decay half-life according to the exp decay formula"
            },
            "functionSelector": "63ee9e4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "priceDecayHalfLife",
            "nameLocation": "2092:18:23",
            "parameters": {
              "id": 7306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2110:2:23"
            },
            "returnParameters": {
              "id": 7309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7310,
                  "src": "2136:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 7307,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2135:8:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7317,
            "nodeType": "FunctionDefinition",
            "src": "2229:70:23",
            "nodes": [],
            "documentation": {
              "id": 7311,
              "nodeType": "StructuredDocumentation",
              "src": "2150:74:23",
              "text": " @notice returns the initial and current eth sale amount"
            },
            "functionSelector": "fc7499b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ethSaleAmount",
            "nameLocation": "2238:13:23",
            "parameters": {
              "id": 7312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2251:2:23"
            },
            "returnParameters": {
              "id": 7316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7317,
                  "src": "2277:20:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EthSaleAmount_$7240_memory_ptr",
                    "typeString": "struct ICarbonPOL.EthSaleAmount"
                  },
                  "typeName": {
                    "id": 7314,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7313,
                      "name": "EthSaleAmount",
                      "nameLocations": [
                        "2277:13:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7240,
                      "src": "2277:13:23"
                    },
                    "referencedDeclaration": 7240,
                    "src": "2277:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EthSaleAmount_$7240_storage_ptr",
                      "typeString": "struct ICarbonPOL.EthSaleAmount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2276:22:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7323,
            "nodeType": "FunctionDefinition",
            "src": "2368:60:23",
            "nodes": [],
            "documentation": {
              "id": 7318,
              "nodeType": "StructuredDocumentation",
              "src": "2305:58:23",
              "text": " @notice returns the min eth sale amount"
            },
            "functionSelector": "b88da7b1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "minEthSaleAmount",
            "nameLocation": "2377:16:23",
            "parameters": {
              "id": 7319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2393:2:23"
            },
            "returnParameters": {
              "id": 7322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7323,
                  "src": "2419:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7320,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:9:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7332,
            "nodeType": "FunctionDefinition",
            "src": "2510:66:23",
            "nodes": [],
            "documentation": {
              "id": 7324,
              "nodeType": "StructuredDocumentation",
              "src": "2434:71:23",
              "text": " @notice returns true if trading is enabled for token"
            },
            "functionSelector": "bedf9525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tradingEnabled",
            "nameLocation": "2519:14:23",
            "parameters": {
              "id": 7328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7327,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2540:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7332,
                  "src": "2534:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7325,
                      "name": "Token",
                      "nameLocations": [
                        "2534:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "2534:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "2534:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2533:13:23"
            },
            "returnParameters": {
              "id": 7331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7332,
                  "src": "2570:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7329,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:6:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7341,
            "nodeType": "FunctionDefinition",
            "src": "2668:80:23",
            "nodes": [],
            "documentation": {
              "id": 7333,
              "nodeType": "StructuredDocumentation",
              "src": "2582:81:23",
              "text": " @notice returns the amount available for trading for the token"
            },
            "functionSelector": "eec245e2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "amountAvailableForTrading",
            "nameLocation": "2677:25:23",
            "parameters": {
              "id": 7337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7336,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2709:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "2703:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7335,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7334,
                      "name": "Token",
                      "nameLocations": [
                        "2703:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "2703:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "2703:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2702:13:23"
            },
            "returnParameters": {
              "id": 7340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7339,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7341,
                  "src": "2739:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7338,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2738:9:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7352,
            "nodeType": "FunctionDefinition",
            "src": "2842:109:23",
            "nodes": [],
            "documentation": {
              "id": 7342,
              "nodeType": "StructuredDocumentation",
              "src": "2754:83:23",
              "text": " @notice returns the target amount expected given a source amount"
            },
            "functionSelector": "82431688",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expectedTradeReturn",
            "nameLocation": "2851:19:23",
            "parameters": {
              "id": 7348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7345,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2877:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7352,
                  "src": "2871:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7343,
                      "name": "Token",
                      "nameLocations": [
                        "2871:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "2871:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "2871:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7347,
                  "mutability": "mutable",
                  "name": "sourceAmount",
                  "nameLocation": "2892:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7352,
                  "src": "2884:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7346,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:35:23"
            },
            "returnParameters": {
              "id": 7351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7350,
                  "mutability": "mutable",
                  "name": "targetAmount",
                  "nameLocation": "2937:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7352,
                  "src": "2929:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7349,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2929:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2928:22:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7363,
            "nodeType": "FunctionDefinition",
            "src": "3045:108:23",
            "nodes": [],
            "documentation": {
              "id": 7353,
              "nodeType": "StructuredDocumentation",
              "src": "2957:83:23",
              "text": " @notice returns the source amount required given a target amount"
            },
            "functionSelector": "a7ae00d2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "expectedTradeInput",
            "nameLocation": "3054:18:23",
            "parameters": {
              "id": 7359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7356,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3079:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7363,
                  "src": "3073:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7355,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7354,
                      "name": "Token",
                      "nameLocations": [
                        "3073:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3073:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3073:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7358,
                  "mutability": "mutable",
                  "name": "targetAmount",
                  "nameLocation": "3094:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7363,
                  "src": "3086:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7357,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3086:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3072:35:23"
            },
            "returnParameters": {
              "id": 7362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7361,
                  "mutability": "mutable",
                  "name": "sourceAmount",
                  "nameLocation": "3139:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7363,
                  "src": "3131:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7360,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3130:22:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7373,
            "nodeType": "FunctionDefinition",
            "src": "3290:76:23",
            "nodes": [],
            "documentation": {
              "id": 7364,
              "nodeType": "StructuredDocumentation",
              "src": "3159:126:23",
              "text": " @notice returns the current token price (ETH / TKN)\n @notice if token == ETH, returns BNT / ETH price"
            },
            "functionSelector": "84ba3f69",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenPrice",
            "nameLocation": "3299:10:23",
            "parameters": {
              "id": 7368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7367,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3316:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "3310:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7366,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7365,
                      "name": "Token",
                      "nameLocations": [
                        "3310:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3310:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3310:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3309:13:23"
            },
            "returnParameters": {
              "id": 7372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7371,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "3359:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7373,
                  "src": "3346:18:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Price_$7235_memory_ptr",
                    "typeString": "struct ICarbonPOL.Price"
                  },
                  "typeName": {
                    "id": 7370,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7369,
                      "name": "Price",
                      "nameLocations": [
                        "3346:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7235,
                      "src": "3346:5:23"
                    },
                    "referencedDeclaration": 7235,
                    "src": "3346:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Price_$7235_storage_ptr",
                      "typeString": "struct ICarbonPOL.Price"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3345:20:23"
            },
            "scope": 7383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 7382,
            "nodeType": "FunctionDefinition",
            "src": "3663:67:23",
            "nodes": [],
            "documentation": {
              "id": 7374,
              "nodeType": "StructuredDocumentation",
              "src": "3372:286:23",
              "text": " @notice trades ETH for *targetAmount* of token based on the current token price (trade by target amount)\n @notice if token == ETH, trades BNT for amount of ETH and also\n @notice resets the current eth sale amount if it's below the min amount after a trade"
            },
            "functionSelector": "4747919d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "trade",
            "nameLocation": "3672:5:23",
            "parameters": {
              "id": 7380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7377,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3684:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "3678:11:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                    "typeString": "Token"
                  },
                  "typeName": {
                    "id": 7376,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7375,
                      "name": "Token",
                      "nameLocations": [
                        "3678:5:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7445,
                      "src": "3678:5:23"
                    },
                    "referencedDeclaration": 7445,
                    "src": "3678:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Token_$7445",
                      "typeString": "Token"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7379,
                  "mutability": "mutable",
                  "name": "targetAmount",
                  "nameLocation": "3699:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7382,
                  "src": "3691:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 7378,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3691:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3677:35:23"
            },
            "returnParameters": {
              "id": 7381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3729:0:23"
            },
            "scope": 7383,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7217,
              "name": "IUpgradeable",
              "nameLocations": [
                "261:12:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9115,
              "src": "261:12:23"
            },
            "id": 7218,
            "nodeType": "InheritanceSpecifier",
            "src": "261:12:23"
          }
        ],
        "canonicalName": "ICarbonPOL",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7216,
          "nodeType": "StructuredDocumentation",
          "src": "198:38:23",
          "text": " @notice CarbonPOL interface"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          7383,
          9115,
          9124,
          53565,
          53638
        ],
        "name": "ICarbonPOL",
        "nameLocation": "247:10:23",
        "scope": 7384,
        "usedErrors": [
          7220,
          7222,
          7224,
          7226,
          7228,
          7230
        ]
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 23
}